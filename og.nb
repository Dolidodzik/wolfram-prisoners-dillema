Notebook[{

Cell[CellGroupData[{
Cell["The Iterated Prisoner's Dilemma", "Title",
 TaggingRules->{},
 CellChangeTimes->{{3.790648123116654*^9, 3.790648136935412*^9}, {
  3.79452052382508*^9, 3.794520524605741*^9}},
 CellTags->{"Name", "Title"},
 CellID->905603573,ExpressionUUID->"311dbb3a-47d1-41c1-b33a-2b056fe9d1f3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a3f70461-5a36-47f5-bef4-33ac85c17e22"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"7b51e823-cf29-4b12-8dac-4083f6a6eba1"],

Cell[TextData[{
 "The prisoner's dilemma is a two-player game in which each player (prisoner) \
can either \"cooperate\" (stay silent) or \"defect\" (betray the other \
prisoner). If both players cooperate, they each get a reward ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]], "InlineMath",ExpressionUUID->
  "0123c140-356d-4e62-ad00-0ed9b8b95e09"],
 "; if both defect, they will receive a punishment payoff ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "b597a954-640c-4666-bc13-39492fe4984b"],
 "; if one player defects and the other cooperates, the defecting player \
receives a temptation payoff ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "c598a0bc-1e7f-4132-9148-0c0a1ae1e644"],
 ", while the cooperating player receives a sucker payoff ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]], "InlineMath",ExpressionUUID->
  "6543ded7-603e-46db-afcb-46162dacbcbe"],
 ". In the standard form of the game, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", "3"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0cd1876e-e734-4e73-a4c9-dbfefb7322b7"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", "1"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "02dcedef-da75-4f4b-858f-014f26f7d9f0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", "5"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a40d6b1b-f22f-481f-82de-8deb66448ef6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", "0"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "b1c69c89-382f-4dcf-9daf-aebfc1780868"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790972176966249*^9, 3.7909721948269043`*^9}, {
   3.794320216037395*^9, 3.79432023292029*^9}, {3.794322800013423*^9, 
   3.794322815764616*^9}, {3.794323257927602*^9, 3.794323271849216*^9}, {
   3.794323374757625*^9, 3.7943234368365*^9}, {3.794323594199162*^9, 
   3.7943235986902037`*^9}, {3.794323643156527*^9, 3.794323663401148*^9}, {
   3.794323754696561*^9, 3.7943241009488297`*^9}, {3.797865351215596*^9, 
   3.797865403789569*^9}, {3.797865477195654*^9, 3.7978655151078176`*^9}, 
   3.797866853419132*^9, {3.7979479512446747`*^9, 3.797947970762504*^9}},
 CellID->127327716,ExpressionUUID->"04649e29-b1e3-49b9-8e9a-b94f06385a0d"],

Cell["\<\
This Demonstration illustrates the iterated prisoner's dilemma (IPD), in \
which two players repeatedly play the prisoner's dilemma game against each \
other. After choosing a strategy for each player, the Demonstration displays \
the average payoffs for the two players if the game is played a large number \
of rounds. The strategies implemented here are all memory-one strategies; \
that is, strategies that depend only on the actions (cooperate or defect) by \
each of the two players during the previous round of the game. Such \
strategies can be modeled by Markov chains. They include well-known \
strategies for the IPD, such as\[NonBreakingSpace] tit-for-tat (cooperate if \
the opponent cooperated in the last round, defect otherwise), equalizer \
strategies (strategies that force the opponent's payoff to be a particular \
value, no matter what strategy the opponent chooses) and extortionate \
strategies (strategies that ensure that a player's payoff always exceeds or \
equals the opponent's payoff).\[NonBreakingSpace]\[NonBreakingSpace]\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790972176966249*^9, 3.7909721948269043`*^9}, {
   3.794320216037395*^9, 3.79432023292029*^9}, {3.794322800013423*^9, 
   3.794322815764616*^9}, {3.794323257927602*^9, 3.794323271849216*^9}, {
   3.794323374757625*^9, 3.7943234368365*^9}, {3.794323594199162*^9, 
   3.7943235986902037`*^9}, {3.794323643156527*^9, 3.794323663401148*^9}, {
   3.794323754696561*^9, 3.7943241009488297`*^9}, {3.797865351215596*^9, 
   3.79786542985567*^9}, 3.797865541715933*^9, {3.797865614930797*^9, 
   3.7978656767262506`*^9}, {3.797865791903813*^9, 3.797865796089406*^9}, {
   3.798289041710373*^9, 3.798289064990757*^9}},
 CellID->2009848905,ExpressionUUID->"6972f33f-f3d6-4920-9da3-cf267f45659a"],

Cell["\<\
This Demonstration allows you to test the effects of different strategies. \
For example, select strategy SET-2 (an equalizer strategy) for player X and \
any of the preset or random strategies for player Y, then the payoff for X \
will vary depending on the strategy selected for Y, but the payoff for Y will \
always be 2.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790972176966249*^9, 3.7909721948269043`*^9}, {
   3.794320216037395*^9, 3.79432023292029*^9}, {3.794322800013423*^9, 
   3.794322815764616*^9}, {3.794323257927602*^9, 3.794323271849216*^9}, {
   3.794323374757625*^9, 3.7943234368365*^9}, {3.794323594199162*^9, 
   3.7943235986902037`*^9}, {3.794323643156527*^9, 3.794323663401148*^9}, {
   3.794323754696561*^9, 3.7943242754159946`*^9}, {3.794324313734708*^9, 
   3.794324486507278*^9}, {3.797865679797756*^9, 3.797865720792103*^9}, {
   3.798124310395321*^9, 3.7981243119549723`*^9}, 3.798289088727434*^9, {
   3.798289164760273*^9, 3.798289187481483*^9}},
 CellID->1210168543,ExpressionUUID->"6c2cbd96-ef38-43c8-bec8-ff595a1ca5e5"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4b76da94-a603-433b-8515-345cf48bc236"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"926eef6e-d91a-4b73-9964-3c9083f1bfcb"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"rounding", " ", "precision"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eps", "=", "0.01"}], ";"}], 
   StyleBox["\[IndentingNewLine]",
    Background->RGBColor[1, 1, 0]], 
   RowBox[{"(*", " ", 
    RowBox[{
    "probabilities", " ", "of", " ", "cooperation", " ", "in", " ", "first", 
     " ", "step"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pc", "=", "1"}], ";", 
    RowBox[{"qc", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "iterations"}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "20"}], ";"}], " ", "\[IndentingNewLine]"}]}]], "Input",
 
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.783112540994245*^9, 3.783112543434311*^9}, {
   3.78311259400231*^9, 3.7831126905361137`*^9}, 3.783112721941166*^9, {
   3.78311283622414*^9, 3.783112841291082*^9}, {3.7831128802710876`*^9, 
   3.783112882351355*^9}, {3.783113138332046*^9, 3.783113157614806*^9}, {
   3.7836308487089033`*^9, 3.783630870301941*^9}, {3.783630900609535*^9, 
   3.783630917288076*^9}, {3.783631684644116*^9, 3.783631694190996*^9}, {
   3.783647766420226*^9, 3.783647780574017*^9}, {3.783656925499876*^9, 
   3.783656957351914*^9}, {3.7836576446090307`*^9, 3.78365764524819*^9}, {
   3.78365769655961*^9, 3.783657700007255*^9}, {3.7836577618780727`*^9, 
   3.7836577957304163`*^9}, {3.784321134443574*^9, 3.7843211422607603`*^9}, {
   3.784321225523864*^9, 3.784321252692947*^9}, 3.7907055053357687`*^9, {
   3.790705779337359*^9, 3.790705780027782*^9}, {3.7943174355266047`*^9, 
   3.794317464688158*^9}, {3.794318481045816*^9, 3.794318484987936*^9}, {
   3.794319364487328*^9, 3.794319484776719*^9}, {3.794319782677013*^9, 
   3.79431979598018*^9}, {3.794320128745676*^9, 3.794320134905344*^9}, {
   3.7945147900620317`*^9, 3.794514803557638*^9}, {3.7978630799470263`*^9, 
   3.797863088298922*^9}},
 CellLabel->"In[1]:=",
 CellID->1680610328,ExpressionUUID->"3e977c58-251d-4146-8def-608890595f72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Transition", " ", "Graph", " ", "Function"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"graphplot", "[", 
    RowBox[{"matrix_", ",", "distribution_"}], "]"}], ":=", 
   "                           ", 
   RowBox[{"(*", 
    RowBox[{"Markov", " ", "Graph"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GraphPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "1"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"matrix", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "3"}], "]"}], "]"}], ",", "0.576"}], "]"}]}], 
        "}"}], ",", "                ", 
       RowBox[{"(*", 
        RowBox[{"Corresponds", " ", "to", " ", "Yellow", " ", "dc"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "2"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "3"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "4"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Rule]", "1"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "         ", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Rule]", "2"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"matrix", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "4"}], "]"}], "]"}], ",", "0.414"}], "]"}]}], 
        "}"}], ",", "                 ", 
       RowBox[{"(*", 
        RowBox[{"Corresponds", " ", "to", " ", "Blue", " ", "dd"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Rule]", "3"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Rule]", "4"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "\[Rule]", "1"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "         ", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "\[Rule]", "2"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "\[Rule]", "3"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"matrix", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "0.648"}], "]"}]}], 
        "}"}], ",", "                  ", 
       RowBox[{"(*", 
        RowBox[{"Corresponds", " ", "to", " ", "Orange", " ", "cd"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "\[Rule]", "4"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "\[Rule]", "1"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "          ", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "\[Rule]", "2"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "\[Rule]", "3"}], ",", 
         RowBox[{"matrix", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"4", "\[Rule]", "4"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"matrix", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "0.346"}], "]"}]}], 
        "}"}]}], "}"}], ",", "                ", 
     RowBox[{"(*", 
      RowBox[{"Corresponds", " ", "to", " ", "Purple", " ", "cc"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"EdgeLabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"13", ",", "Blue", ",", 
        RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<dc\>\"", ",", "25"}], "]"}], "]"}], ",", "Center"}],
           "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<dd\>\"", ",", "25"}], "]"}], "]"}], ",", "Center"}],
           "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<cd\>\"", ",", "25"}], "]"}], "]"}], ",", "Center"}],
           "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<cc\>\"", ",", "25"}], "]"}], "]"}], ",", "Center"}],
           "]"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<Circle\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"VertexSize", "\[Rule]", "0.51"}], ",", "\[IndentingNewLine]", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<DiscreteSpiralEmbedding\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"VertexStyle", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"White", ",", "Yellow"}], "}"}], ",", 
           RowBox[{"distribution", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"White", ",", "Blue"}], "}"}], ",", 
           RowBox[{"distribution", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"White", ",", "Orange"}], "}"}], ",", 
           RowBox[{"distribution", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"White", ",", "Purple"}], "}"}], ",", 
           RowBox[{"distribution", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "396"}]}], "]"}]}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.783112540994245*^9, 3.783112543434311*^9}, {
   3.78311259400231*^9, 3.7831126905361137`*^9}, 3.783112721941166*^9, {
   3.78311283622414*^9, 3.783112841291082*^9}, {3.7831128802710876`*^9, 
   3.783112882351355*^9}, {3.783113138332046*^9, 3.783113157614806*^9}, {
   3.7836308487089033`*^9, 3.783630870301941*^9}, {3.783630900609535*^9, 
   3.783630917288076*^9}, {3.783631684644116*^9, 3.783631694190996*^9}, {
   3.783647766420226*^9, 3.783647780574017*^9}, {3.783656925499876*^9, 
   3.783656990935108*^9}, {3.783657291884631*^9, 3.783657402561413*^9}, {
   3.7836575117161827`*^9, 3.7836575597892237`*^9}, {3.783657691645125*^9, 
   3.783657692329862*^9}, 3.783657788896408*^9, {3.784316991032219*^9, 
   3.7843169913933067`*^9}, {3.784317131830132*^9, 3.784317135009935*^9}, {
   3.784317388628016*^9, 3.784317505269927*^9}, {3.784317698118559*^9, 
   3.7843177011704187`*^9}, {3.784318058928149*^9, 3.784318234553494*^9}, {
   3.784320318023189*^9, 3.784320335645965*^9}, {3.784320417649032*^9, 
   3.7843204604245996`*^9}, {3.784320523561201*^9, 3.784320525206442*^9}, {
   3.784320779859445*^9, 3.784320782386704*^9}, {3.784321330374065*^9, 
   3.7843213309199867`*^9}, {3.784861670939576*^9, 3.7848616720248117`*^9}, {
   3.784913179443118*^9, 3.784913192006712*^9}, {3.784913425302071*^9, 
   3.784913425821169*^9}, {3.784925143608553*^9, 3.78492518136476*^9}, {
   3.790104703951866*^9, 3.790104704889978*^9}, {3.790104942210403*^9, 
   3.790104943075923*^9}, {3.790105238443945*^9, 3.790105238628377*^9}, {
   3.7907048642452927`*^9, 3.790704865112496*^9}, {3.790704901080867*^9, 
   3.790704901785759*^9}, {3.790705029699359*^9, 3.790705041023316*^9}, {
   3.790705076789002*^9, 3.790705091831182*^9}, {3.797863102442521*^9, 
   3.7978631388130493`*^9}, {3.798049018479541*^9, 3.798049024494543*^9}, {
   3.798050010155588*^9, 3.7980500198697147`*^9}},
 CellLabel->"In[4]:=",
 CellID->165373705,ExpressionUUID->"2f0de848-0296-412f-a419-5511fc0f6ead"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Player", " ", "Strategies", " ", "Barchart", " ", "Function"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stratchart", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
    RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"p", ",", "q"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", " ", "\"\<DarkRainbow\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.5"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<cc\>\"", ",", "\"\<cd\>\"", ",", "\"\<dc\>\"", ",", 
           "\"\<dd\>\""}], "}"}], ",", "None"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "\[Rule]", " ", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<player X\>\"", ",", " ", "\"\<player Y\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0.45", ",", "0.80"}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<probability of c\>\"", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<actions by X and Y in last round\>\"", ",", " ", 
           "\"\<player strategies\\n (c=cooperate, d=defect)\>\""}], "}"}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"13", ",", "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", " ", "230"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", 
             "1.0"}], "}"}], ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"40", ",", " ", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"60", ",", "60"}], "}"}]}], "}"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.75"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ChartElementFunction", "\[Rule]", "\"\<GlassRectangle\>\""}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.783112540994245*^9, 3.783112543434311*^9}, {
   3.78311259400231*^9, 3.783112620378677*^9}, {3.7831127012223263`*^9, 
   3.783112728612014*^9}, {3.7831128312493553`*^9, 3.783112832340601*^9}, 
   3.783112874711134*^9, {3.783113169328363*^9, 3.78311317200611*^9}, {
   3.783631711562649*^9, 3.783631782347762*^9}, {3.7836318906649723`*^9, 
   3.783631908665801*^9}, {3.784317787010448*^9, 3.784317798541781*^9}, {
   3.7843178320664454`*^9, 3.784317882361171*^9}, {3.784320253888072*^9, 
   3.784320255654435*^9}, {3.784323376932187*^9, 3.784323380107441*^9}, {
   3.784323423978836*^9, 3.784323430554934*^9}, 3.784324005253982*^9, {
   3.78432412757649*^9, 3.78432414005831*^9}, {3.784324205591824*^9, 
   3.7843242183164043`*^9}, {3.784324256590948*^9, 3.784324269771302*^9}, {
   3.784857764263291*^9, 3.784857765426435*^9}, {3.7848578732874737`*^9, 
   3.784857914873457*^9}, {3.784858059754524*^9, 3.784858060448539*^9}, {
   3.7848582041421223`*^9, 3.784858204500369*^9}, {3.784859644069044*^9, 
   3.784859644403832*^9}, {3.784860239822077*^9, 3.784860240765953*^9}, {
   3.784861246445063*^9, 3.784861246700468*^9}, {3.784861308610812*^9, 
   3.784861362576219*^9}, {3.784861612482292*^9, 3.784861613290565*^9}, {
   3.7848618593257*^9, 3.784861872586875*^9}, {3.784861923322794*^9, 
   3.784861958898387*^9}, {3.7848628168412*^9, 3.784862818091432*^9}, {
   3.784908701606152*^9, 3.784908701868248*^9}, {3.784923166772058*^9, 
   3.784923212772328*^9}, {3.784923244123561*^9, 3.784923266585156*^9}, {
   3.784923325811426*^9, 3.784923349502901*^9}, {3.784923448578977*^9, 
   3.784923452524623*^9}, {3.7849236633588333`*^9, 3.784923692935377*^9}, {
   3.7849237653839693`*^9, 3.7849238194528093`*^9}, {3.784923934903029*^9, 
   3.784923935230546*^9}, {3.784924040895443*^9, 3.784924050583517*^9}, {
   3.784924096489759*^9, 3.7849241906993847`*^9}, {3.784924228788113*^9, 
   3.7849242620091553`*^9}, {3.790099606711191*^9, 3.7900996962618713`*^9}, {
   3.7901004701141872`*^9, 3.790100520576144*^9}, {3.7906336009717207`*^9, 
   3.790633602919346*^9}, {3.790704315314217*^9, 3.790704323544332*^9}, {
   3.790704412465136*^9, 3.790704421480721*^9}, {3.790704469473105*^9, 
   3.790704471043749*^9}, {3.790704503819025*^9, 3.7907045052812853`*^9}, {
   3.790704579705393*^9, 3.790704723357082*^9}, {3.7907049372289762`*^9, 
   3.79070494028776*^9}, {3.794322948312501*^9, 3.794322968660109*^9}, {
   3.7943230170802507`*^9, 3.794323028198585*^9}, {3.794323077254903*^9, 
   3.794323077976738*^9}, 3.7943231355713387`*^9, {3.7945148477196617`*^9, 
   3.7945148490652227`*^9}, {3.7945148877351313`*^9, 
   3.7945148884802513`*^9}, {3.797863146294319*^9, 3.797863150074181*^9}, {
   3.797863181338524*^9, 3.797863304673511*^9}, {3.7978638357711773`*^9, 
   3.7978638466375637`*^9}, {3.7978646283450947`*^9, 3.797864655600156*^9}, {
   3.797948029338428*^9, 3.797948046950989*^9}, {3.7979480781624937`*^9, 
   3.7979481055800533`*^9}, {3.798049028913056*^9, 3.7980490438927298`*^9}, {
   3.798050192450363*^9, 3.798050192764612*^9}},
 CellLabel->"In[5]:=",
 CellID->592020717,ExpressionUUID->"963c6498-e9c9-4bfa-b724-e23bc789ef11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Player", " ", "Payoff", " ", "Barchart", " ", "Function"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"payoffchart", "[", "pff_", "]"}], ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"BarChart", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "pff", "}"}], ",", "\[IndentingNewLine]", " ", 
      RowBox[{"ImageSize", "\[Rule]", "135"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BarSpacing", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"13", ",", "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartElementFunction", "\[Rule]", "\"\<GlassRectangle\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.2", ",", "3.0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "4.9"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "1.25"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<score\>\"", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<player\>\"", ",", "\"\<average payoffs\>\""}], "}"}]}],
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.78311256088759*^9, 3.783112561594171*^9}, {
   3.7831127337985163`*^9, 3.783112761098353*^9}, {3.783112823259507*^9, 
   3.783112824575526*^9}, 3.7831128697798967`*^9, 3.78363174783193*^9, {
   3.78363191677116*^9, 3.7836319228529043`*^9}, {3.784319706846361*^9, 
   3.7843197111668377`*^9}, {3.784853453111354*^9, 3.784853616076038*^9}, {
   3.784853649839346*^9, 3.78485370359518*^9}, {3.784853735461763*^9, 
   3.78485373767109*^9}, {3.7848580655078707`*^9, 3.784858066156711*^9}, {
   3.784858199734345*^9, 3.784858200213147*^9}, {3.7848596508051767`*^9, 
   3.784859650996779*^9}, {3.784860040122965*^9, 3.7848600488404093`*^9}, {
   3.784860116600794*^9, 3.7848601378497868`*^9}, {3.784860244697193*^9, 
   3.7848602472171583`*^9}, {3.78486030021773*^9, 3.784860301167109*^9}, {
   3.7848612519812937`*^9, 3.784861252180496*^9}, {3.784861605752288*^9, 
   3.7848616066062927`*^9}, {3.784862290305646*^9, 3.784862291868865*^9}, {
   3.7848623277999287`*^9, 3.784862332162985*^9}, {3.7848623684862556`*^9, 
   3.784862383185145*^9}, {3.784862813889202*^9, 3.784862814096878*^9}, {
   3.78490870866115*^9, 3.784908709566209*^9}, {3.784923059953438*^9, 
   3.784923102960556*^9}, {3.784923134924407*^9, 3.784923150815338*^9}, {
   3.784923298392207*^9, 3.784923298885507*^9}, {3.7849234119951553`*^9, 
   3.784923415877819*^9}, {3.784923732885727*^9, 3.784923759435655*^9}, {
   3.7849239578574553`*^9, 3.7849239583045473`*^9}, {3.784925219705*^9, 
   3.7849252206102962`*^9}, {3.784926383311639*^9, 3.784926412515236*^9}, {
   3.784926445788752*^9, 3.784926457242888*^9}, {3.790104580289501*^9, 
   3.7901045957044487`*^9}, {3.790633708749981*^9, 3.790633710482905*^9}, {
   3.790633749017109*^9, 3.79063376836732*^9}, {3.790633823100844*^9, 
   3.790633853826264*^9}, {3.7907041373696623`*^9, 3.790704140614643*^9}, {
   3.7907047293073397`*^9, 3.7907047297241573`*^9}, {3.7907047647363853`*^9, 
   3.790704767594563*^9}, {3.797863314506035*^9, 3.7978633535886383`*^9}, {
   3.797863890750011*^9, 3.797863909356414*^9}, 3.797864688518475*^9, {
   3.797948126029833*^9, 3.797948129811089*^9}},
 CellLabel->"In[6]:=",
 CellID->800454068,ExpressionUUID->"3073a966-63b1-4ef3-998a-1974dd6af576"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "37255d02-d013-4fe4-b83d-9a034f4470ed"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"eff13bbf-5d3c-4839-af75-2c76d1887a03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "transmatrix", ",", "transmatrix1", ",", "transmatrix2", ",", 
       "initialDistr", ",", "nstepDistr", ",", "nstepDistr1", ",", "xPayoff", 
       ",", "yPayoff"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Initialize", " ", "strategy", " ", "vectors"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"X", " ", "strategy", " ", "SET"}], "-", "2"}], ",", " ", 
       RowBox[{
        RowBox[{"Y", " ", "strategy", " ", "GEN"}], "-", "2"}]}], " ", "*)"}],
      "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "p10", ",", "p20", ",", "p30", ",", "p40", ",", "q10", ",", "q20", 
         ",", "q30", ",", "q40"}], "}"}], " ", "=", 
       RowBox[{"{", 
        RowBox[{
        "0.75", ",", " ", "0.25", ",", " ", "0.5", ",", " ", "0.25", ",", "1",
          ",", "0.5625", ",", "0.5", ",", "0.125"}], "}"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Transition", " ", "matrix", " ", "for", " ", "Dyson"}], "-", 
        
        RowBox[{"Press", " ", 
         RowBox[{"Prisoner", "'"}], "s", " ", "Dilemma", " ", "model"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"transmatrix", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p1", "*", "q1"}], ",", 
           RowBox[{"p1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q1"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p1"}], ")"}], "*", "q1"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p1"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q1"}], ")"}]}]}], "}"}], ",", 
         "                        ", 
         RowBox[{"(*", 
          RowBox[{"Corresponds", " ", "to", " ", "Purple", " ", "cc"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p2", "*", "q3"}], ",", 
           RowBox[{"p2", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q3"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p2"}], ")"}], "*", "q3"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p2"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q3"}], ")"}]}]}], "}"}], ",", 
         "                        ", 
         RowBox[{"(*", 
          RowBox[{"Corresponds", " ", "to", " ", "Orange", " ", "cd"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p3", "*", "q2"}], ",", 
           RowBox[{"p3", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q2"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p3"}], ")"}], "*", "q2"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p3"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q2"}], ")"}]}]}], "}"}], ",", 
         "                        ", 
         RowBox[{"(*", 
          RowBox[{"Corresponds", " ", "to", " ", "Yellow", " ", "dc"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p4", "*", "q4"}], ",", 
           RowBox[{"p4", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q4"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p4"}], ")"}], "*", "q4"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p4"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q4"}], ")"}]}]}], "}"}]}], 
        "                           ", 
        RowBox[{"(*", 
         RowBox[{"Corresponds", " ", "to", " ", "Blue", "   ", "dd"}], " ", 
         "*)"}], "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"transmatrix1", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"N", "[", "#", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
         "transmatrix", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
      "                                  ", 
      RowBox[{"(*", 
       RowBox[{
       "1", " ", "digit", " ", "accuracy", " ", "for", " ", "transition", " ",
         "graph"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"transmatrix2", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"N", "[", "#", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "2"}], "}"}]}], "]"}], "&"}], ",", 
         "transmatrix", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
      "                                  ", 
      RowBox[{"(*", 
       RowBox[{
       "2", " ", "digit", " ", "accuracy", " ", "for", " ", "transition", " ",
         "matrix"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"initialDistr", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pc", "*", "qc"}], ",", 
         RowBox[{"pc", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "qc"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "pc"}], ")"}], "*", "qc"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "pc"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "qc"}], ")"}]}]}], "}"}]}], ";", 
      "                                                                       \
     ", 
      RowBox[{"(*", 
       RowBox[{"Initial", " ", "Distribution"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nstepDistr", "=", 
       RowBox[{"initialDistr", ".", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"transmatrix", ",", " ", "n"}], "]"}]}]}], ";", 
      "                                                                       \
                          ", 
      RowBox[{"(*", 
       RowBox[{"Distribution", " ", "after", " ", "nth", " ", "step"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nstepDistr1", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"N", "[", "#", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"initialDistr", ".", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{"transmatrix", ",", "n"}], "]"}]}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], " ", ";", "             ", 
      RowBox[{"(*", 
       RowBox[{
       "2", " ", "digit", " ", "accuracy", " ", "for", " ", "Distribution", 
        " ", "after", " ", "nth", " ", "step"}], "*)"}], 
      "\[IndentingNewLine]", 
      StyleBox["\[IndentingNewLine]",
       Background->RGBColor[1, 1, 0]], 
      RowBox[{"sx", "=", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0", ",", "5", ",", "1"}], "}"}]}], ";", 
      "                              ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Payoffs", " ", "R"}], ",", " ", "S", ",", " ", "T", ",", " ", 
        RowBox[{
        "P", " ", "for", " ", "standard", " ", "Prisoners", " ", "Dilemma", 
         " ", "Game"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sy", "=", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "0", ",", "1"}], "}"}]}], ";", 
      "                    ", "\[IndentingNewLine]", 
      RowBox[{"xPayoff", "=", 
       RowBox[{"nstepDistr", ".", "sx"}]}], ";", "             ", 
      RowBox[{"(*", 
       RowBox[{"Payoff", " ", "vector", " ", "for", " ", "X"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"yPayoff", "=", " ", 
       RowBox[{"nstepDistr", ".", "sy"}]}], ";", "            ", 
      RowBox[{"(*", 
       RowBox[{"Payoff", " ", "vector", " ", "for", " ", "Y"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
      "Which", "[", 
       "                                                                      \
                                                                            ", 
       RowBox[{"(*", 
        RowBox[{"Player", " ", "X", " ", "Strategies"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stratx", " ", "\[Equal]", " ", "1"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], " ", "=", 
         " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
        "                                                              ", 
        RowBox[{"(*", 
         RowBox[{"All", " ", "Cooperate"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "\[Equal]", " ", "2"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
        "                                                                ", 
        RowBox[{"(*", 
         RowBox[{"All", " ", "Defect"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "\[Equal]", " ", "3"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
        "                                                                 ", 
        RowBox[{"(*", 
         RowBox[{"Tit", " ", "For", " ", "Tat"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "\[Equal]", " ", "4"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.25", ",", "1", ",", "0.25"}], "}"}]}], ",", 
        "                                                   ", 
        RowBox[{"(*", "GTFT", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "\[Equal]", " ", "5"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.5625", ",", "0.5", ",", "0.125"}], "}"}]}], 
        ",", "                                        ", 
        RowBox[{"(*", 
         RowBox[{"GEN", "-", "2"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "7"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
          "0.75", ",", " ", "0.25", ",", " ", "0.5", ",", " ", "0.25"}], 
          "}"}]}], ",", "                                    ", 
        RowBox[{"(*", 
         RowBox[{"SET", "-", "2"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "8"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.5", ",", "0.5", ",", "0.3"}], "}"}]}], ",", 
        "                                              ", 
        RowBox[{"(*", 
         RowBox[{"SET", "-", "2.5"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "9"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.9", ",", "0.15", ",", "0.1"}], "}"}]}], ",", 
        "                                                ", 
        RowBox[{"(*", 
         RowBox[{"SET", "-", "3"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "10"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.875", ",", "0.4375", ",", "0.375", ",", "0"}], "}"}]}], 
        ",", "                                ", 
        RowBox[{"(*", 
         RowBox[{"EXTORT", "-", "2"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "11"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.8", ",", "0.55", ",", "0.3", ",", "0"}], "}"}]}], ",", 
        "                                              ", 
        RowBox[{"(*", 
         RowBox[{"EXTORT", "-", "3"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "12"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "0.15", ",", "0.4", ",", "0"}], "}"}]}], ",", 
        "                                              ", 
        RowBox[{"(*", 
         RowBox[{"EXTORT", "-", "4"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"stratx", " ", "==", " ", "13"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.68", ",", "0.16", ",", "0.36", ",", "0"}], "}"}]}]}], 
       "                                             ", 
       RowBox[{"(*", 
        RowBox[{"EXTORT", "-", "5"}], "*)"}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
      "Which", "[", 
       "                                                                      \
                                                                             "\
, 
       RowBox[{"(*", 
        RowBox[{"Player", " ", "Y", " ", "Strategies"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"straty", " ", "\[Equal]", " ", "1"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], " ", "=", 
         " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
        "                                                               ", 
        RowBox[{"(*", 
         RowBox[{"All", " ", "Cooperate"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "\[Equal]", " ", "2"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
        "                                                                 ", 
        RowBox[{"(*", 
         RowBox[{"All", " ", "Defect"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "\[Equal]", " ", "3"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
        "                                                                 ", 
        RowBox[{"(*", 
         RowBox[{"Tit", " ", "For", " ", "Tat"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "\[Equal]", " ", "4"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.25", ",", "1", ",", "0.25"}], "}"}]}], ",", 
        "                                                    ", 
        RowBox[{"(*", "GTFT", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "\[Equal]", " ", "5"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.5625", ",", "0.5", ",", "0.125"}], "}"}]}], 
        ",", "                                         ", 
        RowBox[{"(*", 
         RowBox[{"GEN", "-", "2"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "7"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
          "0.75", ",", " ", "0.25", ",", " ", "0.5", ",", " ", "0.25"}], 
          "}"}]}], ",", "                                     ", 
        RowBox[{"(*", 
         RowBox[{"SET", "-", "2"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "8"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.5", ",", "0.5", ",", "0.3"}], "}"}]}], ",", 
        "                                              ", 
        RowBox[{"(*", 
         RowBox[{"SET", "-", "2.5"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "9"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.9", ",", "0.15", ",", "0.1"}], "}"}]}], ",", 
        "                                                ", 
        RowBox[{"(*", 
         RowBox[{"SET", "-", "3"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "10"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.875", ",", "0.4375", ",", "0.375", ",", "0"}], "}"}]}], 
        ",", "                                ", 
        RowBox[{"(*", 
         RowBox[{"EXTORT", "-", "2"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "11"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.8", ",", "0.55", ",", "0.3", ",", "0"}], "}"}]}], ",", 
        "                                              ", 
        RowBox[{"(*", 
         RowBox[{"EXTORT", "-", "3"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "12"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "0.15", ",", "0.4", ",", "0"}], "}"}]}], ",", 
        "                                              ", 
        RowBox[{"(*", 
         RowBox[{"EXTORT", "-", "4"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"straty", " ", "==", " ", "13"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0.68", ",", "0.16", ",", "0.36", ",", "0"}], "}"}]}]}], 
       "                                             ", 
       RowBox[{"(*", 
        RowBox[{"EXTORT", "-", "5"}], "*)"}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"graph", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "graph", " ", "is", " ", "true"}], ",", " ", 
          RowBox[{"show", " ", "transition", " ", "graph"}]}], "*)"}], " ", 
        "\[IndentingNewLine]", 
        RowBox[{"graphplot", "[", 
         RowBox[{"transmatrix1", ",", "nstepDistr"}], "]"}], ",", " ", 
        StyleBox["\[IndentingNewLine]",
         Background->RGBColor[1, 1, 0]], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "graph", " ", "is", " ", "false"}], ",", " ", 
          RowBox[{
          "Show", " ", "transition", " ", "matrix", " ", "and", " ", 
           "charts"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"stratchart", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"Spacer", "[", "20", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"payoffchart", "[", 
                 RowBox[{"{", 
                  RowBox[{"xPayoff", ",", "yPayoff"}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Bottom"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "@", 
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Labeled", "[", 
                 RowBox[{
                  RowBox[{"MatrixForm", "[", 
                   RowBox[{"transmatrix2", ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<cc\>\"", ",", "\"\<cd\>\"", ",", "\"\<dc\>\"", ",", 
                    "\"\<dd\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<cc\>\"", ",", "\"\<cd\>\"", ",", "\"\<dc\>\"", ",", 
                    "\"\<dd\>\""}], "}"}]}], "}"}]}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\"\<transition matrix\\n\>\"", ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"Top", ",", "Center"}], "}"}], "}"}]}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Spacer", "[", "50", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Labeled", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"MatrixForm", "[", 
                    RowBox[{
                    RowBox[{"{", "nstepDistr1", " ", "}"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<cc\>\"", ",", "\"\<cd\>\"", ",", "\"\<dc\>\"", ",", 
                    "\"\<dd\>\""}], "}"}]}], "}"}]}]}], "]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<stationary distribution\\n\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"Top", ",", "Center"}], "}"}], "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]",
            "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Controls", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\"\<player X strategy\>\"", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stratx", ",", ",", "\"\<deterministic\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<All-c\>\""}], ",", " ", 
       RowBox[{"2", "\[Rule]", "\"\<All-d\>\""}], ",", " ", 
       RowBox[{"3", "\[Rule]", "\"\<TFT\>\""}], ",", " ", 
       RowBox[{"4", "\[Rule]", "\"\<GTFT\>\""}], ",", " ", 
       RowBox[{"5", "\[Rule]", "\"\<GEN-2\>\""}]}], "}"}], ",", "SetterBar", 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", "6"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stratx", ",", ",", "\"\<equalizer\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "\[Rule]", "\"\<SET-2\>\""}], ",", 
       RowBox[{"8", "\[Rule]", "\"\<SET-2.5\>\""}], ",", 
       RowBox[{"9", "\[Rule]", "\"\<SET-3\>\""}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "6"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stratx", ",", ",", "\"\<extortionate\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"10", "\[Rule]", "\"\<EXT-2\>\""}], ",", 
       RowBox[{"11", "\[Rule]", "\"\<EXT-3\>\""}], ",", 
       RowBox[{"12", "\[Rule]", "\"\<EXT-4\>\""}], ",", 
       RowBox[{"13", "\[Rule]", "\"\<EXT-5\>\""}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "6"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Spacer", "[", 
       RowBox[{"{", 
        RowBox[{"25", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<random\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"seed", "++"}], ";", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], " ", "=", 
          " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}], ",", 
            "eps"}], "]"}]}], ";", 
         RowBox[{"stratx", "=", "14"}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "80"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<custom\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], ",", 
            "eps"}], "]"}]}], ";", 
         RowBox[{"stratx", "=", "6"}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "80"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "p10", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], "cc"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "p20", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], "cd"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p3", ",", "p30", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], "dc"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p4", ",", "p40", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<p\>\"", ",", "Italic"}], "]"}], "dd"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\"\<player Y strategy\>\"", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"straty", ",", ",", "\"\<deterministic\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<All-c\>\""}], ",", " ", 
       RowBox[{"2", "\[Rule]", "\"\<All-d\>\""}], ",", " ", 
       RowBox[{"3", "\[Rule]", "\"\<TFT\>\""}], ",", " ", 
       RowBox[{"4", "\[Rule]", "\"\<GTFT\>\""}], ",", " ", 
       RowBox[{"5", "\[Rule]", "\"\<GEN-2\>\""}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "6"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"straty", ",", ",", "\"\<equalizer\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "\[Rule]", "\"\<SET-2\>\""}], ",", 
       RowBox[{"8", "\[Rule]", "\"\<SET-2.5\>\""}], ",", 
       RowBox[{"9", "\[Rule]", "\"\<SET-3\>\""}]}], "}"}], ",", "SetterBar", 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", "6"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"straty", ",", ",", "\"\<extortionate\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"10", "\[Rule]", "\"\<EXT-2\>\""}], ",", 
       RowBox[{"11", "\[Rule]", "\"\<EXT-3\>\""}], ",", 
       RowBox[{"12", "\[Rule]", "\"\<EXT-4\>\""}], ",", 
       RowBox[{"13", "\[Rule]", "\"\<EXT-5\>\""}]}], "}"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", "6"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Spacer", "[", 
       RowBox[{"{", 
        RowBox[{"35", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<random\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"seed", "++"}], ";", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], " ", "=", 
          " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}], ",", 
            "eps"}], "]"}]}], ";", 
         RowBox[{"straty", "=", "14"}]}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "80"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<custom\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q1", ",", "q2", ",", "q3", ",", "q4"}], "}"}], ",", 
            "eps"}], "]"}]}], ";", 
         RowBox[{"straty", "=", "6"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "80"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q1", ",", "q10", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], "cc"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q2", ",", "q20", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], "cd"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q3", ",", "q30", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], "dc"]}], "}"}], ",", 
     "0", ",", "1", " ", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q4", ",", "q40", ",", 
       SubscriptBox[
        RowBox[{"Style", "[", 
         RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], "dd"]}], "}"}], ",", 
     "0", ",", "1", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "95"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"graph", ",", "False", ",", "\"\<show\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"False", "\[Rule]", "\"\<transition matrix\>\""}], ",", " ", 
       RowBox[{"True", "\[Rule]", " ", "\"\<transition graph\>\""}]}], "}"}], 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", "8"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Not", " ", "shown", " ", "in", " ", "controls"}], "*)"}], 
   "                                                          ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"seed", ",", "1", ",", "100", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "13"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.784321557247921*^9, 3.7843215581870413`*^9}, {
   3.784321692538258*^9, 3.784321693617734*^9}, {3.7848528132688713`*^9, 
   3.784852842622065*^9}, {3.784852888640299*^9, 3.78485291271215*^9}, {
   3.7848530021509666`*^9, 3.784853003372595*^9}, {3.784853092544785*^9, 
   3.784853122091021*^9}, {3.7848538932936687`*^9, 3.784853949404894*^9}, {
   3.7848579754746513`*^9, 3.7848580296290703`*^9}, {3.78485808906044*^9, 
   3.784858090828796*^9}, {3.784858127859483*^9, 3.784858170805238*^9}, {
   3.78485822566757*^9, 3.784858256912952*^9}, {3.78485830061534*^9, 
   3.784858379699471*^9}, {3.7848584267570143`*^9, 3.784858476554557*^9}, {
   3.784858633693296*^9, 3.7848587582721148`*^9}, {3.784858805525957*^9, 
   3.784858982128063*^9}, 3.7848590393084373`*^9, {3.78485907710452*^9, 
   3.784859629985075*^9}, {3.784859665061082*^9, 3.784859672290634*^9}, {
   3.784859708010809*^9, 3.7848597210214643`*^9}, {3.7848601528994093`*^9, 
   3.784860168766191*^9}, {3.784860205952608*^9, 3.784860219878812*^9}, {
   3.784860267024645*^9, 3.784860281149377*^9}, {3.784860381469513*^9, 
   3.784860592241973*^9}, {3.7848606259333076`*^9, 3.7848608248433247`*^9}, {
   3.7848609839298*^9, 3.7848611192615643`*^9}, {3.784861160028808*^9, 
   3.784861227833405*^9}, {3.78486126304568*^9, 3.7848612862773123`*^9}, {
   3.784861392530726*^9, 3.784861574017749*^9}, {3.78486163279795*^9, 
   3.784861638458062*^9}, {3.7848616974375677`*^9, 3.784861764561924*^9}, {
   3.784862152139224*^9, 3.7848621851478157`*^9}, {3.784862312470015*^9, 
   3.7848623127579327`*^9}, {3.7848624085061073`*^9, 3.784862621499652*^9}, {
   3.784862657538045*^9, 3.7848628043658953`*^9}, {3.784862841754816*^9, 
   3.784862876992326*^9}, {3.7848632806190357`*^9, 3.784863388284457*^9}, {
   3.784908652316169*^9, 3.7849086829662313`*^9}, {3.784913263755748*^9, 
   3.784913307458734*^9}, {3.78491335852133*^9, 3.78491339005886*^9}, {
   3.784913449101096*^9, 3.7849134786236467`*^9}, {3.7849135221392384`*^9, 
   3.7849135237429333`*^9}, {3.784913632845636*^9, 3.784913646024089*^9}, {
   3.784913972757555*^9, 3.784914036289895*^9}, {3.784914069003783*^9, 
   3.7849141173375683`*^9}, {3.78491420962514*^9, 3.784914222460989*^9}, {
   3.7849215210904703`*^9, 3.784921526655849*^9}, {3.7849216442587643`*^9, 
   3.784921670730035*^9}, {3.784921916331522*^9, 3.784922058359865*^9}, {
   3.784922093438487*^9, 3.7849221243638973`*^9}, {3.784922165457273*^9, 
   3.784922281556323*^9}, {3.784922316021812*^9, 3.784922348251463*^9}, {
   3.7849225013926373`*^9, 3.7849225420079536`*^9}, {3.784922576020583*^9, 
   3.784922583309408*^9}, {3.78492267458716*^9, 3.784922697997418*^9}, {
   3.7849227566086617`*^9, 3.78492283065991*^9}, {3.784922909193474*^9, 
   3.7849229160213013`*^9}, {3.7849229563144693`*^9, 3.784922996353259*^9}, {
   3.7849234720154753`*^9, 3.7849235315975924`*^9}, {3.784924345396443*^9, 
   3.784924385033593*^9}, {3.784924419824915*^9, 3.7849244693882713`*^9}, {
   3.784924547145234*^9, 3.784924571398452*^9}, {3.78492470853662*^9, 
   3.784924974257876*^9}, {3.7849250099233923`*^9, 3.784925061401574*^9}, {
   3.784925271668989*^9, 3.784925278678527*^9}, {3.7849256405537148`*^9, 
   3.784925705737549*^9}, {3.7849257573347893`*^9, 3.7849257576745443`*^9}, {
   3.784925797155238*^9, 3.7849258265807943`*^9}, {3.784925861625691*^9, 
   3.7849259168044643`*^9}, {3.7849259504100237`*^9, 3.784926079534258*^9}, {
   3.7849261160816393`*^9, 3.784926174659116*^9}, 3.784926221958311*^9, {
   3.784926278695848*^9, 3.784926309784493*^9}, {3.78492635643434*^9, 
   3.784926357352433*^9}, {3.784927256375469*^9, 3.7849272927824993`*^9}, {
   3.790099281190989*^9, 3.790099281345647*^9}, {3.790104094104767*^9, 
   3.7901041049163227`*^9}, {3.790104238209023*^9, 3.790104254933667*^9}, {
   3.790104429443221*^9, 3.7901044299098053`*^9}, {3.790104814890588*^9, 
   3.790104815210224*^9}, {3.7901059439648857`*^9, 3.790105949810481*^9}, {
   3.79063400712682*^9, 3.7906340269375563`*^9}, {3.790646644016415*^9, 
   3.790646789118588*^9}, {3.7906468288620462`*^9, 3.7906468561146383`*^9}, {
   3.790646941007064*^9, 3.790646943097672*^9}, {3.790647015660461*^9, 
   3.7906470222053547`*^9}, {3.790647060291905*^9, 3.790647068703977*^9}, {
   3.790648368380129*^9, 3.790648408953933*^9}, {3.790648442891218*^9, 
   3.790648517752719*^9}, {3.7906485501398582`*^9, 3.790648569624428*^9}, {
   3.790649726391704*^9, 3.790649739731889*^9}, {3.7906498260348263`*^9, 
   3.790649828846469*^9}, {3.790700043773884*^9, 3.79070005746585*^9}, {
   3.790700179804585*^9, 3.79070024145903*^9}, {3.79070028158825*^9, 
   3.7907003110994463`*^9}, {3.790700394286007*^9, 3.7907004190869913`*^9}, {
   3.79070048215265*^9, 3.790700496264328*^9}, {3.790700580371854*^9, 
   3.790700583425782*^9}, {3.7907006554529343`*^9, 3.7907006569163017`*^9}, {
   3.7907007184858303`*^9, 3.7907007591160603`*^9}, {3.790700975439785*^9, 
   3.790701004780381*^9}, {3.790701045936678*^9, 3.7907010514830427`*^9}, {
   3.790701092891305*^9, 3.790701110223207*^9}, {3.7907011486163397`*^9, 
   3.7907011625377827`*^9}, {3.7907012054811363`*^9, 3.790701514714316*^9}, {
   3.790702681176876*^9, 3.790702713045619*^9}, {3.790705109623556*^9, 
   3.790705187440613*^9}, {3.7907052221160507`*^9, 3.790705336292182*^9}, {
   3.790705384380117*^9, 3.790705389654913*^9}, 3.790705759542156*^9, {
   3.790705815597661*^9, 3.7907058636091967`*^9}, {3.7919158997336063`*^9, 
   3.7919159319962378`*^9}, {3.7943157367524223`*^9, 3.79431574260015*^9}, {
   3.79431585644611*^9, 3.7943158697809668`*^9}, {3.794316546489635*^9, 
   3.79431658755859*^9}, {3.794316626512641*^9, 3.794316680850636*^9}, {
   3.794316726551689*^9, 3.794316745102051*^9}, 3.794316882771625*^9, {
   3.7943170167341843`*^9, 3.7943170200298223`*^9}, {3.794317126666543*^9, 
   3.794317138992866*^9}, {3.794317172467705*^9, 3.794317212155891*^9}, {
   3.794317252584236*^9, 3.794317279468474*^9}, {3.794317522027874*^9, 
   3.794317527895954*^9}, {3.7943176000066347`*^9, 3.794317617471278*^9}, {
   3.794317652399288*^9, 3.794317652957541*^9}, {3.794318135621811*^9, 
   3.7943181911106586`*^9}, {3.79431854944731*^9, 3.794318559646267*^9}, {
   3.794318978300395*^9, 3.794319005239656*^9}, 3.7943190430023003`*^9, {
   3.794319182641831*^9, 3.7943191857805862`*^9}, {3.794319291762867*^9, 
   3.794319357581098*^9}, {3.794319558561418*^9, 3.7943195740739098`*^9}, {
   3.794319732320911*^9, 3.794319740081359*^9}, {3.794319997017601*^9, 
   3.79432005670962*^9}, {3.794320113210746*^9, 3.794320113796686*^9}, {
   3.79432041375532*^9, 3.794320414057878*^9}, {3.7943204585442266`*^9, 
   3.79432045965036*^9}, {3.794320577299458*^9, 3.7943205776832123`*^9}, {
   3.794320611720862*^9, 3.794320612500773*^9}, {3.7943208062734203`*^9, 
   3.794320806904641*^9}, {3.7943208522720823`*^9, 3.794320861799246*^9}, {
   3.794321045004983*^9, 3.794321114098359*^9}, {3.7943211564820004`*^9, 
   3.794321167264346*^9}, {3.794321526999426*^9, 3.794321538599238*^9}, {
   3.7943216509604816`*^9, 3.79432165166724*^9}, {3.794321832586657*^9, 
   3.794321840967249*^9}, {3.794321898001272*^9, 3.7943219093641768`*^9}, {
   3.794322004928945*^9, 3.794322114659019*^9}, {3.794322214367694*^9, 
   3.7943222185103683`*^9}, {3.794322265461643*^9, 3.794322266711935*^9}, {
   3.794322297333954*^9, 3.794322297772222*^9}, {3.794322357647181*^9, 
   3.794322360082398*^9}, {3.794322418780365*^9, 3.794322419864757*^9}, {
   3.794322456006641*^9, 3.794322509939899*^9}, {3.794322565850116*^9, 
   3.7943225931063347`*^9}, {3.794322642778736*^9, 3.794322685759894*^9}, {
   3.794323206961234*^9, 3.79432321066287*^9}, {3.7945149617634974`*^9, 
   3.7945149790283213`*^9}, {3.7945150178019648`*^9, 3.794515018206257*^9}, {
   3.794518685776642*^9, 3.7945186863609962`*^9}, 3.7945189842978697`*^9, {
   3.794519014993732*^9, 3.7945190175904303`*^9}, {3.7945194410085793`*^9, 
   3.794519457430379*^9}, {3.7945205557393847`*^9, 3.794520557519176*^9}, {
   3.794523034393374*^9, 3.794523041066925*^9}, {3.794588394816863*^9, 
   3.794588469567637*^9}, {3.794588766504965*^9, 3.794588806533536*^9}, 
   3.794588851574067*^9, {3.794588897552168*^9, 3.794588936119945*^9}, {
   3.7976823147343354`*^9, 3.797682448715052*^9}, {3.7978633641797943`*^9, 
   3.797863533744583*^9}, {3.7978635667753153`*^9, 3.797863648811186*^9}, {
   3.797863990322164*^9, 3.7978640392583027`*^9}, {3.7978642316433372`*^9, 
   3.797864241332087*^9}, {3.797864370677054*^9, 3.7978644088354273`*^9}, {
   3.797864456355465*^9, 3.797864482871993*^9}, {3.797864715427451*^9, 
   3.797864802679708*^9}, {3.7978649087799*^9, 3.797864933540586*^9}, {
   3.797865228284663*^9, 3.797865290675125*^9}, {3.797866363819785*^9, 
   3.7978663713673964`*^9}, {3.797866406325347*^9, 3.797866412497797*^9}, {
   3.797948205795875*^9, 3.7979482375548553`*^9}, {3.798049099916041*^9, 
   3.798049122280031*^9}, {3.7980491775009403`*^9, 3.7980491784476557`*^9}, {
   3.798049225916374*^9, 3.7980492493072023`*^9}, {3.7980492958589973`*^9, 
   3.798049300932151*^9}, {3.798124245409691*^9, 3.798124277463089*^9}},
 CellLabel->"In[7]:=",
 CellID->210222468,ExpressionUUID->"93811599-98a6-4f5c-8018-fd781a194dd0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`graph$$ = False, $CellContext`p1$$ = 
    1, $CellContext`p2$$ = 0.25, $CellContext`p3$$ = 1, $CellContext`p4$$ = 
    0.25, $CellContext`q1$$ = 0.875, $CellContext`q2$$ = 
    0.4375, $CellContext`q3$$ = 0.375, $CellContext`q4$$ = 
    0, $CellContext`seed$$ = 1, $CellContext`stratx$$ = 
    4, $CellContext`straty$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Row[{"player X strategy"}]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`stratx$$], Null, "deterministic"}, {
      1 -> "All-c", 2 -> "All-d", 3 -> "TFT", 4 -> "GTFT", 5 -> "GEN-2"}, 
      ControlType -> SetterBar}, {{
       Hold[$CellContext`stratx$$], Null, "equalizer"}, {
      7 -> "SET-2", 8 -> "SET-2.5", 9 -> "SET-3"}, ControlType -> 
      SetterBar}, {{
       Hold[$CellContext`stratx$$], Null, "extortionate"}, {
      10 -> "EXT-2", 11 -> "EXT-3", 12 -> "EXT-4", 13 -> "EXT-5"}, 
      ControlType -> SetterBar}, {
      Hold[
       Row[{
         Spacer[{25, 0}], 
         Button[
          Style["random", FontSize -> 13], 
          
          Increment[$CellContext`seed$$]; {$CellContext`p1$$, \
$CellContext`p2$$, $CellContext`p3$$, $CellContext`p4$$} = Round[
             RandomReal[{0, 1}, 4], $CellContext`eps]; $CellContext`stratx$$ = 
           14, ImageSize -> 80], 
         Button[
          Style[
          "custom", FontSize -> 
           13], {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = 
           Round[{$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$}, $CellContext`eps]; $CellContext`stratx$$ = 6, ImageSize -> 
          80]}]], Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
       Hold[$CellContext`p1$$], 0.75, 
       Subscript[
        Style["p", Italic], $CellContext`cc]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`p2$$], 0.25, 
       Subscript[
        Style["p", Italic], $CellContext`cd]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`p3$$], 0.5, 
       Subscript[
        Style["p", Italic], $CellContext`dc]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`p4$$], 0.25, 
       Subscript[
        Style["p", Italic], $CellContext`dd]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {
      Hold[
       Spacer[20]], Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {
     
      Hold[
       Row[{"player Y strategy"}]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`straty$$], Null, "deterministic"}, {
      1 -> "All-c", 2 -> "All-d", 3 -> "TFT", 4 -> "GTFT", 5 -> "GEN-2"}, 
      ControlType -> SetterBar}, {{
       Hold[$CellContext`straty$$], Null, "equalizer"}, {
      7 -> "SET-2", 8 -> "SET-2.5", 9 -> "SET-3"}, ControlType -> 
      SetterBar}, {{
       Hold[$CellContext`straty$$], Null, "extortionate"}, {
      10 -> "EXT-2", 11 -> "EXT-3", 12 -> "EXT-4", 13 -> "EXT-5"}, 
      ControlType -> SetterBar}, {
      Hold[
       Row[{
         Spacer[{35, 0}], 
         Button[
          Style["random", FontSize -> 13], 
          Increment[$CellContext`seed$$]; {$CellContext`q1$$, \
$CellContext`q2$$, $CellContext`q3$$, $CellContext`q4$$} = Round[
             RandomReal[{0, 1}, 4], $CellContext`eps]; $CellContext`straty$$ = 
           14, ImageSize -> 80], 
         Button[
          Style[
          "custom", FontSize -> 
           13], {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = 
           Round[{$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$}, $CellContext`eps]; $CellContext`straty$$ = 6, ImageSize -> 
          80]}]], Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
       Hold[$CellContext`q1$$], 1, 
       Subscript[
        Style["q", Italic], $CellContext`cc]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`q2$$], 0.5625, 
       Subscript[
        Style["q", Italic], $CellContext`cd]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`q3$$], 0.5, 
       Subscript[
        Style["q", Italic], $CellContext`dc]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`q4$$], 0.125, 
       Subscript[
        Style["q", Italic], $CellContext`dd]}, 0, 1, 0.01, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`graph$$], False, "show"}, {
      False -> "transition matrix", True -> "transition graph"}, ControlType -> 
      SetterBar}, {
      Hold[$CellContext`seed$$], 1, 100, 1, ControlType -> None}}, 
    Typeset`size$$ = {385., {185.77578124999997`, 191.40078124999997`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`graph$$ = False, $CellContext`p1$$ = 
        0.75, $CellContext`p2$$ = 0.25, $CellContext`p3$$ = 
        0.5, $CellContext`p4$$ = 0.25, $CellContext`q1$$ = 
        1, $CellContext`q2$$ = 0.5625, $CellContext`q3$$ = 
        0.5, $CellContext`q4$$ = 0.125, $CellContext`seed$$ = 
        1, $CellContext`stratx$$ = Null, $CellContext`straty$$ = Null}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`transmatrix$, $CellContext`transmatrix1$, \
$CellContext`transmatrix2$, $CellContext`initialDistr$, \
$CellContext`nstepDistr$, $CellContext`nstepDistr1$, $CellContext`xPayoff$, \
$CellContext`yPayoff$}, {$CellContext`p10, $CellContext`p20, \
$CellContext`p30, $CellContext`p40, $CellContext`q10, $CellContext`q20, \
$CellContext`q30, $CellContext`q40} = {
          0.75, 0.25, 0.5, 0.25, 1, 0.5625, 0.5, 
           0.125}; $CellContext`transmatrix$ = {{$CellContext`p1$$ \
$CellContext`q1$$, $CellContext`p1$$ (1 - $CellContext`q1$$), (
             1 - $CellContext`p1$$) $CellContext`q1$$, (
             1 - $CellContext`p1$$) (
             1 - $CellContext`q1$$)}, {$CellContext`p2$$ $CellContext`q3$$, \
$CellContext`p2$$ (1 - $CellContext`q3$$), (
             1 - $CellContext`p2$$) $CellContext`q3$$, (
             1 - $CellContext`p2$$) (
             1 - $CellContext`q3$$)}, {$CellContext`p3$$ $CellContext`q2$$, \
$CellContext`p3$$ (1 - $CellContext`q2$$), (
             1 - $CellContext`p3$$) $CellContext`q2$$, (
             1 - $CellContext`p3$$) (
             1 - $CellContext`q2$$)}, {$CellContext`p4$$ $CellContext`q4$$, \
$CellContext`p4$$ (1 - $CellContext`q4$$), (
             1 - $CellContext`p4$$) $CellContext`q4$$, (
             1 - $CellContext`p4$$) (
             1 - $CellContext`q4$$)}}; $CellContext`transmatrix1$ = 
         Map[NumberForm[
            N[#], {5, 1}]& , $CellContext`transmatrix$, {
           2}]; $CellContext`transmatrix2$ = Map[NumberForm[
            N[#], {5, 2}]& , $CellContext`transmatrix$, {
           2}]; $CellContext`initialDistr$ = {$CellContext`pc \
$CellContext`qc, $CellContext`pc (1 - $CellContext`qc), (
            1 - $CellContext`pc) $CellContext`qc, (1 - $CellContext`pc) (
            1 - $CellContext`qc)}; $CellContext`nstepDistr$ = 
         Dot[$CellContext`initialDistr$, 
           
           MatrixPower[$CellContext`transmatrix$, $CellContext`n]]; \
$CellContext`nstepDistr1$ = Map[NumberForm[
            N[#], {6, 2}]& , 
           Dot[$CellContext`initialDistr$, 
            MatrixPower[$CellContext`transmatrix$, $CellContext`n]], {
           1}]; $CellContext`sx = {3, 0, 5, 1}; $CellContext`sy = {3, 5, 0, 
          1}; $CellContext`xPayoff$ = 
         Dot[$CellContext`nstepDistr$, $CellContext`sx]; \
$CellContext`yPayoff$ = Dot[$CellContext`nstepDistr$, $CellContext`sy]; 
        Which[$CellContext`stratx$$ == 
          1, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {1, 1, 1, 1}, $CellContext`stratx$$ == 
          2, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0, 0, 0, 0}, $CellContext`stratx$$ == 
          3, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {1, 0, 1, 0}, $CellContext`stratx$$ == 
          4, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {1, 0.25, 1, 0.25}, $CellContext`stratx$$ == 
          5, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {1, 0.5625, 0.5, 0.125}, $CellContext`stratx$$ == 
          7, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0.75, 0.25, 0.5, 0.25}, $CellContext`stratx$$ == 
          8, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0.9, 0.5, 0.5, 0.3}, $CellContext`stratx$$ == 
          9, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {1, 0.9, 0.15, 0.1}, $CellContext`stratx$$ == 
          10, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0.875, 0.4375, 0.375, 0}, $CellContext`stratx$$ == 
          11, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0.8, 0.55, 0.3, 0}, $CellContext`stratx$$ == 
          12, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0.7, 0.15, 0.4, 0}, $CellContext`stratx$$ == 
          13, {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = {0.68, 0.16, 0.36, 0}]; 
        Which[$CellContext`straty$$ == 
          1, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {1, 1, 1, 1}, $CellContext`straty$$ == 
          2, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0, 0, 0, 0}, $CellContext`straty$$ == 
          3, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {1, 0, 1, 0}, $CellContext`straty$$ == 
          4, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {1, 0.25, 1, 0.25}, $CellContext`straty$$ == 
          5, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {1, 0.5625, 0.5, 0.125}, $CellContext`straty$$ == 
          7, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0.75, 0.25, 0.5, 0.25}, $CellContext`straty$$ == 
          8, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0.9, 0.5, 0.5, 0.3}, $CellContext`straty$$ == 
          9, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {1, 0.9, 0.15, 0.1}, $CellContext`straty$$ == 
          10, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0.875, 0.4375, 0.375, 0}, $CellContext`straty$$ == 
          11, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0.8, 0.55, 0.3, 0}, $CellContext`straty$$ == 
          12, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0.7, 0.15, 0.4, 0}, $CellContext`straty$$ == 
          13, {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = {0.68, 0.16, 0.36, 0}]; If[$CellContext`graph$$, 
          $CellContext`graphplot[$CellContext`transmatrix1$, \
$CellContext`nstepDistr$], 
          Column[{
            Row[{
              $CellContext`stratchart[{$CellContext`p1$$, $CellContext`p2$$, \
$CellContext`p3$$, $CellContext`p4$$}, {$CellContext`q1$$, $CellContext`q2$$, \
$CellContext`q3$$, $CellContext`q4$$}], 
              Spacer[20], 
              $CellContext`payoffchart[{$CellContext`xPayoff$, \
$CellContext`yPayoff$}]}, Alignment -> Bottom], 
            Text[
             Row[{
               Labeled[
                
                MatrixForm[$CellContext`transmatrix2$, 
                 TableHeadings -> {{"cc", "cd", "dc", "dd"}, {
                   "cc", "cd", "dc", "dd"}}], 
                "transition matrix\n", {{Top, Center}}], 
               Spacer[50], 
               Labeled[
                Style[
                 
                 MatrixForm[{$CellContext`nstepDistr1$}, 
                  TableHeadings -> {None, {"cc", "cd", "dc", "dd"}}]], 
                Style[
                "stationary distribution\n", FontSize -> 13], {{
                 Top, Center}}]}]]}, Alignment -> Center]]], "Specifications" :> {
        Row[{
         "player X strategy"}], {{$CellContext`stratx$$, Null, 
          "deterministic"}, {
         1 -> "All-c", 2 -> "All-d", 3 -> "TFT", 4 -> "GTFT", 5 -> "GEN-2"}, 
         ControlType -> SetterBar, BaseStyle -> 
         6}, {{$CellContext`stratx$$, Null, "equalizer"}, {
         7 -> "SET-2", 8 -> "SET-2.5", 9 -> "SET-3"}, BaseStyle -> 
         6}, {{$CellContext`stratx$$, Null, "extortionate"}, {
         10 -> "EXT-2", 11 -> "EXT-3", 12 -> "EXT-4", 13 -> "EXT-5"}, 
         BaseStyle -> 6}, 
        Row[{
          Spacer[{25, 0}], 
          Button[
           Style["random", FontSize -> 13], 
           Increment[$CellContext`seed$$]; {$CellContext`p1$$, \
$CellContext`p2$$, $CellContext`p3$$, $CellContext`p4$$} = Round[
              RandomReal[{0, 1}, 4], $CellContext`eps]; $CellContext`stratx$$ = 
            14, ImageSize -> 80], 
          Button[
           Style[
           "custom", FontSize -> 
            13], {$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$} = 
            Round[{$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$}, $CellContext`eps]; $CellContext`stratx$$ = 6, ImageSize -> 
           80]}], {{$CellContext`p1$$, 0.75, 
          Subscript[
           Style["p", Italic], $CellContext`cc]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, {{$CellContext`p2$$, 0.25, 
          Subscript[
           Style["p", Italic], $CellContext`cd]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, {{$CellContext`p3$$, 0.5, 
          Subscript[
           Style["p", Italic], $CellContext`dc]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, {{$CellContext`p4$$, 0.25, 
          Subscript[
           Style["p", Italic], $CellContext`dd]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, Delimiter, 
        Spacer[20], 
        Row[{
         "player Y strategy"}], {{$CellContext`straty$$, Null, 
          "deterministic"}, {
         1 -> "All-c", 2 -> "All-d", 3 -> "TFT", 4 -> "GTFT", 5 -> "GEN-2"}, 
         BaseStyle -> 6}, {{$CellContext`straty$$, Null, "equalizer"}, {
         7 -> "SET-2", 8 -> "SET-2.5", 9 -> "SET-3"}, ControlType -> 
         SetterBar, BaseStyle -> 
         6}, {{$CellContext`straty$$, Null, "extortionate"}, {
         10 -> "EXT-2", 11 -> "EXT-3", 12 -> "EXT-4", 13 -> "EXT-5"}, 
         BaseStyle -> 6}, 
        Row[{
          Spacer[{35, 0}], 
          Button[
           Style["random", FontSize -> 13], 
           Increment[$CellContext`seed$$]; {$CellContext`q1$$, \
$CellContext`q2$$, $CellContext`q3$$, $CellContext`q4$$} = Round[
              RandomReal[{0, 1}, 4], $CellContext`eps]; $CellContext`straty$$ = 
            14, ImageSize -> 80], 
          Button[
           Style[
           "custom", FontSize -> 
            13], {$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$} = 
            Round[{$CellContext`q1$$, $CellContext`q2$$, $CellContext`q3$$, \
$CellContext`q4$$}, $CellContext`eps]; $CellContext`straty$$ = 6, ImageSize -> 
           80]}], {{$CellContext`q1$$, 1, 
          Subscript[
           Style["q", Italic], $CellContext`cc]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, {{$CellContext`q2$$, 0.5625, 
          Subscript[
           Style["q", Italic], $CellContext`cd]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, {{$CellContext`q3$$, 0.5, 
          Subscript[
           Style["q", Italic], $CellContext`dc]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, {{$CellContext`q4$$, 0.125, 
          Subscript[
           Style["q", Italic], $CellContext`dd]}, 0, 1, 0.01, Appearance -> 
         "Labeled", ImageSize -> 95}, 
        Delimiter, {{$CellContext`graph$$, False, "show"}, {
         False -> "transition matrix", True -> "transition graph"}, BaseStyle -> 
         8}, {$CellContext`seed$$, 1, 100, 1, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, BaseStyle -> 13, SynchronousUpdating -> 
        True}, "DefaultOptions" :> {}],
     ImageSizeCache->{644.9128125, {221.19062499999998`, 226.81562499999998`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`p10 = 0.75, $CellContext`p20 = 
       0.25, $CellContext`p30 = 0.5, $CellContext`p40 = 
       0.25, $CellContext`q10 = 1, $CellContext`q20 = 
       0.5625, $CellContext`q30 = 0.5, $CellContext`q40 = 
       0.125, $CellContext`pc = 1, $CellContext`qc = 1, $CellContext`n = 
       20, $CellContext`sx = {3, 0, 5, 1}, $CellContext`sy = {3, 5, 0, 
        1}, $CellContext`graphplot[
         Pattern[$CellContext`matrix, 
          Blank[]], 
         Pattern[$CellContext`distribution, 
          Blank[]]] := GraphPlot[{{1 -> 1, 
           Placed[
            Part[$CellContext`matrix, 3, 3], 0.576]}, {1 -> 2, 
           Part[$CellContext`matrix, 3, 4]}, {1 -> 3, 
           Part[$CellContext`matrix, 3, 2]}, {1 -> 4, 
           Part[$CellContext`matrix, 3, 1]}, {2 -> 1, 
           Part[$CellContext`matrix, 4, 3]}, {2 -> 2, 
           Placed[
            Part[$CellContext`matrix, 4, 4], 0.414]}, {2 -> 3, 
           Part[$CellContext`matrix, 4, 2]}, {2 -> 4, 
           Part[$CellContext`matrix, 4, 1]}, {3 -> 1, 
           Part[$CellContext`matrix, 2, 3]}, {3 -> 2, 
           Part[$CellContext`matrix, 2, 4]}, {3 -> 3, 
           Placed[
            Part[$CellContext`matrix, 2, 2], 0.648]}, {3 -> 4, 
           Part[$CellContext`matrix, 2, 1]}, {4 -> 1, 
           Part[$CellContext`matrix, 1, 3]}, {4 -> 2, 
           Part[$CellContext`matrix, 1, 4]}, {4 -> 3, 
           Part[$CellContext`matrix, 1, 2]}, {4 -> 4, 
           Placed[
            Part[$CellContext`matrix, 1, 1], 0.346]}}, EdgeLabelStyle -> 
         Directive[13, Blue, Background -> White], 
         VertexLabels -> {1 -> Placed[
             Text[
              Style["dc", 25]], Center], 2 -> Placed[
             Text[
              Style["dd", 25]], Center], 3 -> Placed[
             Text[
              Style["cd", 25]], Center], 4 -> Placed[
             Text[
              Style["cc", 25]], Center]}, DirectedEdges -> True, 
         VertexShapeFunction -> "Circle", VertexSize -> 0.51, 
         EdgeStyle -> {Thick, Black}, GraphLayout -> 
         "DiscreteSpiralEmbedding", 
         VertexStyle -> {1 -> Blend[{White, Yellow}, 
             Part[$CellContext`distribution, 3]], 2 -> Blend[{White, Blue}, 
             Part[$CellContext`distribution, 4]], 3 -> 
           Blend[{White, Orange}, 
             Part[$CellContext`distribution, 2]], 4 -> 
           Blend[{White, Purple}, 
             Part[$CellContext`distribution, 1]]}, ImageSize -> 
         396], $CellContext`stratchart[
         Pattern[$CellContext`p, 
          Blank[]], 
         Pattern[$CellContext`q, 
          Blank[]]] := BarChart[
         Transpose[{$CellContext`p, $CellContext`q}], ChartStyle -> 
         "DarkRainbow", PlotRange -> {0, 1.5}, 
         ChartLabels -> {{"cc", "cd", "dc", "dd"}, None}, ChartLegends -> 
         Placed[{"player X", "player Y"}, {0.45, 0.8}], 
         FrameLabel -> {{"probability of c", None}, {
           "actions by X and Y in last round", 
            "player strategies\n (c=cooperate, d=defect)"}}, 
         LabelStyle -> {13, Black}, PlotTheme -> "Detailed", ImageSize -> 230,
          FrameTicks -> {{{0., 0.2, 0.4, 0.6, 0.8, 1.}, None}, {
           Automatic, None}}, Frame -> True, 
         ImagePadding -> {{40, 20}, {60, 60}}, AspectRatio -> 0.75, 
         ChartElementFunction -> "GlassRectangle"], $CellContext`payoffchart[
         Pattern[$CellContext`pff, 
          Blank[]]] := 
       BarChart[{$CellContext`pff}, ImageSize -> 135, BarSpacing -> 0.25, 
         LabelStyle -> {13, Black}, ChartElementFunction -> "GlassRectangle", 
         ChartStyle -> "DarkRainbow", ChartLabels -> {"X", "Y"}, PlotTheme -> 
         "Detailed", PlotRange -> {{0.2, 3.}, {0, 4.9}}, AspectRatio -> 1.25, 
         FrameLabel -> {{"score", None}, {
           "player", "average payoffs"}}], $CellContext`eps = 0.01}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False,
   FontSize->13],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.940844493047369*^9},
 CellLabel->"Out[7]=",
 CellID->1073860459,ExpressionUUID->"85aa4b4d-2da7-4f48-bb38-60f90dd53003"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b6defd7d-4800-4cd0-8869-92176b3afdd5"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"5fa7fb06-bd8c-4828-a5bc-11e2f4c9b5f6"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
9w8dOvSxxx5Tg7GWYpSPaJHt3XffFSnCK88++2yz123l5eXdfPPNkyZNKi0t
FSnYV30/2D333IPVBQsWyF0MpViEt3r1arGalpYm7FVKsXheuG3btvZPGVLf
vHnzpMDryH788celS5d2795dfdGW4JVXXkEKdsT/N2zYYFE/hJDwoBQTQggh
hHgf56S4Tp06559//kMPPTRixIjKlSvXrl1bvjxKleITJ040adJEvOhp9uzZ
11xzTdWqVTVSDCZOnCi07sMPP9QcTgy2du7cecqUKZMnT27cuLE6kGpHip96
6ikxcVpNHDZsmOEjwBLxAPLVV18N5Z8xY0b9+vUrVqy4efNmsfXll1/GVsgp
SkhNTS0zkWLxc0Hr1q0hsFBsVIU4fSnFACUjZdCgQfJ7zdanXBZ4AXXNmjWT
TgG7FwPQqhTDnStVqoTEc845x6JyCCFhQykmhBBCCPE+zknxqlWrYG1YEB8a
Vh9xHTduHNKFKpYFbFE+ltu2bVvx0SX59mnBjz/+iERYp/79V6WlpVDmNm3a
iBJatmypjs+KkVCLjw398ssvcuK0mp6RkYFEBL9u3TrDHZF/yJAhVapUEefY
qVOntWvXyq35+fkjR44UW8VMclQ1luXXl9Tgq1evLs4ONSPmXcsfEMDixYub
NWsmRoftnLKgoKAAx505c+b7779//Phx8eC25o3f1157LRJnzZplVjmEkEig
FBNCCCGEeB/npFgMzsIc5deKrTl69OjBgwfNtsKpUebtt99uUUJ6err6uHFs
QIWkpaWJt2rrKSoqysvLi7AQQWFhofp2a4HhKe/fv3/27NlwYZmChqtXr17N
mjXlhHZB7969K1WqtHfv3qAREkLCgFJMCCGEEOJ9nJbiyIFWf/HFFx06dKhY
saIcXCYWwJ3FM8X33HPP4sWLn3322V69eqmD7ydOnPjpp5+mTJmCxNtuu83d
aAmJYyjFhBBCCCHex/tSLJ4mrlChgnyxMwnK+vXrO3bsmKRw6623ypnneXl5
IrFz584HDhxwN1RC4hhKMSGEEEKI93FCivfv379169YTJ05E46ayDEUtX75c
89VjEhS01K5duz7//PNvv/1WM4Ubmz777DOI8/Hjx90Kj5BEgFJMCCGEEOJ9
nJBiQgghZZRiQgghhBA/QCkmhBCHoBQTQgghhHgfSjEhhDgEpZgQQgghxPtQ
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
T2rXri2WIZIDTrFx40aLI8JGkxQgknJTdKXYOjyEAYGtfwrEKXKi9n744YdV
q1ZVqVLlxx9/tC/Fu3fvbtSo0cyZMw23UooJIYQQQkjYOCHFmzZtqlGjBm56
YcEPPvhg165dxSd6pRTv2LED98lVq1aFReIud9CgQdjaqVMn9R1TyIBEbHrj
jTdEyt133y0mJE+ZMmXy5MlwH3Xs2HUpBr1798bq1VdfDY2aMWMGTqFixYqb
N28WW2G72Nq8eXPEk5qaqj8cbvtxUsnJyRAKyL4o7fLLLw9a4Tal+KGHHpKz
1rEwbNgwka7XT/SKe3QgwyuvvILqsqMw9qXYflTFgdFJfWCI6vzzz5cFXnzx
xU5L8UcffbQjgHj1liS6Uix+CBJj8du2bXv66adnz56NFBioxRHRecaOHbvj
FLm5uXJTdKXYOjyL6dOQYizcddddaLUlS5YIKTbrcgKoLv6MDB8+3CwYSjEh
hBBCCAkbJ6QYLFu2rEePHmJMDRol3pADBZYZUlJSYD3VqlVDOswRQiS/tSRY
vHix+JBTz549RUppaSlus9u0aSOGwFq2bKmOug4dOhSJUAC1EDHDU37kqOyU
FKsvlMadOexVLMNVsXXcuHFmZYrb/hUrVojVW265RViGWIUdDxkyRLwzCucO
zV+7dq3cNz8/HxIttoqPMmsOVxa4he7fv3/16tXFKOStt96KOg9a2zalGO7f
okWL6QHgejgE8hcb6SfOaMXprFy5sjjwHuCGDRvKAn/55Rf5sKeZW1mLVUhR
YdkwsE8++aRx48aywNatW8fHM8XZ2dnoCW+99ZZMgU6iKg4cOGBxxJg9U2wd
XlApxu6tWrWC6gopNutyxYE5CQMGDOjTpw8/yUQIIYQQQpzAISkW4AZVCqMh
uJVNS0srNn9mFje66gucBdBn+fYqD4IqwknBFg234nRwb29dAvJATAy/62SI
HSlGK8NHpE8dO3asRo0an3/+eXEoE5Vh/XXq1IG95ubmvvnmmxD8gwcPGua0
KcVRiWr//v2ws6eeegpRvfjiizF4pjg2UgzglY0aNVq1ahWaFZdqly5dUC3W
R4yZFFuHhzDGjRsn3z59+PBhkS6lGCxfvjwp8Kp266OgHGTbsmWLKMrwMXZK
MSGEEEIICRtHpZjEBjtSPGnSpD59+qgpw4YNGzVqVLHyDSM773n+4osv2rZt
i2z16tWDF5tlsynF0Yrqvffea9KkCbL16tWrR48eUZTiCy64YM6cOWqKtRRr
pNUigDIb1olm/etf/1q5cuXk5GScXf/+/TWR6484fPjwmEmxRXgIQ320GZtE
uirFYOzYsdZS/MsvvySdzrRp0/TZKMWEEEIIISRsKMVxgP23T0cLOfBnRkhv
n44KRUVFQaMShCTFTmBfigVoWVyn8lO/jhKSFAtiGZ4ZlGJCCCGEEBI2lOI4
IPZSHJTYS7F9fCfFsSQMKfYClGJCCCGEEBI2lOI4QCPFRUVFbjsKpTh4AGWe
tE4/SjE6PKWYEEIIIYSEDaU4DoAU5+bmonUKCgooxUGhFFvgXylG58clkJmZ
6fbleBqUYkIIIYQQ70MpjgMgxWgaeLF3pLg48M2drKwst6MwICuA6wGUedU6
RcN5Njw9UopxCSB4ty/H06AUE0IIIYR4H0pxfIB2ycnJyc/PPx7AC15cEsDt
KAxwPTARQJlXrdPj4WkQRgzQ+XEJFBYWun0tngalmBBCCCHE+1CK4wO0y8mT
J/Py8jw1WEwsKPO2dXo8PIkcJkbnx6rX/kBRigkhhBBCvA+lOG6AHYh51PRi
X1Dmbev0eHgC9Wli/GnCgttXoRZKMSGEEEKI96EUxxP5+fkwhcLCQtiBeBO1
sGMVtz2G/D/KvG2dXgtP041F35ZdPTeA29efAZRiQgghhBDvQymOJ0pLS3/7
7TfxliQ5ZEy8CdrI7RCs8Hh4xwMDxPn5+ejz6PDHAwF7EEoxIYQQQoj3oRTH
HxCEkpKSP/74A40lPtUEdyggHgMt5XYIVng2PHRmdOm8vLwTJ04gyJycHC//
UaIUE0IIIYR4H0pxvPLrr7/CIH777be8U+QSL4E2cjsEK7wZnujJ+EMkRorF
W7K9DKWYEEIIIcT7UIrjm5MnT5YST1IWmO7uWTwenhgm9j6UYkIIIYQQ70Mp
JoQQh6AUE0IIIYR4H0oxIYQ4BKWYEEIIIcT7UIoJIcQhKMWEEEIIId6HUkwI
IQ5BKSaEEEII8T6UYkIIcQhKMSGEEEKI96EUE0KIQ1CKCSGEEEK8D6U4vjlx
4oT4hA0azt1v6JDYIxvdLx8wij8oxYQQQggh3odSHK+UlJQUFhYeP34crZaX
l5dLEhI0PToAukFBQQG6hNu9MuGgFBNCCCGEeB9KcfxRWlqak5NTFhgmhhah
1fLz8wtIQoKmRwdANxCDxegYvIRjCaWYEEIIIcT7UIrjjKKioqysLHixEOHj
hAQQgoyOge6BVbf7aaJAKSaEEEII8T6U4nhCzJgtLCyEAYm506DodIpJAqBp
dNETZMcQ/cTt3poQUIoJIYQQQrwPpThugOyIZhIDxPRfokHYMbqHuJCx4Haf
jX8oxYQQQggh3odSHB+gXUpKSvLy8mjExALpxegqWOXl7DSUYkIIIYQQ70Mp
DpuPP/74gQceyMzMxHJGRsZtt932/vvvuxVMYWFhTk6OeM+w96W4JIDbUUQZ
X5yUnEqNroIOg27jVo9NECjFhBBCCCHeh1IcNnfeeWdSUtLOnTux/M4772C5
U6dObgWTnZ2dm5vrl2HirABuRxFl/HJScrAYHQbdxq0emyBQigkhhBBCvA+l
OGxUKYZfTJs2bfXq1W4Fk5mZ6aOnifcEcDuKKOOXk1KfLBbzHIhzUIoJIYQQ
QrwPpThsVCl2naysLLSOeOM0pdgV/HJSQorRVdBh0G3c7rlxDqWYEEIIIcT7
+FqK9+7dO3HixHPPPfeMM84YNmzYJ598om49ceLE888/36dPn2rVqnXt2vWj
jz6aNWsWMv/yyy/Y+v3332P5zTfflPnz8/ORcu+998oUKMMdd9xx9tlnV61a
FSVMmjSppKREblWlGJFg3yeeeEJswrHONSInJ0fuvnDhwsGDB9euXbtbt26T
J09Wx+zGjx+PzN99912/fv2qV68+Y8aMoFWhSrHb1hUcv/hjSPjopCjFMYNS
TAghhBDiffwrxbm5uZ06dYKWdunS5corr4Q8VqxY8YsvvpAZpk+fjq1I79+/
/znnnINl6C3+v2XLFmxdsWIFlqHJMv+xY8eQct1114lVnGmHDh1E+bBXeDeW
R44cKfOrUoz/YxkpYtPXX389TGHgwIHYWqtWLVSgyDBv3jykwIixqX379li+
9NJLYSti6/XXX4+UJk2a1KtX77LLLps/f37Q2rAvxWlpaYcPH3ZCtYqKilJT
U8Vrja0JyR+9ELAdPHJSAhSen59vtpVSHDMoxYQQQggh3se/Ujx27FiYI8xX
rG7evBmOWbduXTGYu3Xr1goVKjRo0GDv3r0iA/w3KYBNKV6/fn337t0nTJgg
ViFQjRo1qlq1KhZEioUUa7jtttuw9cMPPxSrEKLKlSu3aNEiPT1dpIwePRoZ
nnnmGbEqpPiaa66BvNisDTtS/PHHH6NCcGjUTI8ePXbt2iXSK1WqVEHh9ddf
RyJUvcLp9OzZ08LCli1bVr9+/Tp16iQnJz/yyCPWymbTH10PuGbNmrI0ROL9
kwLr1q3DXpUDDBs2LCcnR5+HUhwzKMWEEEIIId7Hv1Lcrl27Zs2aqSn33nsv
XHLTpk1Ynj9/PpZfeuklufXEiRMhjRTrGTNmDDJs27ZNrNqU4tdeew2b1FnZ
CxcuRAqsR6bATZAyZMgQsSqk2E67qCVYS3FeXl6tWrWefPJJ5Dl8+PCVV145
ePBgsQmqBUM8cIrc3FwkQtixnJKSgkg2b96M5YyMDDMRQ5n16tWbO3cullet
WoVd0K8sxM2OP7oecHZ2NtL37t17MADKtw7Y9ZMSdOzY8YEHHigoKEhLS2ve
vPmcOXP0eSjFMYNSTAghhBDifXwqxUJgwfkKIuWtt94qOyXI33zzjbrXTTfd
FJIUQyumTp06YMCACy+8UAi13L3MnhSjbqtUqdK7d+/iU1OjwYQJEwyDb9So
kcggpBjx2K+QoFK8Y8cOVf3279+/Zs0aqWPff/+94V7ivIKKGNzt/vvvl/N1
69Sps2TJEov8dvzR9YC3b99ev3794oBBW5cmcP2kAFx4wYIF0Hmx+qc//WnG
jBn6bJTimEEpJlFHPBnUt29ftwOJESkpKb4rWSXR2osQQnyKT6X44MGDwitv
VIBaXn311V9++SUy3H777di6fv16da9Ro0bZl2JUS7169ZBy5plnDh48WEyB
DkmKMzMzW7Zs2bBhQ7iPmi5i69q1qxp8u3btxowZIzI4IcXFgTHEtm3bvvDC
C1u3blXToWNz5sz5+hQ4bhg6Jlm6dGm1atVwyhZ5bM40djfgtWvXNmvW7JJL
LsHhzjvvvNWrV1uX452T2rdv37JlyyZOnNi0adPU1FR9BkpxzKAUk6iTOJIF
ae0bwInCRTU6UbLhgRKhvQghxNf4VIpBkyZN2rdvb7b1lVdewT9D8+bNUxO7
d+8urRbegeVx48bJrbt27VKl+O6778bqyy+/LDOMGDHCvhSfOHFi4MCBMJ2V
K1dqYps7dy4yv/fee2bBOyTFaWlp8O7atWuj8B49emzcuFHqWJ06deqfQp1I
HKqO7d69u1GjRjNnzrTOZtMf3Q34o48+Sk5OfvXVVzds2DB69Oh69epZvxrL
Oye1aNGiVq1aYZdJkyZlZmbqM1CKYwalmESdxJEs585UPJMSGykWao9zicGx
CCGEhI1/pfiaa67Bv2iLFy+WKc899xx0Ukjrv/71L2zt0KFDXl6e2Iqc6lDv
gQMHsKxq9dSpU1UpFma6evVqsQqXEQPHNqX4iSeeQIrh15RQ4djUs2fPgoIC
kbJ///6hQ4c+9thj6qGjLsUC5Fm2bFmXLl06duwodczmxF30lnt0yMyIoWvX
rsOHDw9qbSG9qDmSgK1jtg4YhWzevFksFxUVQVQ/++wz75+UJDU1FYWjV+sL
pBTHDEoxiTqU4siJpRQTQgjxBf6V4h07dsBTqlatevPNN8+cOXPQoEH4B65T
p07yU8J//vOfkXLOOec88MADt9xyS/Xq1atVq6ZarfgWEsTk8ccfHzlyJIpS
pfjVV1/FauvWrR999NFJkyY1adJEZLAjxd9++y0cp3bt2pDimQryk0xiGLpz
585TpkyZPHly48aN1bFjJ6R406ZN6juXlixZUqlSJfG0rH0dw8KK01m5cqW0
vAEDBvTp0ydan2SKSsAWMQcNeO3atQsXLpSrZ5111qJFizx+Unv37kU3g8KL
bOi6vXr10hdIKY4ZlGISdYKqYkqAGEYUERahRijFFiX7VIp91KyEEOI7/CvF
AP9A9OvXT6huxYoVb7zxRvmRI4Db/r/85S8NGjTAVqjHXQFUq01NTe3atav4
l7Fp06YffPBBkvIK6NLS0okTJ0KlReHjxo0Tu8u3TyMFqyhEFKVOxn799deT
jDh48KBaeJs2bUR6y5YtFyxYICMfOnQoEnNzc+1Xhc0Xbc2bNw95kPmGG264
8MILxSbD9x6b6ZgZojZQt6IQwy8BSey/kyrGASOqe+655+jRo1iGadasWXPd
unVYfvPNN9GFIn9Q2umTwl61atV65plnUD6i7dat2913363PRimOGZRiYhPx
8Cz+UYMJYkH+q6Gfdmumipod9btbP6IrdtdolziWWpphPDJymTOovumjNQxV
bFLDtj6c2FFfCWo86qFltaux6QMzOx19/ZSfakrN4fT1pg/VbIq1dbMSQgiJ
Cr6WYgHu8NPS0oqV1zurQD9/+eUX8cHfv/3tb0mKFAuys7OhD8hmuDvOF4Xn
5+dHPWwBLP7IkSORl2Nn+vRrr71Wu3Zt8YXcDh06/PTTT1LH1H9tkS1UHUMN
a/7JnjZtmkV+mzONYx/w8uXLq1WrJp7zLSoqmjRpUnJyMtS4bt2677//vnWZ
rp+UAGbdokUL8Z3iQYMGoXfp81CKYwalmNhEOpoqa3JZzWkoxZodzbRapBgq
nj6zYTB6IxObNOJmLcXSJfXRigxyJFfF4nAiJFVRNcWqIVk4pnpc67M2qx8Z
g3V7WYRqZuiabIkwf54QQmJJHEixfQylOD6w+Uwxtm7btu3AgQN29Mo57D9+
G/uANR9gOnbsGDpM0Ce1iz12Uunp6epYsz4ASnFsoBQTmxjKjnQ0zcijYYqF
T2lSDEeZzXJqxlj1B1KtLeUUFmcqT0rNZvNM1cDk4aSuGtqiKuD6w2liU0/E
+qytE62lWGYz+3nBugbMmpsQQkgkUIrjA/sv2vICIb2Tyi/46KQoxTGDUkxs
opcpgV4h9aJkaFiG+xoKqSxTlmChXfqj69XbGrPp38Jz1bOwHhM3LNYwDL1s
GkpxSCWY1bk+PDMpNpwCral2UZrhUfryjdaEEBJVEkqKMzIyxMdh3Q4k+qhS
LN+z5Fl85I/28ctJoXtQimMGpZjYxEyyynVmZKiKZoOGerc19CxD7zYMRq/V
ZqPPZsgSgjqd9UixWeF2yjGUYjMD1ee30Gd9yfZ/xNCfneF4PSGEECdIKCmO
YzIzM9E6BQUFlGK38MtJCSlGV0GHQbdxu+fGOZRiYhOzkdlynSiZjbRK5KRi
OWqpn+JrOJtXE4wYi9RjczQz6MlKNzTb10KKgx5OTuSWj+IGlWKLs9bUpH19
1p+F+puAxYE0mYPWFSGEkAihFMcH2dnZubm5fpHirABuRxFl/HJSUorRYdBt
3O65cQ6lmNjEQoo1VmU2Uqy+hUmD4dO7FlZrVo5G0Mx2D4phtPr5wGFIsUU9
2JRia4JKsSzH7CymK88dW6DZXQPtmBBCog6lOD4oLCzMycnJz88/HsDjXlwS
wO0ooowvTkoYMUBXQYdBt3G758Y5lGJiE9W5NASVYtWb5NOmoijDYjUjp2Z6
aDZSLIhkpFiQovv+lKacUKVYLUqtB305oY4USwwrUINNKbY4iv7sRKJGjTmn
mhBCogilOD5Au0B58vLy/DJYTFxBDhOjq2CVl7PTUIqJTSw0J+gzxVKy9Lsb
Fqsq4XSjx4dD8tywpVhlutFk75CkWJVNw002pdiOaVpIsf3p00GPYoY8U/vP
cRNCCAkKpThugOmIZqIXE0PUp4nRVbDgdp+NfyjFxCYWmqNxPbORR/2O03XP
/2rKlJONDaXYzLkiHCkWBzV0z0ik2CIMfRVZvGjLTHXVs7YQW/2xzKTYbFaA
OlIsfivQ54zcrAkhJIqoj66of7XUtzp4f3ILpTieyA1QWFgI3xFvohZ2rOK2
mZFYoGl00RNkxxD9xO3emhBQiolNkk6hSQ8qWeFJsbxLMdzXQtz0hwtVii3c
M3Ip1hervqvK+gRDOmuxqgnD8Fj6swhaA9ODPa9t0eiEEBJ7kk5HJGqejqEU
kxgDA8rKyiotLc3PzxdDxoQcDwwQo0ugY6B7YNXtfpooUIqJTeRtg/pzuuGU
YLORRzWP5n1TFkONZj4rd9cfWpMYxkixdcCGOYMOTBsGrHl7s5pfX7JhIWpg
hiXLEWTNM7+aSjOcvK2+W8ywBgwr3LACCSHELdQfYAXluj/g3jfickpxPALx
ycnJwcKJEyfy8vLQakKQSQKCpkcHQDdAZ0CXQMfgJRxLKMXEJtKSknRo3Ecv
WaqOqSXIB3WttdfsXkVjeWbxhPFMsVnJSSZDt+om+y/akguGI+aaijJMtzhr
s7MIOrIfUg1Y5OQDxYQQj2D9V86tqMKAUhyvlJSUiBnUwolALkkwRLujA4iR
YnQJt3tlwkEpJjaRQiRGHqX4GA7y9jX6epGqgXJHkW7zSVvDPGowhvFYHCJo
yRp1tchm54zKdfWgjrnrg5cl26xM6xMxe9zYsL0MD2RxUprfPXwx5kIISRAo
xcQXnDhxopQkPGKYmMQeSjGxieEooaNMN3rvNIkQP94HEhJLxM9EEsM5GGZ/
l+TPhvpEiwJlHjGJ1zCbPirrv41qOSKnPIQ+p1q4/T+5aoH6w1lHZZbZsAIl
YpPmFDTBm1W+/GVP0ld58ERTrHWZLkIpJoQQh6AUE5vEXorpbmGjHw6W8KcG
QsyYbv7UgLxkLN53V2709IRZmdNNnvLoa/TcRF+Thyb6Wn52TXM4w2vfZngW
1TVd9zH3JJPpInbOQtqrxXmpKYZlTg/2vInFXoa1ZxZS7KEUE0KIQ1CKiU3E
jYHTUqwOOti8MSOGGN7ZTjd6LxYhpPz072vLP0SqM8qcFuKmyWldptk7BPqe
es+AphD1DVHTT39sRB+DOKJAPQtDYQ8annWNJSmvBFTLNMxseBZ2fnPQS73F
mfZV3vQo/0GROctPF2q5u6ZMfS1ZV0gMoBQTQohDUIqJTWIjxZphC0ePFd9M
P/0hX8PhJ0KIxGwShV7TzGZiTNc9uGp2xem1Wp3Kq8kctJC+Rm81NIzNUCr1
JetPxBCzH9ksasx+VeiPrinB7EwNtdrwjPQlWLesF/5JohQTQohDUIqJTcSt
VwxGivU/1JPwkBMmVTtmrRJiiHzUVL9JL1mGPxLatLZyI3GTUqzPaRZVitFn
x83cM6TwzE5Qg0UJGrFNMXmcudxIVw3NVH8sizPVa3WoUqwP1SN/OSnFhBDi
EJRiQgghxBAxq1bvX2balRTsY2eaEjRSbH+CruZxWplo4bmaZ1LshGc9q8Si
BOtI9GdhOANcP9Rr0+j1R7cpxfLQSaeewraOP/ZQigkhxCEoxYQQQoggRXlT
dNLpqIqkH1LUz742e6+UYZlBpThFeR+yvhxNVIYlaDw3pPAMMZtwblg/5ae/
5lpzIM2J62vDsLbNztSsdexIcYruRVt9Q/+in3NQigkhxCEoxYQQQki5kSeK
Jw4MDVEz1KvPoz7za4YdKdY8BCHLVNNFzjCk2GZ4hoQkxWZnYXjimhMxG4V3
QorlJutfRdyCUhzfyO8Uo+Hc/VQucQt0A7dDOA3ZFRPh68mUYkIIIUQqUl/d
o/eGTiTMS3iWoV4FHfy1k1nzmgX9jOLIpdhOeIbYnz6tqdugr8AqP/03h766
udzWZxrJ9Gn9Oar17PqTxZTieKWkpKSwsPD48eNotby8vFySqMA93Q5BCzok
uiU6Z0FBATqq29eKg1CKCSGEJDgWr0cuN3+nkxQlwzFTa+vUuKFZZuvRTI0U
l1u+IEtzFiGFZ4iFFGvCDprT7MRFur4GLN6IpT+62VHMpk/bqT23oBTHH6Wl
pTk5OWWBYWIICFotPz+/gCQq6AZuh6AFHRLdMjcg7Oio6K7x+oeFUkwIISTB
sZAsqU56IZKjmYbeGlKZZopqoa59dS/assivP6L1m5btOKAsU1+CfQEXOS2G
yM0maZvtqD96uW0ptpB3/Wi1K1CK44yioqKsrCx4sRDh4yThgXi6HYIpQpDR
XdFpser21RN9KMWEEEISHDMNVF+7pBci663lirdq3jcl0zU5zaRYL56aR3St
T0TNbPgqsKDhGaJOijZMt392hseSexlWr9mPFYaqblOKzbqBxQ8jMYZSHE+I
uamFhYVwDTF3GhSdTjFJMCDFbofw/9B0RdE/ZXcVvdftayjKUIoJIYQQKWjT
T9FXeRWV9QCimS6p1izeW6VqoJ3p0xrvnq68GdusKP0rrdSzMHwyN2h4hmgO
NP30t3abHUitW/UsrGvPOgB98IZWa2f6tOYHBLVY1424nFIcR0ArRDOJAWL6
LxF4R4oNEXaMTiv+vGDB7SspmlCKCSGEkHIjnRQepL5TS4OdQVV9sX117/Ky
8G6L3S3GkTXCWG4+AdhOeBbn1ff092Cb7W5xFMNTEAS1UZvB25diwzKtY4gl
lGLB22+/PWrUqMzMTLcDCRO0S0lJSV5eHo2YaPC4FBcrXowOjNV4+iNDKSaE
EEIkKafwVLEpCuGVYC13YRSuMU07JYR6Fha+HEmxdnCizMjxixTjuGvWrNmy
ZYtDRbVt2xYdY/HixZGXH3YMkVBYWJiTkyPe6Ot9KS4J4HYUoeHfmP0ixccD
b0pHN0ZnjtZ14TqUYkIIISQ+EOO2FqOuUVQ8i9dS+aJ8P+IXKT58+DDabuDA
gQ4VtWLFCnSP/Pz8yMsPO4ZIyM7Ozs3N9cswcVYAt6MIDdSwT2P2vhQXK4PF
6MYIO1rXhetQiv2O137HJkRD7EdbeFGQhCXo26ejeCynpdUjL3z2FJRiV4h6
DJmZmT56mnhPALejCI29e/f6NGZ/STG6sX+fYtBDKfY14kk33jO4jrsKlmLy
RRjXi9U8mudoLaWc/vpcXhckMZGXrRgydvRVUQ5Jsfq2rqj/WfM7MZZi3KVP
nDjx3HPPPeOMM4YNG/bJJ5/ITTfccAPSV69eLVZxJz906FCkbNmyZebMmWef
fTbarkaNGkgZOXKk3Av3/OPHj+/atWutWrX69+///PPPiy+fCrAJ+b/77rt+
/fpVr159xowZZkVNnjwZq+rduJ2SUXvXXnstzqVx48Y33XTToUOHZIasrKw7
7rgDx6patSoKmTRpUklJidhkcToW9WMNDofWEW+cphQ7AaXYUYQUowOjG6Mz
2+z23odS7GvEnYPbUSQ0KYHPl7g7wc+zUqy++sbpOZaGry3ieDFJQMzePh31
y8E5KY7NL2l+JJZSnJub26lTJ7RCly5drrzySlhqxYoVv/jiC7EVTYPV9u3b
i8+Vzps3DzlHjx4tlq+55hqswj2hig8//LDYBTfPHTt2RDr2Qoa6detiGfop
j3j99dcjpUmTJvXq1bvsssvmz59vVhTMFInSam2WfNZZZ7Vt23bAgAEwX6zi
ELK6OnToIM508ODBMFwsS/k1i8G6fqxRpdhdtUlNTRWvS7LAU1J8+PDh/Pz8
oNkoxU5DKSaeQtyQcDjMXbzw1Js3pdjwa6FOYHiUFPPXBROSCOASEMPEjj5N
4EThInLqsCGxlOKxY8eKewyxunnz5tq1a8M35RDq5MmTkWHq1KlHjx6tX78+
lPPYsWNik+F849tuuw2JDz30kFiFiwkVXbVqlUgR6goDFaJtUZRGim2WfN11
15WWlpYFHult0KABUuAgWF2/fn337t0nTJggMkMVGzVqBHHGgkUMQevHAjtS
XKlSpQoKr7/+OsJGJd93330yz4033njJJZdgAedeQceuXbsspGbZsmVotTp1
6iQnJz/yyCMWOW1KsdMBr1u3rn379pUDDBs2LCcnxyKzTSl2OmbJ9u3ba9Wq
1bRp06Ax25Fip8PGBaVmXr58uT4PpZh4Ck4t8wKUYjNiVjNm6s3BYkJInBFL
KW7Xrl2zZs3UlHvvvRd/VDdt2iRWcVfcqVOnKlWq9O/fH+krV66UOQ0tsk2b
NpBNNaTPP/8c2R5//HGxKtRVc4J2pNhmyd99953McNNNNyFFTv/WMGbMGGzd
tm2bRQxB68cCO1IMGYG3HjhFbm4uEj/99NOKFSviRLC8ZMmSatWqbdmypTjw
jiaRrUuXLk8++aRYtigch65Xr97cuXOxvGrVKoSNrmWW2aYUOxow6Nix4wMP
PFBQUJCWlta8efM5c+ZYZLYpxU7HLCgqKurTp8/555/fuHHjoDHbkWKnw77q
qqteffXVg6cwHJqnFBPvYGeY2CEdsFmsu0ePYpnWQyF21M/pmKMoxVEsNmY1
YybFHCwmhMQZMZPiY8eOiT+t5yuIlLfeektm+/HHH5OTk5E4btw4dXe9ReLO
XPxBVrPhfhuJ1157rVgV6iqHm82KKjtdiu2XrN69z5o1CylfffWVWIVnTZ06
dcCAARdeeKF4ghjIbzDpY7BZP2bYlOLvv/9en37rrbeec8458JqmTZs+/fTT
mq3du3eHzgS1qvT09Pvvv1/KTp06daBRZpntS7FzAcOFFyxYgLYWq3/6059m
zJhhkd++FDsXs+S1115r2bLlP//5zyhKsaNhd+vWbcWKFdbiTCkm3kH87TWU
YvGUa5JCVKZY2yzW/tENcxqO9wmv0TwoF1Kx+myyWDWzGoC+HE1R8mlisUn/
2KxDDaGvh6hIsf1ig56XeLGPpmY0uh2VTqK+QUgcRVOO2MTBYkJIfBAzKRZS
CW5UgPddffXVX375pcyG2+9atWolnf4Ab5mRRcLCkILd1Wy4nUbiFVdcIVbD
k+LwSn7yySeTTkkxqrRevXpYPfPMMwcPHiwmYydZSrHN+jHDphTPmTPn61Mg
eJGekZEBt8Khe/Xqpd89VF8DS5curVat2v79+80y2JdipwPet2/fsmXLJk6c
COlLTU21yGlfip2O+ejRow0bNly8ePHy5cujKMWOht28efMhQ4ZUrVoV9Yzb
KsM8lGLiESwkSOMI0dIxm8WaZbP4PkjQMmWiPnNIxWrMSFOsJGg58qCyFfS7
W5QQ4etuDGtYLsSgWPWszWrY8D0/slktakYTVdBj6Q+kKaSvyedpCCHEj8Ry
+nSTJk3at29vnQeeWKlSpU6dOlWsWPH777+X6YYm26xZs5YtW6opa9euRbbJ
kyeL1fCkOLySVSm+++67sfzyyy/LrSNGjEiylGKb9WOGTSmuU6dO/VOo05uh
PIjn7bff1u8VqhTv3r27UaNGM2fOtMhjX4qdDnjRokWtWrVKCvwIk5mZaZHT
vhQ7HTMU/vLLL8dCdKXY0bArV66MS+ynn376xz/+UaVKlffff1+fh1JMPILZ
xFTpCKpXRv6+I5vFGh5IlVmZqH40xPBAagl6q7IoQZ9TLVafM+mUpco30pid
r/UJmp2I4Y8GYTuadQ0nRfWNWGbF2m84+zUjh4MNW1PzM4Je1S26N2dQE0Li
iVhKsXjl8uLFi2XKc889B7uUqogbZmS4//77kZKcnNyhQwfcJItNYqC2bdu2
aoHXXnstEufPny9WS0tL+/Xrpx7CUIoNi9JIcRglq1Istsrni9PS0sTAsTxT
wxiC1o8FkUyfTk1NrVSpEg594YUXBh0NRIe5R4fcijC6du06fPhwa0WKcPp0
SAEHjVkU2LFjx6lTp1oEE+H06WjFvGPHjmrVqm3YsKE42lLsaN9Yt25dQUGB
WB47duyoUaP0x6IUE48gvEA/+GsoYuWnu5jh+KaesIvVZ5ObNPpsqCp6OTIz
vjCKVWMzi1aWY7hJv5fhQe1XRUhYN4SsolCb2Gax5SY/L6iZ1XqIsGYsjqXJ
aVGlEVY4IYR4ilhKMe7n69evX7Vq1ZtvvnnmzJmDBg3C39JOnTqJtyvj7r12
7dotW7bEUbA6ZcqUpIAgy92xL1Kw1xtvvCFSdu7c2aBBgypVqtx4440PP/zw
RRddhAyDBw+WQRpKsWFRGikOo2RVimEKWG7duvWjjz46adKkJk2aiG82qXqr
j8G6fqyJRIoHDBjQv39/CFSdOnWeffZZa/HJyMhYcTorV64Um3B0FNWnT59o
fZIpKgGbxYzdUcnym85oqV69elkEE6EURyXm4sDTxOgVVQOIp+8rV65sFljk
UhyVvoF03IChf4psEyZMMPzZhFJMPIKhWVhIRMopykM3JpvFWmQr1xmTmRmV
G80Mt8hsKEcWnqt3bYtHWQ01Si/X+pKtRSzswWKLGtZsCqmJ7RdbHmLDWdSM
4Qlqasbsl5/y0zteebAHh623EkKIj4ilFJcFPkbcr1+/atWq4a9oxYoVoZzp
6eliE26/kfjZZ5+J1YKCAkgl7tVleIsXL27WrBny9OzZUxa4bt26K664onr1
6khv3rz56NGjsaPcOnToUKTn5uZqwtAXdcstt2AVd+9hlzx79mykQATKAiPL
EydOFPviNMeNG3fXXXclKW+fNjsdi/qxJuy3Ty9YsKBGjRriezqvvPKKXDYT
HwtwmkkB8RflW3zhKJK3T0crYJRWq1atZ555BpW2f//+bt263X333Rb5I3n7
dBQr+dChQ+tP8fLLL59xxhlYkIOwhjGH/fbpaIWNPtmoUaMnnniiqKgIl0DT
pk3//ve/G2ajFBMvYHifbzFOqiHFBqEWazG6Wm4ypmwWm6HqBhVMdahaT0hz
bvUhpQTmV8tCrKVYnSFsFknYUmy4o75K7TdxSMXaqWGLkkOqGQsB10ApJoQk
CDGWYgHuftPS0nAbHMa+uG2WX/uVIAVeE5WiolKyAHWF08zPzw81hjDqx6YU
Jym89tprR44cadiwIcRQZEAkvXv3HjBggLrXBRdcYP2tIsEvv/ySdDrTpk0z
y2xfip0LuDjwYeUWLVqI7xQPGjQIhVtkti/Fjsas8uWXX0Zx+rSjYSPUBg0a
1KxZMzk5+S9/+YthL6UUE49geJ9vX4pDwmaxFuN6mkKspbjcZPzX4qDhTQu3
dqWU098srcGmFNuMxCbWI6fhlRlSsTZr2I4UW6CRYjsya51T32SEEOJTXJFi
EnXsSLF3sCnFsSE9PV0MjFpjU4o9hX0pjgHQ6q1bt8pvYOmhFBOPYGgBlGKp
PxaYHUVFY3/CjsXoqp3p09bjofpIbGIxxBy5FNspNkV5uZmd8wqvZuzMENBA
KSaEJAiU4viAUuw0lGKnoRQTjxCGFKuZ7c+ttV+s9axgQym2FlI7cqQqqnWx
eiwyS/XTbw3pmWI7YdgnJCm238RhSLHNGo6wZixkVtNFKcWEkASBUhwfUIqd
hlLsNJRi4hEMh2UtjGO68saklBCnGYdarGHAGjGxsJjpJi93srBXm8XaHClO
UUacgx6x3FL9bEZiE5sNUR5iE9svtlz5ucDOeUVYMxa2Pv30B9gtygy6lRBC
fASlOD5QpVi+UdmzUIpjg4+kGJ2WUkw8gpkvmNmcKhEpp56WtSaMYq2zqWJi
4Tv6QsxETK9sfXVv0wparIUU6zeps381iZrwzE7Q2riDYrav3nNDamKbxZYb
NaXFKUdYMxYNoclpob0OjdoTQogrUIrjg8zMTLROQUEBpdghKMWOIqQYHRjd
GJ3Z7espalCK/Yi41bfwRL21RTJYZrNY62xqYsrpT6fKREOrlWqmF65Qi7U5
51Z/OPWIFicoS1MVT03Un2BIc5L1Z62WGbb6hVSsvhLUzEF/LjD8WUAd2lYz
64uVx1KLlSlqbVvEQAghPoVSHB9kZ2fn5ub6RYqzArgdRWighn0as7+kGN0Y
Ybt9PUUNSrEfsTOaqSG8oclQi7V/dIspvpqTEol9jV4EHVKxmsxmFag5CzGo
KpctpgRrCjSrCs1Bw3tQV4PFELlN7Bdrv4bNhNRmzQgM293i9wrDTRF2fkII
8QiU4vigsLAwJycnPz//eACPe3FJALejCA3/xux9KRZGDNCB0Y3Rmd2+nqIG
pdinCFmweDZTOkJfoxdGhYHNYkM6+nTl+7ZmOaUu2clsWKxhZuvYzM5CzkxW
dxSZDQvURGJo8RZNaSe2lACaGdFhEFKxdmpY7G4mpGG3plmv63sKNV3sZX3i
hBDiFyjF8QHaBXKRl5fnl8FiEjP8IsXouujAWI2nPzKUYp9iNoM6/jAbQ4wn
4v4EXYHDxISQOINSHDfAKUQz0YuJiselWH2aGB0YC25fSdGEUuxfQh1h9Clx
L8XC3dyOIg6hFBPJnj17viQkJjjakynF8URugMLCQpiFeBO1sGMVtx2IxBrv
SLGmK4r+Kbur6L1uX0NRhlLsXxJksDi+pVg0IsUt6tCIicpdd93ltipFxEsB
3I7CQfzeQBLRTM71ZEpxnAHXyMrKKi0tzc/PF0PGJMGBFLsdginoouio6K7o
tFh1++qJPpRiX5MIg8XxLcXlAS92O4Q4hOPvRAXO5XYIESGEy+0oHMTvDSRx
uqUoxfEHFCMnJwcLsKG8vDy0mhBkkpigG7gdghZ0SHRLdE7Eho6K7hqvf1go
xX4n7geLo/iuMJIgcJiYaPC7c4nvhLodhYPEjfJTikl4lJSUiBnUwj5ALklI
IJ5uh3AaojeiW4qRYnRUt68VB6EUE0IIiW/8LsXEL1CKSSRAiEpJYlMWmDzg
QcQwcXxDKSaEEBLfQIrjfrCVuIvoYJRiQgjxKZRiQggh8Q2kWLyryu1ASNwC
I0YHE28Mc+4olGJCCHEISjEhhJD4htOnSWzgSDEhhPgUSjEhhJD4hlJMYgOl
mBBCfAqlmBBCSHxDKSaxgVJMCCE+hVJMCCEkvqEUk9hAKSaEEJ9CKSaEEBLf
UIpJbKAUE0KIT6EUE0IIiW8oxSQ2UIoJIcSnUIoJIYTEN5RiEhsoxYQQ4lMo
xYQQQuIbSjGJDZTimHGCeBK2b3wTrfb1JpRiQggh8Q2lmMQGSnEMkPfnpaf4
N3EV2RBRUSe2r9eIbvt6GUpxVPiSEJKouP3nhwQHUvxSALcDIXEL/hSIPubo
34QEl2LVlXBqxcXFRQGOn6KQxBBZ7aIV0BxSoMJTJ7avp4h6+3ofSnHkiH8K
Xb4vJ4S4gdP3wCQqQIr3BHA7EBLPoINRip1DGlNJSQlu1PPz83NycjIzM48c
OZJxikOHDqUHOEgcQ9RwhgKaICsrC82BRkHToIHC8Ca2r0dwqH19AaU4csS9
sdtREEJcgJe/L+D0aRIbnP6DkLBSLO7AcTpFRUV5eXm4Rc/Ozsb9+cmTJ//7
3/86V+HEDv/5z3/QRmgONAqaBg2EZkJj2fcmtq+Xibx9/QKlOHJ4V0xIwsLL
3xdQiklsoBQ7gRhAxLngtjwnJwe35XAl5yqZRAKaRowqorHEbNug3sT29RFh
tK+PoBRHDu+KCUlYePn7AkoxiQ2U4qgjxxBxEy5GqZyrXhItxGiv8Cbr8US2
rx+x377+glIcObwrJiRh4eXvCyjFJDZQiqOOGEYsKirKycmhMfkINBaaDA1n
PZjI9vUpNtvXX1CKI4d3xYQkLLz8fQGlmMQGSnF0kW9ewh14ZmamcxVLnABN
hoaT72Vi+8YZQdvXd1CKI4d3xYQkLLz8fQGlmMQGSnF0ERNrCwsLjxw58uuv
vzpXscQJ0GSHDx9G84lJtmzfOCNo+/oOSnHk8K6YkISFl78voBST2EApjiLi
WcWSkpLc3NysrCznapU4BxoOzYdG1D95yvaNAyza149QiiOHd8WEJCy8/H0B
pZjEBkpxFBFza4uLi3HjXVhY6FytEudAw6H50Ij6GbZs3zjAon39CKU4cnhX
TEjCwsvfF0CK9wRwOxASt4gORimOInJu7aFDh7DqXK0S50DDofkMZ9iyfeMA
i/b1I5TiyOFdMSEJCy9/XwApfimA24GQuAVGjA6GnkYpjhZSmg4ePPjHH384
V6vEOdBwaD5rKWb7+heL9vUjlOLI4V0xIQkLL39fwOnTJDZwpDiKiAdO8/Pz
9+3b51yVeofffvvt9ddff+2113bu3Ol2LNEEzYdGFI+dJnL7xitm7etHKMWR
w7tiQhIWXv6+gFJMYgOlOIpIaUqQBx9wpkkB/v73v7sdSzRB81lLcYK0b7xi
1r5+hFIcObwrJiRh4eXvCyjFJDZQiqOIlKa0tDTnqtQ7xKsUo/mspTju23fh
woWPPPLIyy+/7HYgjmDWvn6EUhw5vCsmJGHh5e8LKMUkNlCKo4iQJpxF3EuT
II6lGI1oJsWJ0L79+/dHs5599tluB+IIZu3rRyjFkcO7YkISFl7+voBSTGID
pTiKCGnKy8v75ZdfnKtS7xCvUozmQyOaSXEitG98S7FZ+/oRSnHk4F/AF198
UfPvoP5fRqZ4P8X1AJjiuxT9JuJBKMUkNjj9B4FS7ChHjx796aefjh8/rkkv
KipCzWdnZ9ssZ8+ePampqb/99pt1tqysrJ9//jkzM1OsBpVi1AaKRSQ5OTn/
/e9/g4bx+++/b926VZYvQcUi/fDhwzZOJQp4R4r/+OMPNDHqPDc3N4rFoqG3
b9++f/9+s0axI8UyNnQe1Iyd46JDbtu27eTJk5r0I0eObN68WZ/uEJRiovIl
pTheUlwPgCm+S9FvIh6EUkxig9N/ECjFUQRmVCnAvHnz5s+f36FDB+GkCxYs
EBkgO9OnT2/ZsmXSKZo2bTpixAhUrFrO+PHjUciZZ56JmEePHt2kSROROTk5
+cYbbzx27Jj+0J9++mnHjh1lsdj3nXfewZmaSTFcaeDAgRUqVJC7tG3bds6c
OZpsMhLUG+KsU6eOyNy+fft//etfyJCenn7DDTdUrFhRpDdv3nzatGlRq1AT
vCDF//nPf2bNmoXmkxWIZv3zn/+s2jEqWfSH1atXa3b/4YcfxKaUlBQ1/dtv
v73ooouqVq0qyqxZs+ZVV12lvkwbzYS95EFFIZ07d1YL+f3339HN1NgqV66M
nrN37141m9pdlyxZ0qVLF9nN0O6lpaVQ8rfffrtZs2YivUqVKr17947B1HRK
MVHhXTEhCQsvf19AKSaxgVIcRZyWpuzsbKEPw4YNU81FSDEso3v37klGQJ8P
HToky/nrX/+KxAYNGsBD9ZnbtWunGbODc6mHk9x///2GUrxjx466desaRvLU
U0+pOWUkQ4YM0eSEuH333XctWrTQF/LYY485Ub0SL0gx/gkwrECo8datW0We
H3/8USSuWLFCs/v3338vNn3zzTcy8dVXX5XtKH9nALVq1YIsizyGFd6+fXu1
8DvuuMMwtlatWqmj/LK73nbbbVLDJRD8p59+Wl9I8+bN09PTnahSCaWYqPCu
WM9nn302+aHHQvrv7QUfRDGAlJSU6QGiWGaMkaeg+WXSLFuMwiKnw8vfF1CK
SWygFEeRmEkxqF69+iOPPLJ8+fIffvhBTJOGmYpNAwcO/Oqrrw4cOPDxxx/f
cMMNInHixImyHKGigpEjR65Zs+bIkSMw386dO4vEF154QWbet2/fGWeckRQY
NHzwwQfxL/iWLVugM40bN5aFqFKckZFx5plnivwPPfQQxHbnzp3QsbPPPltk
XrhwoWEk9913H3oLjG/cuHEiRQw0jxo1Cue4Z8+euXPnJicni3P//fffnahh
getSPGvWLFED55133ptvvrl79+5PPvkEaikSO3XqJLKFJMUIvmbNmkhp06YN
GuW3335DS7322mvCji+99FKR7fDhw2jx3r17IxGCvC8Auocsedq0aaLkHj16
vPXWW2lpaehsd955p0js1q1bUVGRyKl217Zt2y5ZsgR9cunSpXKIGe3bqFGj
999/H+kIGDGI9NmzZztavZRiosK7Yj2Q3E6X3HnhNVPt/9e9z01R/MPYt29f
/CnA/6NVYOzBv5XiD5rFWcCFRR5rcSbOwcvfF0CKXwrgdiAkbsHfAdHHKMXR
ImZSXKNGjfXr12u23nvvvf369bvppptKS0tl4q+//tqwYUPscv7558tEqaLI
/Mcff8j09PT0KlWqIH3w4MEyUbrYc889px5u3bp1QlE1UiyHOF988UU1/969
e8Xwca1ateRBZSQIXs08YMAAkX7jjTeqz70+8cQTIl2OljqBu1KclZUlzrF5
8+Y5OTnqptGjR4tNsNryEKX4iy++ECkff/yxmnPOnDnoNldccQUuPZlo9kyx
jK1169aaOfl/+9vfNP1Edtd69eqpM6s3bNgg0itVqrRt2zaZDpuuXbs20ocM
GRJKhYUMpZio8K5YD6QYnnvpyLn2/6MU65HOazgQbL2VxAZe/q4jLgTrix03
lnsCxCwqkoCgg1GKo0jMpHjo0KH29xo/fnxSYLqsXkU3btyoySxG68455xyZ
0qlTJ6RcdNFF+pIfeughvRRfcMEFSOndu7c+/2uvvSbyp6amaiLRPEn6wgsv
GOre2rVrDc0uurgrxdJesaDZVFhYiH8+nnjiiXXr1pWHKMXLly8XKXYmn5tJ
Mf5WiEK+/vprzaZff/0VFi9+xxApsrvefPPNak70QyG/PXv21BRyySWXIP3c
c88NGmEkUIqJCu+K9VCKo4U4kSSjsWAasRfg5e8udiZUlHP6NIkVnD4dRWIm
xZpBWA0IY8eOHfAmtOwHH3zQqFEjsZeccixUtEqVKhAZzb633nprUuA9WrIo
8RTqhAkT9AdatmyZRopPnjxZuXLlpNNna0s2bdok8r/33ntqJFAkTc633npL
5FQfhQawaZH+0UcfWdRAhLgrxY8//rg4x/z8fOucIUkxShPTAECfPn1ef/11
nEWob5+WI/XQc/1e1157bVJgerZYld1VP+VJTLAfM2aMJh1CjfSOHTtan3iE
UIqJCu+K9VCKo4jhPb8cJnYrKiLg5e8u8lcjSjHxApTiKBIzKYbRGGb4/PPP
L730Uuk+GjRSDFnWlzB27FhVijdu3Cj2nT9/vj7z/v37NVL8888/W+QvLS0V
jwlLxTaLREpxRkaGmp4IUnz11VerTWBBqC/a+uqrrzQvvGrSpMmkSZN27typ
2d1MigcNGpQUmNdtGM/DDz+s6rxFdxVSjM6mSacUhwqlOHJ4V6zHISlOCSCX
p59Cn9NCitUdDXdPOYVFDPqtarGG+8q9rCM33FH8JZT5+Sixd+Dl7yLyQqAU
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
wtDb5a8hbA5/SDFwZyDFhiA+Pn7s2LEnT54MCQnp3r27j49PQUGBy+se6yau
ra2tqqpqa8WjJJSQdRZrXQ7wH+T+23gb+S7lQzHDfeWVV3jI1atXvby8fH19
rSXJyMiYPHmytF/4xRdfZB7HQ+bPn9+nTx87iiganSzJNN2EdJ5SA3Uc661V
DCkGQBh6u/y1hQ8BYv/etIb4jEGKgRggxYbg3nvv7dChQ6dOnYYPHz5t2jQP
Dw+6a23cuLHdB6yrq8vKyjpy5IhyNDLK69evX7ly5dJt/iWKiyYuXLhw9uzZ
H3/8sa0Vj5JQQkrOjiMs2+4Jrx5UVajCWPtHhAOlmHXylpWVSQPHjh3buXNn
9f2869ato4O8/vrrPGTChAljxow5d+5cXl5ecnLyoUOHqFAqj6YJ2koxtY7k
OqyTJTzUo7dWMaQYAGHo7fLXEOUViqWIzxukGIgBUqx/qIlOdyES4eLiYhZS
WlrasWNHcmQ+drStVFZWsmcnlaOR4Fz6NcI8i0y2oqLi/PnzJSUlN27caGvF
oySUkJLTQSDFzsasklRXV1usTlLn/dBEu6V43LhxdEU0NTVJAxctWkS12mzu
LGt89dVXdBENHDhQehH179/f29ubzJr/+nft2vVvf/ubmgNqgiZSzDoLzAZO
SxWYN670ORLPDL21iiHFAAhDb5e/hkCKAYAU65/Dhw/TXSgmJkYaGBISQoGf
f/55+46pUoqlfcTipfjChQtlZWUkL7/88ktbKx4loYSUnHUWC8u2e2JWSaja
WKxODpTiPn363HfffWaBKSkpVKs//fRTm/Wf8tyvX78OHTpQHqThXbp0oSPk
5OSwql5UVESbPXr0uHr1qs1jaoJgKVZ2YbOYLIL+O4v11iqGFAMgDL1d/sAi
kGIgBkix/klLS6O25ZdffikNZO3/U6dOte+YBpLi06dPt0+KKSGkWAxtkuJG
W6iR4okTJ1IFNptrOjw8nALpG1dOe/36dT8/P4r5/PPPS8NbWlpIhw8ePCgN
zMjIoJjHjh1TPqZWCJNis04E9tSwsvBCitsHpBgAYejt8gcWgRQDMUCK9U9A
QAC1Levr66WBM2bMoEDprEHkAtSAp9a+l5dXYGDgrl27pPFLSkoSEhK8vb17
9uy5fPnyM2fO6H/4NO8pbt/wafQUC6NNw6cdIsUrVqygClxaWioN9Pf39/T0
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
hhSLAVIMdA434qamJjJfUuDq6mqqKhT4vyboDW1SIO2iCBQNXgzcBMETbcl7
YKU4o+NYAJBiXQEpBiKBFBsCSDGkWAyQYqBnuBE3Njay3uGGhgZrlY12sV5j
igwvdhPKy8uPHz9eUlKi/tZRWVn50Ucf0V+nZkwMIqWYmS/ve+VIhysb0Ysh
xboCUgxEAik2BJBiSLEYIMVAz/A+YmbE9F65vlEE5sW8v1jrEgBn0djYGBkZ
yXVs6NChdLdRTkLuPGzYMJ7E39///Pnz0gj79++Xd4D269fPmeWwC2FSrLDO
L0NhOSSdAynWFZBiIBJIsSGAFEOKxQApBrqFdfU2NzdTxVBjxAzmxZSEEqKz
WFf8RR0fmLB5tM2bN5OFjRw5cseOHeHh4XfeeeeIESPIlK3F/+6773r06NGp
U6esrKyDBw8uW7aMknt7e9fW1vI4eXl5FBgdHb1SQkZGhmPK7wSESTH7/4BC
BIVVhnUOpFhXQIqBSCDFhgBSDCkWA6QY6BY+cPratWsKo6blUGRKwgdRa10O
8B8cKMWnTp0iC37ooYfou2YhqampZGRkytaSFBYWUoRXX32Vh8TExFDIm2++
yUOSkpLosFRt7CqnQPQjxa23O4sFZMaxQIp1BaQYiARSbAjW3MbZHwQpdlsp
pvsAq2OQYp0THx8/duzYkydPhoSEdO/e3cfHp6CgwB1cj3UT19bWVlVVtbXi
URJKyDqLtS4H+A9y/228jXyX8qGY4b7yyis85OrVq15eXr6+vtaSZGRkTJ48
Wdov/OKLL7KZk3nI/Pnz+/TpY0cRRSNMitUIL6QYUmw/kGIgEkixIUBPMaRY
DOgp1j/33ntvhw4dOnXqNHz48GnTpnl4eFDLc+PGjQpJ6urqsrKyjhw50u4I
DDLK69evX7ly5dJt/iWKiyYuXLhw9uzZH3/8sa0Vj5JQQkrOjiMs2+4Jrx5U
VajCWPtHhAOlmHXylpWVSQPHjh3buXNn9f2869ato4O8/vrrPGTChAljxow5
d+5cXl5ecnLyoUOHqFAqj6YJgp8pVlh6yWYE3QIp1hWQYiASSLEhgBRDisUA
KdY51D6npiaJcHFxMQspLS3t2LEjOTIfOCqnsrKSPRrZ7ggMEpxLv0aYZ5HJ
VlRUnD9/vqSk5MaNG22teJSEElJyOgik2NmYVZLq6mqL1UnqvB+aaLcUjxs3
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
zZ63zOwMJM6ds2f9+qefeHz/U089U1DwVGrq4ytiC8IX0hnYdusMLNkeFfV4
zLKiWDoDq0xnIHFPUtLelOR9a03FT6Pip98qPr3WraOKsTM+rmjZslV0YiUf
1KbiLwyPjFqZ/sj6/PyCrbmbC9M2Uv5zl8ZtXBB1q/iLqPgrqPiZUebFz0uQ
Fj/dVPy0W8WnunGrP31lZsi8aLPiJ82fv3fjxqd37Ni/c+f+vDy6FrYvX16w
kIofsS0y8tGlS7ZHRz0hKf7uVYl7VicVm4q/nxV/van4dA7XPUK7dsatfGJZ
dGKoheKzIjvs3gTAbSwOIVZ+9scoKHSFu0YBnYfzpJici8+HTD5LIQsWLGCb
UilmqhgUFMSTkzaaSTF9qLe399SpU++///558+aZtTkp8oQJE+rr61nIxYsX
Fy1alJ+fL82Mw6W4trY2JiYmMzOzpaWFhfzXf/3XHZL5wVJTU2nz1Vdf5Uks
SjHL3scff8w2z58/z+yVSzEf0a2+yFevXu3bt+8dpunITp8+/cc//nHMmDHs
KpBK8f79+ymEEtLfU6dOqTw/AAD1QIrltFWKW2/3FgEA3BDH3JUAkMFHGrNN
V3rS1uIgagyctonzpLh79+6jR4/Ozc1dunTpXXfddffdd/PJo6RS/PPPPz/w
wAN3mCZ6Kioqmjt3bufOnc2kmNiwYQP7Ko8ePWr2cayzdcSIEZs2bcrOzu7d
u7e0I9V5PcWBgYEUec6cOaT8jz322H333XfnnXd+8803bO++fftoL8kpWXBp
aelNK1LM/l0wYMAAElhSbDoVrPhcigk6MoXMmzePr9esXOSbpgmou3btykdQ
DB48mHVAS6WY3LlDhw4U6OPjo/LkAADaBKRYDn6UAQAAaI60R9X1hFHeWexi
BXQGzpPi48ePs5V/2ULD0kdcU1JSKJyp4k2TLfLHcgcNGsQWXeKzTzNOnz5N
gWSdN27cMPu4lpYWUuaBAweyI/Tv31/aP8t6QtUvNkSRpRN5KXDlypWIiIhO
nTqxMvr6+n7yySd8b11d3bJly9heNpKcTjW956svSTPv6enJSkdnho275v9A
IF5//fU+ffqw3mE1RWbU19fT527fvv13v/tdQ0MDe3DbbMbv+fPnU+Djjz+u
8uQAANqEe0qxY5dkAgAAAJwBd2HXE0az56YxcFoNzpNi1jlL5shXK1bm6tWr
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
0qXLW2+9hQ/QeazC7gpvMd5KsR+juueee2RDd9iR4hdeeKGEgf3792NVqVKl
tIUrV67cunWrsfLrr79uHcBZe9Y5fvz42rVrl3Rx7733Hjt2DIUWexw8eLC2
8NFHH0Vh06ZNdZUxVk13560Um4ZnDKN79+5Sjt775z//qTb/7rvv6tWrZ70L
9PA111xTpUqVyMjIl156ybQOpZgUHiU7uhN+3dm+zWohh1F/8s0OyvTYxShD
WopN0yozv8ZyVaj1YncDIySwTqt2VJi+uFkVhu74J4QQv0uxuCp+hWoLsRcl
xadPn5bfnG00SAncWeobpRjn3qZbwb6lgggsGtfuV6T42WefVSVTp05FyYYN
G1RJ69atq1WrJp9NpVh7mv3qq6+i5KeffpJFnRRDh3H+j5I6dergYL/66qvs
7Gy1rbUUm/abTexL8ZEjR8qUKYMdISOqMOhS7N+o/CLFycnJR1y0bNnytdde
k8/StyLCRwpIT0/PyMiQz1OmTLnjjjvkM4aidQBnbVgn3ByDc9WqVdgLRLht
27b/+Mc/clyz5+72OHDgQIw0FZ48Zxuuis9yzrZjxw58TkhIMN2jV1LsLjxj
GEiilMu3GL9zZPHbb7/Fl8ViFxjS2MW8efPwee3atbpBoqAUE7+gPbeXy4ZN
nchmtdBCOZ31QRmrRWgI3cPPN0urUkILYZzpItQHgHVadf8qMT12VRisQyCE
kELidyk+evRohOHB0fv3748okGKpAB7QAMO99957cXYt9Y1S/Pjjj6OkVatW
2q2aNGmibrkNnBRr24QfRbiX4rOuJ4xhd82bN5djvOmmm9TV1NZSLA/o7t69
u3X3mmJfit955x385ULXQaZUoVf6CfdBCxUrVkS//fLLL+6qeSXFhY9q3bp1
7dq1q1ChAsZYx44dCy/FCojenDlztCWQ4k2bNplWfvXVV3EgHtu0KcVIJY7o
s88+UyX4tmJMYrxZ7BE2OmHCBNMGZby502HBvhRbh+cuDPTeXXfddfPNN8Pr
c2xIMXR+4sSJkG5ZrFKlyrJly0yDoRQTv2BqBKYXytqpFlogfq0Y2j92kaPQ
VUKF6eG7u4tcVznUD9+YfZVWi6vKtdZMKSaEhDSBuHy6Zs2aDRs21JbgPDZC
c/l0VFRU06ZNLVowSvG8efNQ8vnnn7vbxCFSrNizZ88999yDtW+//baUeLx8
un79+vXq1dM2AnGQ61HdHbVgX4phjlC8r7766vrrr1eF9vUzOTm5QYMGDz30
0Pr160ePHg1DSUlJMa3plRQXMqpTp05hRD388MNIq9xpHmgphoOnutDd5epf
KZbrK7QKbMRUip955pnUArTjwb9SbB0ewhg0aNDPBRw4cEDKpfcaN26Mb2KO
DSnW8t1335UrVy4+Pt64ilJM/M7GAvxSLbSwc1BheeCCV4cWZv1QnI+dEFLM
CYQUy/2hH3/8sSyqx1spKZaHSy9dulRtAouBge7cuVMW5VpinDlrzy1RAnuC
J0oJzo379+//8ssvy2LQpRh+BFucNGmSPJULfPbZZ1g7bdo0WRw7diwWFy9e
rFrT7a5fv35YfP/992UR7XTq1CnCcKO0EZtSDE8vVarU0aNH4UoVK1b89ddf
pdy+fq5ZswYijB3luK5rxbGoe0h12JfiwkeFdFStWlUmEzE8ateuHWgpVv8e
r1SpknaVf6V4xYoVlStXls8QyR4F/PXXXxZ7hI1q/4EPkVSr/CvF1uEhDAjs
NQUgTqmJ3tuyZcvatWvLlCnz559/2pfiQ4cO1apVa9asWaZrKcWEEEIIIcRn
AiHF27dvr1ChAk56YcHPP/98q1at5BW9Sor37t2L8+SyZcvCInGW27t3b6yN
jo7WPmMKFVCIVf/5z3+kZMyYMRGuC5KnTJny3HPPwX20c8dBl2LQoUMHLN57
773QqFdeeQWHULJkyR07dsha2C7W1qtXD/EcOHDAuDuc9uOgIiMjIRSQfWnt
H//4h8cOtynFL7zwQkTBVev4MGDAACk36idGxVgDqPDBBx+gu+wojH0pth9V
jmt20hgYomrTpo1q8I477gi0FH/99dd7XcijtxT+lWL5R5DMxe/evXv27Nmv
v/46SmCgFnvE4Bk5cuTeAlJTU9Uq/0qxdXgWl09DivHhqaeeQtaWLVsmUuxu
yAlQXfwaGTRokLtgKMWEEEIIIcRnAiHFYOXKlbfddpvMqUGj5Ak5UGBVYePG
jbCecuXKoRzmCCFS71oSli5dKi9yateunZTk5eXhNPv666+XKbCGDRtqZ137
9++PQiiAthG5wlO95OhsgRRrHyiNM3PYq3yGq2LtqFGj3LUpp/2rV6+WxaFD
h4plyCLsuF+/fvLMKBw7NH/9+vVq2/T0dEi0rJWXMut2d9Z1Ct2tW7fy5cvL
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
MC5evLhr1y7VvgIdi3LjqzQChHOk+PLly0gx+jw1NdWPzSLRe/bsiY+Pd5cU
O1KsYsPgQc/Y2S8G5O7du8+dO6crP3ny5I4dO4zlAYJSTAghhBBCvIVSbJNA
SxPMqJSLjz/+eOHChc2aNRMnXbx4sVSA7MycObNhw4bq/Yx16tQZPHiw7u0V
zzzzDBqpX78+Yh4xYkRUVJRUjoyMfOCBB06fPm3c9TfffHPjjTeqZrHtokWL
cKTupBiu1LNnzxIlSqhNGjduPHfuXF01FQn6DXFWqVJFKjdt2vT3339HhWPH
jg0cOLBkyZJSXq9evenTp/utQ93gBCm+dOnSq6++ql6LKS/lfOSRR7R2jE6W
8fDLL7/oNt+yZYus2rhxo7b8119/vf3228uWLSttVqxYsXv37tqHaSNN2Ert
VBq56aabtI1cvHgRw0wbW+nSpTFyYmNjtdW0w3XZsmUtW7ZUwwx5z8vLg5J/
+umndevWlfIyZcp06NChCC5NpxQTQgghhBBvoRTbJNDSlJycLPowYMAArbmI
FMMy2rZtG2EG9Pn48eOqndGjR6OwRo0a8FBj5SZNmujm7OBc2t0pJk6caCrF
e/furVq1qmkkb7zxhramiqRfv366mhC333777dprrzU28vLLLweiexVOkOKn
nnrKtAOhxrt27ZI6f/75pxSuXr1at/mmTZtk1YYNG1ThnDlzVB7V/xlApUqV
IMtSx7TDmzZtqm38iSeeMI3tuuuu087yq+E6bNgwpeEKCP7s2bONjdSrV+/Y
sWOB6FIFpZgQQgghhHgLpdgmRSbFoHz58i+99NKPP/64ZcsWuUwaZiqrevbs
+dNPPx05cmT58uUDBw6UwgkTJqh2REWFIUOGrFu37uTJkzDfm266SQrfeecd
VTkuLq569eoRrknD559/fuPGjTt37oTO1K5dWzWileKEhIT69etL/RdeeAFi
u2/fPujYDTfcIJWXLFliGsmzzz6LkQbjGzVqlJTIRPPw4cNxjIcPH543b15k
ZKQc+8WLFwPRw0LQpfjVV1+VHrj55psXLFhw6NChFStWQC2lMDo6Wqp5JcUI
vmLFiii5/vrrkZQLFy4gUx9++KHYcadOnaTaiRMnkPEOHTqgEIIc5wLDQ7U8
ffp0afm222775JNPYmJiMNiefPJJKWzdunV2drbU1A7Xxo0bL1u2DGPyu+++
U1PMyG+tWrW++OILlCNgxCDlr7/+ekC7l1JMCCGEEEK8hVJskyKT4goVKvzx
xx+6tePGjevSpcuDDz6Yl5enCs+fP1+zZk1s0qZNG1WoVBSVL1++rMqPHTtW
pkwZlPft21cVKhd76623tLvbvHmzKKpOitUU57vvvqutHxsbK9PHlSpVUjtV
kSB4beUePXpI+QMPPKC973XGjBlSrmZLA0FwpTgpKUmOsV69eikpKdpVI0aM
kFWw2nwvpfiHH36QkuXLl2trzp07F8PmnnvuwddWFbq7p1jF1qhRI901+U8/
/bRunKjhWq1aNe2V1Vu3bpXyUqVK7d69W5XDpitXrozyfv36edNhXkMpJoQQ
Qggh3kIptkmRSXH//v3tb/XMM89EuC6XNaroX3/9passs3XNmzdXJdHR0Si5
/fbbjS2/8MILRim+5ZZbUNKhQwdj/Q8//FDqHzhwQBeJ7k7Sd955x1T31q9f
b2p2/iW4UqzsFR90qzIzM2fOnDljxozNmzfneynFP/74o5TYufjcnRSvWrVK
Gvn55591q86fPw+Ll/9jSIkarg899JC2JsahyG+7du10jdx1110ob9GihccI
CwOlmBBCCCGEeAul2CZFJsW6SVgdCGPv3r3wJijMf//731q1aslW6pJjUdEy
ZcpAZHTbPvzwwxGu52ippuQu1PHjxxt3tHLlSp0Unzt3rnTp0hFXX62t2L59
u9T//PPPtZFAkXQ1P/nkE6mpvRUawKal/Ouvv7bogUISXCmeNm2aHGN6erp1
Ta+kGK3JZQCgY8eO8+fPx1F4+/RpNVMPPTdu1adPnwjX5dmyqIbre++9p6sp
F9g/9thjunIINcpvvPFG6wMvJJRiQgghhBDiLZRimxSZFMNoTCt8//33nTp1
Uu6jQyfFkGVjCyNHjtRK8V9//SXbLly40Fg5Pj5eJ8V///23Rf28vDy5TVgp
trtIlBQnJCRoy4uDFN97773aFFjg7YO2fvrpJ90Dr6KioiZNmrRv3z7d5u6k
uHfv3hGu67pN43nxxRe1Om8xXEWKMdh05ZRiQgghhBDiTCjFNgmuFKtZvAjX
o5ubNGly2223id0UXophqcbKR44ccSfFpvXRPyLFzz77rHUkxVmK+/btG+F6
l5bHmt5Kcb5rCL399tu33HKL9unTpUqV+vLLL7XVrKXYnbBTin2DUkwIIYQQ
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
cfwuXbpYp9649wClPiyhFBNCSICgFBNCSDHk4YcfFpWYOnUqrA0n2zBEpWC7
du3Kd6nN999/LyX33XffTz/9tHnz5nzXU4VF6OrWrbtw4cK9e/fu2bPniy++
gI5JZahTvutaZWwyePBgKVy2bBkWU1JS8s2keMaMGVItKioKbe7YseOHH36A
MErhTTfdpO5CFTMS6tWrN2fOnLVr1yJ4aRMsWLBANfvII49I4dChQ3///feY
mBgcwpgxY2TitVq1auo6YbFIAdrVu3dvNP7000+//vrrWqdTYEOZ+R0wYIBF
P6enp19//fWohj2+/PLLf/75Jzqhc+fOal8WUlyYHLk7HNMdiRQLI0aMQAvo
qyFDhkhJs2bN1AXnNqXYIvXGvQco9WEJpZgQQgIEpZgQQooh4lZ33nmntnDF
ihUiF88995yUmN6v+swzz0jhtm3btJsfP368VKlSKO/evbsqNL2xVCfFcXFx
YqkwneTkZFXt8uXLMhsL3n77bSlUZlSzZk3tFO2mTZukvGfPnlICcStdujRK
evXqpTv8J598Uiqrv4DKIqtXr56YmCiF58+fP3nypMSma+Tzzz+X+jA4i34e
PXq0VFu0aJEqRK+iNY9SXJgcuTsc0x0pKZ4yZYppLy1ZskRKbEqxYJp63d4D
lPpwhVJMCCEBglJMCCHFELkquHbt2jqxXb9+/eHDh8We8t0I17Jly55//vnJ
kycbm5VZUa3H2ZHihQsXSp2PPvpI12BKSopMyN56661SosxIuZICAqitCUmf
PXv2E088sWXLFl1NpbTr1q2TEmWRs2bN0lXu0aMHyiMjI0+fPq0K5Q286EDr
Bym3adMmwjXZqnt4lLrA2EKKC5Mji8NxJ8UwTd3ztWDTZcuWxarevXtLid+l
OECpD1coxYQQEiAoxYQQUgxRs73g5ptvnjJlyqZNm4x+5/HJxpcuXTp69Oja
tWvfe++9fv36iUO1b99eVbAjxWpOMDU11biLnj17RriuAZZFZUZr1qzR1Wzb
tq0cjmmoWVlZf//995dffjlx4kRYqjSCyGWtssgVK1boNvz6669l1Zw5c6RE
TR9bvwXpwoULZcqUQbWxY8ca1zZq1MhaiguTI4vDcSfFpq+Nlqd4Qc9l0e9S
XDSpDxsoxYQQEiAoxYQQUgyBp6jbNhXVq1cfNmzY4cOHVTV3UpyZmfnmm2+2
adNGpE+Ht1J81113RbieOWwaqroCWURMmZH2EUzadlq1aqUthEgOGjSobt26
xjhNpVju1dWCv5XVqlXDKhiilODYpfLu3bstOnnv3r1Sbfbs2ca1nTp1irCU
4sLkyOJw3EnxCy+8YAxSHoFVqlQpkXG/S3FAUx9+UIoJISRAUIoJIaR4cuHC
hUWLFvXu3Vu9U0moUqWKUkVT4UpISNA9FRktdOzYcdasWddcc40PUty9e3cs
VqxY0TTOsWPHSgsnT57M15iRVgwFoxlNnz5dJ5UNGzZ89NFH1QO4jFJ8/Phx
YwxPP/20dqfR0dH43KZNG+se/vvvv2WrN954w7i2T58+1lKcX4gcWRyOOyme
Nm2aMUh5znOZMmXk8m8LKZbHrHkrxYFLfVhCKSYkFDlTQF5e3v+5yNEgJVil
qgU73mIKpZgQQoo5+BO8evXqZ599tk6dOiIdt9xyi6wyFS4REHD33XcvX748
Pj5e3TALWYvQzKjm25Ni9UAnbR1F3759Za3cRWvfjNavXy81YZQQdvyxU+2/
9957sgoHLiXWUqz0Flao5n8RiXXH4o+svORI3t6rQ243tpZihbc58kGKn3nm
GeN+27dvj1XNmzeXRSXFCQkJupryVmJvpThAqQ9XKMWEhBxaHcYvuvT09NTU
1JSUlCQX+IBFFGKVVo2DHXVxhFJMCCHFjcTExLfffvvxxx/fsGGDthx/kWUK
uESJEmlpaflmwpWVlSW308LpdPe3njp1Sudr+fakWBncqlWrdKHiDKF27doR
rqcTS4l9M5o8ebLU/Oabb3Q1lYupPVpLMbjpppsiXI9ykpc0lS5d2vQ2WB1i
vm3bttWVozfkKVLupLgwObI+HHdSbAwS52myqk+fPlKi/pmwf/9+bU34l7yl
y1spDlDqwxVKMSGhhTLinJwc/EaFAp8+fRrfTRRecoEPWEQhVqECqtGLgwWl
mBBCihv79u0TuYAHXblyRbvq9ttvj3BNreLvMhaxVmQHdiYV1DzpPffco90Q
NUeOHCmrtG7yyiuvSOGJEydUoU6Kt2/fLnsxivbs2bNlc/WsKvtmJPfDAnl1
r2LXrl1yjzD49ttvpdCjFL/77rtSQeZq+/Xr56Z3r0LZ98qVK7XlM2fOlHJ3
UlyYHFkfjsUrmdQl2cKLL74o5er9v4sXL5YSpFVbU938q5Vi09Tr9h6g1Icr
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
SiqN7V1q4Dq4qijWAAAcDHu3CgAA4NxAFANXRSjigoICUr4kgTMzM+kepsBS
LfSBvlIgRZEBmUEXA3WBKAYA2AZ7twoAAODcQBQDl0Qo4vz8fB4dzsvLq+gp
oCgeNSZj6GJ1uXHjRkRERFxcnIpNB9XRhQsXDh06lJCQUJFNYWHh6dOnqXGj
D2pd1wxcVRTbHnT7AQAAAGA9IIqBSyLGiFkR02fDDwIZsC4W48X29sDpyc/P
HzFihBjFaNu2LbU2hpN4eXnJhz82btwotTl58iRlJWL/9re/kfiVGlDdvfvu
ux4eHmzg7u6+aNEiqcHnn38uv0rTpk1V8vsvQBSrBUQxAAAAAKwHRDFwPXio
t7CwkO5YJYqYYV1MSSjhkzlY/IsywrUYze2DDz4gFdO5c+dly5YFBwdXrly5
U6dOpJQrsqefnezbtWv3+l85cuSIsElPT2/evHmVKlUGDRq0Zs2aKVOmULZu
bm7Xr18XNm+99Rbl06NHj7Vr19KlSe3S1+XLlwuDf/3rXxTy6quvSq9COtrM
X80gEMVqAVEMAAAAAOsBUQxcDzFxOjU11cCsaTlkTEnEJGp7+2FrVBTFp0+f
JrnaokUL+kk5JDQ0lEQNKeWKkty+fZsM5s2bZyDb0aNHk80XX3whQjZt2kQh
b775Jn+ly7m7u3fs2PHevXsccuXKFTLw9fUVSf7+979T2aiKDbugChDFagFR
DAAAAADrAVGsFtu2bevfv3/NmjVbtmy5bNmytLS0Dh06zJ49297lehLhYeLs
7GyqBVOfCEpCCXmw2N5+2Bq5/s1/jDzKcFbz588nCbNlyxYRkpKS4uHhQXK1
oiRnzpyhJBs2bKjIoKCgoEqVKn5+flI9S9V069at1NRU/nru3Ln/+Z//Wb16
tTRhs2bNqlatKio0KCiocePGhsuvFhDFagFRDAAAAADrAVGsCnPmzKEOm6en
58CBAxs1akSfX3rpJfpL6ti8DHNycmbMmLF9+3bDZtTPz8jIuHPnzu3H3Hri
+UPLzZs3L1y4cPfuXVOfCEpCCSk552Nvb9RB3B50q9ANU5HeV1EUjxkzhu5/
6axm4tlnn61evXpFQ7QHDhygJD/88ANJ6SlTpsybNy86Olra4Fy8eJEMZs2a
RR4tWrTotdde+/jjj0+cOGG4JOQyKWKpGPf39+/atevvv//+r3/9a/LkyV99
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
1QAAADADiGLLeeONNzTaDYKoZz5mzBg3Nzf6SkpZuvUuSeAGDRoUFhaKkEuX
Lu3cuTMhIeFP7Xa41OmS/rZfffUVRLHZ8DnFdLv+8ccfmZmZyh8HMqYklBDn
FFsoignusHXq1Ik6pcHBwSR/unTpIh4KEss8gVAo3Bs3bvB6uokTJ3755Zfv
vPOOu7t7jRo1IiMjRZ6xsbGVK1emR2zq1Klr164dMWKERjsF8dq1a2yQkpLS
tGlT7iiO+ytiLvc///lPiv3b3/5GBfv3v//ds2dPlt7WaNxcWxTn5uY2bNiQ
f+2QkJCoqKjjx4+HhoZyG+jh4UGiUrmZYZSI4po1a5LN888/L49avXo15xAR
EaHcwTfffJNTbdq0SSeKV7johW6tU6dOKb9KRVjojhjjPnbsmDyWxX6PHj1U
uZZRrJR/WVkZb1+gkSytRdUAAAAwA4hiy6F+/tixY6kDT+8mHx+fDRs2UGeP
3mjCIC0tjaL69eunN7neWKoXiGKzIT1bVFREsos62wkJCQoPcyQzMqYklJCS
QxRbKIrp92TRyrRt21Zn6JaeEer+nT17VoRcvnyZd5xmWrVqRZ09nWxJT7Vs
2ZINeOK0dOWygf4wJWQbqtm5c+fydA6CnlySzDp7gqmFa4viFStW8G84Y8YM
abjYRGjVqlXKzQzDlgYMxBAb3XXyWDE2t3fvXkW+PXpE7QC36ryPuk4syWTp
3UW3N92K4qaqUqVKXFycwgtZyZ2PPvqIbS5duiSP5fFHetxUuZa1famI6dOn
c9qgoCARiKoBAABgBhDFanHv3j3e0ufUqVMa7aYfIoq3kg4MDNSb8Pbt2xQ7
ePBgaeDvv/+ugSi2ADFYTD8v1YvRjX3IgMzI+IkdJv5TbVHMxMfHk7AlrSqd
JsHQj6xzkDGTnJx8+PDhW7duVZQnJbxy5QrZSLeVNhVqys6cOXPy5Em9ZVAL
1xbF1EBRM1WnTh2dHe1ycnKee+45ig0LC1NuZhijopgqlFcrjx8/Xh67b98+
zmHHjh2KfHv0aMOGDZxk1qxZ8ti3336bY3v16iX2QyaP2FmiS5cuZux+r6I7
vLJAU8EOzH5+fhrtHheqXMvavuiFF1xotFtSSycboGoAAACYAUSx6vBxilu3
bpUGNm3atEmTJtKQ3NzcxMRE7pB7eXk1b95cGvv9999DFFsC6Sa6V0nNZWVl
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
qeJQskt5OR2/dpT74iy1YzMgioEzIiZOp6amGpg1LYeMKYmYRG1vPxwLFUXx
6dOnSQW3aNGCfnAOCQ0NpQaWlHJFSW7fvk0G8+bNU9Eju+PUopjLb/f3OwNR
DICp3L17lx7htLQ0exfERVClSSTpwefgEPSWFOqDp0WZamZfFBaSfrTq1auL
KN69uVKlSryg1XFkl/JyOn7tKPfFerXjjO0PRLFabNu2rX///jVr1mzZsuWy
ZcvoNujQocPs2bPtXS7XhIeJs7OzzXjcKAkl5MFie/vhWMj1b/5j5FGGs5o/
fz41p1u2bBEhKSkpHh4eHTt2rCjJmTNnKMmGDRtU88cBcGpRPGvWLKqRiRMn
2rsg/wWiGABT2b17Nz01Xbp0efjwob3L4gqo1SRevHgxICCA1QfTpk2bgwcP
mmdmXxQWMjw8nNfbMl5eXjt27Bg5ciR9Hjx4sF1Krhfl5XT82lHui5Vqxxnb
H4hiVZgzZw5Vvaen58CBAxs1akSfX3rpJY12n3OrXpdkXUZGxp07d24/5tYT
wB9abt68eeHChbt375p6z1MSSkjJOR97e2MLxO1BtwrdMBX9N0BFUTxmzBi6
/69fvy4NfPbZZ6tXr15UVKQ3yYEDByjJDz/8QFJ6ypQp8+bNi46OdvYGx3lF
8dmzZ6tUqeLh4ZGSkmKlS/Tp08fHxyckJESJsXJRXFZWtn379t69e3t7e9er
V2/IkCFLly4tKCgwo4Tl5eX9+vWjbs/evXv1GtCjMXfuXH9//9q1azdr1oxu
+/Xr1z948MCMa1WEK7ljuS/Hjx8fOnRoy5Yt3d3de/XqNXv27Li4OL2WJSUl
a9as6du3b8OGDenV3L1793feeSczM1MlV/6LU7hD2dKDs2TJEuWlAnpRvUmk
V2FsbCy95gx3YxSa2RclhaTnJT4+PjIykv7asmymYlI5Hbx2lPtipdpxuvYH
othyoqKiqNI7dOhAOou+0juRZ4oShw8frihVTk7OjBkz6JVqyaVJ4Nz+K/aW
X7aAlGxCQgI9udR/uHfvnqn3PCWhhJScMnnSRDFDXSm9t5NU8x7SYrYo7tat
W6VKlehZkAYOHz6cHgr65fUm2bx5M8U+/fTTGgmjR4+uSEQ7BU4qih8+fOjr
60u//0cffWS9q/C/phXOzlIoikk78OmKOtANmZ2dbWoJecID/69GHnvt2jUS
9fJrDRgwwDzRKseV3LHcl+nTp8uTV69eXa7x6fXapUsXuTFJ16NHj1ruixO5
c/r0aY12nePVq1fNdBXYqkkEwMVwuvYHothyevfuTZUu/RkvXbqk0c7Jp5dj
RamSkpLI5tVXX7Xk0tIx4idKFN+8efP69esxMTFmzMqgJJSQkvNgsb29sQU6
NwndNnpvJxVFcePGjevXr68TOGXKFLrnqRenN8mSJUs02k2qIyMj6cE5duwY
d0Lmzp1rxqPhIDipKP7666/pl69du3Zubq71rmINUTxz5ky29PPz27Jly7ff
fvvyyy9zSNeuXcvLyxWWjSQP3XhCfchVZGFhId2rHDtmzJiff/75wIEDw4YN
45BevXopvNCT446FvmzatImNGzVqtH79+ujo6M8++6xBgwYa7SI4ajSkxvz/
N6J79+7kLDVlkydPpjcyJzfj/wlO7c6gQYPIcsSIEZb6/ARjmyYRANfDudof
iGILKSgoqFKlir+/vzSwqKioWrVqHTp0MJAQothshCg+c+aMeaKYEkIUy9GZ
Ml0RSkRxQEAA3d46e00HBwdTIE+o0Ht16mdKY5OTk93c3Dp37mziY+FAOKMo
pv48tV1UU5MmTbLqhVQXxRkZGTVq1CAzX19fuvc4kNwRp05ERUUpudb58+f5
9EYDKnLr1q0cNX36dGk4Lxwg6LlTcq0nxB0LfSHLFi1asCpJTEwU4ZcuXeLt
bsaPHy8C09PTOc9nn31W+oJYsGABh3/++eeW+OJ07vz444+stal1NcNZYLMm
EQDXw7naH4hiC7l48SJV9+uvvy4NjI+P5/eagYSqiOIndvq0GCk2b/r0Ez5S
bHj6tCqi+LXXXqPb++rVq9JAPz8/d3d3k/Y3e+655ypVqpSVlaU8iUPhjKKY
Kpc724cOHVKe6k/tydRGzaTjLKqL4lWrVrGZzv6f1E7y7qDDhg0zeqFly5bx
rpsa7aSvilTkkCFDKJyy1WmCfv31V06yYcMGJX49Ie5Y6EtsbCwnnzFjhk5U
v379KNzHx0eE/Pzzz2y8bt06qWVOTg6HT5gwwRJfnM6doqIiDw8Psnz77bcV
uQf+inlNIgDgkbO1PxDFFkK/HtX1K6+8Ig3kE1q/+OILaWBcXNzEiRMbNWrk
5eU1duxYfi1KRTFptHfffdfX15fun549e3766adGr/7EbrTFa4rp7pX+m10h
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
fPlyceKPiqKYmDBhAluSZs/OzqbL0UV54hb1bClEWA4dOrSRloyMjIpyM6Ai
jx8/zluN1a9ff/fu3WVlZaWlpeQ+732kqWBvMVNxJXcs9GXAgAGcnPQ7HzRA
SSgrnnzVpEkT6p+w5YkTJ9gXypzuzMzMTAq8evVq//79OYeJEyda6IvTucPH
hdeqVYuktOW+P2kobBIBAHpxovYHohgAAKyEM4riLVu2cGf7woULhi2FCtBo
F1FKT7bduHGjMKNfgPcOEpYa7W7GvNxYXVF88+bNp556io3pEtLi6Uwx9ff3
56jk5OSKcjO8M9WSJUuEUzVq1JD6SL1oCw/DdT13LPSFFGXTpk1FkfgfMkzt
2rV1pnaL3a4YHuljfH19TVqI7QLuUN1xUV955RXLHX8CUd4kPtL+2tu3b+/d
u7e3t3e9evWGDBmydOlSk245qv2hQ4e2bNnS3d29V69es2fPjouLq8j43Llz
oaGhAQEBHh4ezZs3Hzx4sLqDcZa7IygvL+/Xrx89IHv37tVrkJ+fP3fuXHpe
6BFo1qzZmDFj1q9fr6KMstyXEydOjBo1qlOnTlQ1jRs37t+/P+VAL3rb+/LI
tu6UlJSsWbOmb9++DRs29PT07N69+zvvvMP/oFNSTidqfyCKAQDASjijKC4s
LGzQoAG9wuitZ9T44sWL1B9jncu0adPm4MGDOmbh4eG80Jjx8vLasWPHyJEj
NdoD3JWUihMqsczKyqLuAStupl27dvIi8WaGhIHzzanPwDYVrdmkbFu3bi0V
LNS1CAsLU1JOhbiSOxb6kpOTM3XqVOnNVqVKFTHSqsPRo0c7duwo9YX6cosX
L1axX+os7vAGJhrZCmigEOVNImkH3lRfh27dukknDxhg+vTp8uTVq1fXKyS/
/vpr6T+vBBaexK2iO1Lmz5/PyfX+U+7atWs+Pj7yaw0YMECV/2JZ7sukSZPk
yYlWrVpduXLFlr7Y2B1qqbp06SK3JCVO7ZLRCzlX+wNRDAAAVsIZRfGjx4OG
9Mr7U98/jeUUFRXFxsZGR0cbWNtYVlYWHx8fGRlJf80oEr9VldtTyWNiYuiV
nZCQoMqgrQFSUlKitKSlpVnpEq7kjoW+3L9//8KFC/v377948WJxcbFh49zc
XHoA6VqJiYnl5eXmFtkQju8OLxjv1auXqWUDAoVNojjU2M/Pb8uWLd9++y1v
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
7uTm5lJ/hq6VmJgo3/bcNYAotpDevXvTu0n6G166dEmj/ZeddLanDmqJYukY
sXmimLQ8Naf0TD18+NDUm4eSUEJKzoPFVhJ0wHJ0bhK6bfTeTiqK4saNG9ev
X18nkNUutaiG0xoWxeRO06ZNq1SpQsUTgTxbqW3btpGRkfTcHTt2jLeAmDt3
ruFrWRuIYrVgFWDUjDQCW/r5+W3ZsuXbb7/l0yuIrl27Gn2Pr127lo3p7v30
008jIiJ27tzZp08fDuzcufOfklE8/iePRrsxzg8//EA35OTJk3mtFu8CZ6nP
NnQnLy9P/E+JLkEXIncWLFggZsrt2LHDWXx5hKoBAABgOhDFllBQUECdc39/
f2lgUVFRtWrVOnToYCCho4niM2fOmCeKKSFEseNjkijON4YSURwQEEA3sM5e
08HBwRTIcyoMYEAUZ2RksNr98ssvdUpOfVRpzsnJyW5ubty3tCMQxWqhRBTT
7cEL6+gmEWd9kjwhQcTJo6KiDCQvLS3liYh169aVLiehHMQiLJI/HJiens4h
zz77rLTxJLXC4Z9//rmZrtrDnRUrVnDIrFmzpJlcuHCBF8Q99dRTzuILqgYA
AIAZQBRbwsWLF+mV9Prrr0sD4+PjKXD8+PHSwLi4uIkTJzZq1MjLy2vs2LGx
sbE6mteogV4snz4tRorNmz6NkWKnwKTp06qI4tdee02jPUJRGujn5+fu7m50
W7aKRHFeXh6PpCjcZfq5556rVKlSVlaWEmMr8eSI4tzcXPHZsCj+U3uGtan5
KxHFq1atYrONGzdKw6md5FM+hw0bZiD52bNnOfmSJUt0ou7cucNRoaGhHPLz
zz9zyLp166SWOTk5HD5hwgSlvjmAO7wPhqenJz2eOsZvvPEGG9Oj5BS+oGoA
AACYAUSxJdBPR++jV155RRrIx7N+8cUXIoRec02aNNFoj/MeNGiQh4cHz4YS
mteoQUVYvtEWrymm2yAxMdHUm4eSUEKsKXZ8TNpoSxVRvHDhQu4xSp+CGjVq
+Pr6Gk74ZwWiuKioiPqZFP7uu+/Kk6xevZpSUadXGtiuXbvatWvbd1mxy4vi
mJiYoKAgnsnZsGFDagypNdAriu/evTtjxoxmzZrxLNYGDRoEBwefP39e4YWU
iGI+INLNzU2q0JnAwECKqlq1qoGNQcLDw/39/Zs2bXr48GGdKKpKLsDw4cM5
hO5PDqGmXmpJl+ZwuiEVuuYI7tC1qNZeeOEFeT4ffvghG1+6dMkpfEHVAAAA
MAOIYksoKCioXr06dQWpv8chUVFRJGnpJXX69Glhxueuzpw5k78mJSU1btxY
qnmNGlgP0kckc9LT080TxZSQkuNIJtdAxd2n4+LiqFtICkjshfXWW29ptGfK
CxtqfHbv3i0XrXpF8ZtvvkmB9Ffv5ViDr1y5UuoLhbz44ovK3bcGri2KL168
yM2dFFK7LHulovjEiRNeXl4aGWT5008/KbmWElHcokULsunYsaM8at68eZyD
zhZGComOjubk4qyT0tJS8lSj3fCT7mFhOXfuXLY8cOCAGReSYkt3DMD7ZpAA
tGSjUVSNQmxfNQAAABiIYgvh+Utt27YlSTtmzBg+LIyUsnTf3ebNm3t7e0t/
uq+++kqqeY0aWA8+p5hq9o8//jDpuAoypiSUEOcUuwwqimKCO4edOnVaunRp
cHAwyZ8uXbqI54LEMh/C+OOPP+oklIticeofPWLjJHzyySdscOPGjbp162q0
58h/+eWX77zzjru7e40aNSIjI1X6bczEhUVxTk5Oy5YtNdotcElunDlzhu6K
fv36CcErRHFubq7YOzckJCQqKur48eOhoaHcWpKsNnCKh0CJKOYB6+eff14e
tXr1as4hIiLCVE/Lysp4jbzmr2tFV6xYwSenkPhav379zp07+SQyjXYjdKkc
Mw8bu6OX8PBwtuzVq5epF5KCqlGCXaoGAAAAA1FsIdTJHzt2LPXA6d3k4+Oz
YcMG6un16NFDGKSlpVEU9RWlqehnF5rXqIFVIT1LPQRSKNQvTUhIUHjGIpmR
MSWhhJQcotg1UFcU000yYsQIIZHatm1Ld7XUgB6TWrVqnT17Vifh1KlTNX+d
ayG2ddXhhRdeEDaXL1/mPbiYVq1aUafUop9DDVxYFHM1aSQ7Aj3SnlMzZMgQ
HVEsdgqaMWOGNIf333+fw1etWmX0ckZFMV2abeiuk8d+8803HLt3715F7kmY
Pn06pw0KCtKJEsJESmBgoBlbNOhgF3d0uHHjBo/vV6lS5cyZM6ZeSICqUYjt
qwYAAIAAolgV6D3LO9/yaqbQ0FARdfv2bQoZPHiw1P7333/XPNa8Rg2sjRgs
ppKQF0b3wCEDMiNjDBO7GOqKYiY+Pp7EaWxsLN0qOlF05+gcZGw5ycnJhw8f
vnXrlrrZmo0Li+JnnnlGo/1fh87ZiOfPn9cRxdSO0dc6dero6JGcnJznnnuO
YsPCwoxezqgopncTT9seP368PHbfvn2cg6nn1/DMfI12o2CdEe1t27bVr1+f
Y+nS1apV48+VK1emV4CFR0ba3h0d7ty5w5OEidmzZ5tW+r+CqrHQHR1UrBoA
AAACiGJ14cMHt27dKg308vJq3ry5NOT777+Xal6jBlaFtAlVKwmfrKyshISE
a9euGXgjUxQZkBkZUxJKCFHsMsiVrwHsXVjnwFVF8cOHD3nys9gjVwrvEyhE
MQlnjXZ9tyVXNCqKS0tLecbsuHHj5LG7du3iHPbs2aPwipTh22+/zak8PT1P
njwpjT18+DArI5Iw1OBTS1hSUkJ13bVrV04yffp05d7Z3R0dzp0716hRIzYe
NWoUuWaOD5JLo2rMdkcHdasGAACAAKJYXcaPH6/R7rAhDaTOIQVu2rSJv+bl
5fEgi9C8Rg2sjdDF2dnZt2/fpvJfvXr1zp07ubm5D7TQB/pKgRRFBmQGRex6
QBSrjquK4suXL3O3/JNPPpHH8slZLIoLCwtZQVi45a9RUUzw/oR61fe6des4
B6NLNRlq3MSk/Xr16p06dUrHoFevXhwbHR0tDSd/eal11apVk5KSlFyrImzp
jpRDhw6RNGNj0n2qyC5UTUXYvWoAAAAwEMXq8scff1y4cEFHKsbFxXl4eLi5
uZHInTVrlq+vL28xJDSvUQMbIHQx1XJaWlpCQgJJ4HPnzsVqoQ/0lQIpigyg
iAFQgquKYnHQ6rJly+SxQUFBQhSnpqay5bRp0yy5ohJR3K1bN7IJCAiQRy1a
tIhzoNbM6LUyMjK6d+/O9i1atLh27ZqOQVlZGQ+U9+7dW55806ZNnPa7774z
ei0D2MwdKVR4PmmX+OCDD8rLy813QAKqRi+OUDUAAAAYiGLbsG/fPnr38Zwu
Pz+/iIgIjXYrXeUGNoB1cWFhYV5eHtV1ZmYmSeAULfSBvlIgRZEBFDEASnBV
UUyuVa1aVVPBTFSe6MKimLruvA/hsGHD5JZ8fLaSAS8lophH3Hx8fOSLRidO
nKjRLik1updgUlISjycSpH3S09PlNtQSssHo0aPlsb/++ivHrly50vC1DGMz
dwSLFy9mSxJfGzdutKTwOqBq5DhI1QAAAGAgim0JSUt6D1piYAOKiopYGtM7
PU8CfWU5LD9YFgCgF1cVxY8eK9+uXbvqhOfn5/OBNWJNcefOnXkgrLS0VMe4
ffv2mgrOe9VBiSgWR8QeO3ZMGl5cXMwndlFJDOeQnZ3dunVrziQ4ONjA2T28
jxOVXx61fft2zkH5qlK92NId4rPPPmNLT09PM44TMgyqRgfHqRoAAAAMRDGo
CFbHAmhhAEzFhUXx5MmTuaO+b98+abjYRFeI4mnTpnEISRKp5cmTJzl81qxZ
Ri+nRBSnpKTwPsMhISHScCGF5s+fbziHSZMmsSXlIJfwUl544QW23L9/vzT8
wYMH4miwu3fvGr6cYWzpzs2bN6tXr06WNWvWjImJsaTYekHV6OA4VQMAAICB
KAYAACvhwqI4MTHR29ub+uoeHh5hYWHFxcUFBQXLly8Xyx6FKM7KyuJNEtzd
3Tdv3kwvkfLy8qioqGbNmlGgm5vb5cuXjV5OiSgmJkyYwJakxLOzs6lUVDZe
ZEqagkKE5dChQxtpycjI4JBTp07xAhaNds3mx/rYuXMnG584cYI3EKPMyanM
zEwKvHr1av/+/TmHiRMnmviL2tOdQYMGsWXnzp31WhKkBJ3CF1QNAAAAM4Ao
BgAAK+HCopgg13gMi2ElQr19Xm4sRDEh9AKbCeFMKFwgqVAU37x586mnnmJj
Kon0ojozZv39/TkqOTmZQ0JCQjTGGDBggMhBbKnE8KRxxtfX1+iSUiXYxp3r
168btSRIbDq+LwyqBgAAgKlAFAMAgJVwbVFMhIeH87pgxsvLa8eOHSNHjqTP
gwcPllpevHgxICCAhTPTpk2bgwcPKrwQJ1FimZWVNWTIEBbmTLt27eQX6tmz
J8eKY9l5S2HDBAYGSjM5evRox44dpQaenp6LFy9+8OCBQr8cwR3KzaglYfmd
jKox1R2bVQ0AAACIYgAAsBIuL4ofaQ/BiY+Pj4yMpL9GjYuKimJjY6Ojo01d
1Mmdf+X29OPHxMSQMkpISJBvEawuubm5VMt0rcTERCsdlGNLd6wNqgYAAIAD
AlEMAABW4kkQxbbBVFEMAAAAAKAciGIAALASEMVqAVEMAAAAAOsBUQwAAFYC
olgtIIoBAAAAYD0gigEAwEpAFKsFRDEAAAAArAdEMQAAWAmIYrWAKAYAAACA
9YAoBgAAKwFRrBYQxQAAAACwHhDFAABgJSCK1QKiGAAAAADWA6IYAACsBESx
WkAUAwAAAMB6QBQDAICVgChWC4hiAAAAAFgPiGIAALASEMVqAVEMAAAAAOsB
UQwAAFYColgtIIoBAAAAYD0gigEAwEpAFKsFRDEAAAAArAdEMQAAWAmIYrWA
KAYAAACA9YAoBgAAKwFRrBYQxQAAAACwHqqL4v8PAACePCCKBX369PHx8QkJ
CVHRUrkoLisr2759e+/evb29vevVqzdkyJClS5cWFBQoScskJib+/e9/b9++
fY0aNTp16vTWW28dOXJEr2V+fv7cuXP9/f1r167drFmzMWPGrF+//sGDB8qv
ZRTL3Tlx4sSoUaPIEXd398aNG/fv359yoJtTbllYWLhw4cLnn3+ezMjY19eX
qubs2bOO44vyqrl///6CBQv69etXT0uPHj3Wrl1bVFSkkiv/xXJ3SkpKVq9e
PXz4cLp5PD09u3btOnPmzNzcXL3G586dCw0NDQgI8PDwaN68+eDBgyMjI1Vy
BQAAAEQxAACoAESxgDQLCdiBAweqaKlQFJPKCAoK0sjo1q1bdna2ksIfO3aM
BJdO8sqVK3/99dc6lteuXSNFL7/WgAEDTFJGVnVn0qRJ8uREq1atrly5IrWM
jY1t2LCh3JJ8J6XmCL4or5pLly61a9dOfi0KJFltuS+quJOenk6CWp6Dl5dX
fHy8jjH5WL16dbnx9OnTVXEHAAAApk8DAICVgChWy5IlgFEzkm9s6efnt2XL
lm+//fbll1/mkK5du5aXlxtOnpKSUqdOHaEE9+/fv3z58nr16nEOP/30k7As
LCxs27Yth48ZM+bnn38+cODAsGHDOKRXr15Gi6oEC91Zu3YtG9evX//TTz+N
iIjYuXNnnz59OLBz585/Ph4vzsvLe/rppzmcLkEXOnTo0IIFC2rWrMmBO3bs
sK8vyqumuLhYVA1d66uvviLjqVOncgi5qcp4sYXukEHHjh3Zvl+/fv/5z3/I
hZdeeklUzcOHD4XxDz/8IOrxvffeo5tt1apV/GsQ3333neXuAAAAgCgGAAAr
AVGslqUSUZyRkcEjib6+vvn5+RxI6mPy5MmcPCoqynAO77//Plt+8803IvDy
5ct169bVkbpbt27VO1RHApnDb926ZdQpq7pTWlpaq1YtMqPC3717V4RTDiEh
IZwDqTkOXLFiBYfMmjVLmsmFCxd4gPKpp56yoy+PTKmaxYsXs+WLL774p2SW
+Ndff83hH330kSW+qOIOSWC2HDRokFRBU5k5/NixYyKQdDeFVKlS5bfffhOB
MTExbPn8889b6A4AAIBHEMUAAGA1nhxRLF0IaVjqKreUokQUr1q1is02btwo
DScJQ4KCwocNG2YgeVlZGY++NWnShD5Lo6ZNm8Y5k0jkkCFDhrBOuXfvntTy
119/ZcsNGzYYdcqq7pw9e5aTL1myRCfqzp07HBUaGsohPEbp6el5//59HeM3
3niDjbOysuzli0lV07NnT/pKopXc1Mnnueeeo6jmzZub7Ygq7hA9evQgs0aN
GmVmZkrDo6OjdWrt0KFDHEJiXycTnn1NnkqHlQEAAJgHRDEAAFgJlxfFMTEx
QUFBPMm2YcOGr7zySkJCgl6pq9xSL0pE8ahRo8jGzc1NvlVRYGAgRVWtWtXA
LlhXrlzhq8yePVsniiqRo+bPny+Mt23b9vnnn+tYRkRE6JVLZmChO+Hh4f7+
/k2bNj18+LBOFN2ZXMjhw4eLa1FdvPDCC/J8PvzwQza+dOmSvXwxqWpYPpNg
lOczb948NqZ7z2xfVHRn9erV8tiUlJQ/JQPcfK26deuWlpbqWN67dy8nJ8fo
VG0AAABKgCgGAAAr4dqi+OLFix4eHpq/0qBBg0qVKulIXeWWFaFEFLdo0YJs
OnbsKI8Sakhndykp33zzDdvs3r1bJ6qkpISjSKEYKACZ8QgykZSUZLi0RrHQ
HQOI4ciFCxcaNebhSBKAluyqbbOqKSgo4K/jxo2T5yNmiR84cMBsXyx35+DB
g2xDzwV9ffjw4enTp7///vtr167pjIMT3bp1k/77IjU1dc+ePUePHtWZogAA
AMBCIIoBAMBKuLAozsnJadmypUa78dHcuXPPnDnzyy+/9OvXT2heIXWVWxpA
iSjmYWi9SyxXr17NOURERFSUfOXKlWwjXc4p4PW5PXr0kEfdv3+fRM2CBQu6
dOnCOSg5ZMooFrpTESS7AgICOLnRpa/h4eFsaeHWYbasmgYNGtDX//mf/5Fb
/vOf/+R8tm/fbq4r/8VCdzZu3Mg2+fn5kydPlv6/qEmTJjoj+7wl+Jw5c06d
OtWmTRuNhDfeeEOtfc4BAABAFAMAgJVwYVEstvMVmzU9+utQqZC6yi0NYFQU
ixHDESNGyGPFUOPevXsryuGjjz5iG73zhHlw0NfX10DmzNixYy2f0Wq5OxUx
ffp0ThsUFGTY8saNG15eXhrt0ukzZ86YeiGBjauGh7arVq0qVhkzpB8bNWrE
+cjnvdvFHfEISKlUqdKmTZvY8uHDhzybggS4u7u73Lhdu3aFhYVm+wIAAEAA
UQwAAFbChUXxM888Q33ytm3b6kz4PH/+vI7UVW5pAKOimN5NLB/Gjx8vj923
bx/nYOBoodmzZ7PN7du35bG8A3Dr1q3lUR9//DErRyFVRo4caeG5P5a7o5eF
Cxdywrp166amphqwvHPnDotNjb6VvCZh46oR47AkGC9fvsyB9+7dCw4OFhW0
cuVKO7oj9i7TaHf9OnjwIOWZkpIyb968ypUrU2CtWrXo6yPJlmjM1KlTb926
RQ3Lr7/+2qFDBw58//33zfYFAACAAKIYAACshKuK4ocPH7q5uWkk2xdL4RNv
WeoqtzSMUVFcWlrKgkLvYtJdu3ZxDnv27KkoByEYb968KY/lmaudO3eWR+Xl
5eXn5xcXF5NU8fX15UwsnEFtuTvyDN9++21O5enpefLkSQPG586dE4Oqo0aN
KikpMccHyaVtWTVlZWW8tzNRrVo1+vzCCy/wyU08s5rYvHmzHd2hhGxD4ld6
WtYjyXlSM2fOpK/kr1DEOuI3NzdXjOPTHWi2OwAAABiIYgAAsBKuKoovX77M
HfVPPvlEHtunTx8hdZVbGsaoKCYaN26s0Z5OK49at24d52BgFe2mTZvYJiYm
Rh7Lesro0lqSKk2aNNFoJ8HqVXDKsdAdKfTifvnllzlJvXr1Tp06ZcD40KFD
pJrZmOSbhYqYsXHVZGZmDh06VPNXSB3v37+fP//www92dEcMfP/rX//SiaJG
gxcsDxo06JG24oS6l0+TFgr69OnTlrgDAADgEUQxAABYDVcVxeIM3GXLlslj
g4KChNRVbmkYJaKY9+kNCAiQRy1atIhziI2NrSi52BOYVKFOVHl5Oc+Ofuml
l4wWVUgV+VbJJmGhO4KMjIzu3buzfYsWLa5du2bAmOSnmAf+wQcfqHXcj12q
howXLFjw6quvUo2QbCR1HxYWxvno3bDLZu6sXbuWbfTu98WzwcVhyvXq1aOv
LVu2lFuKqdpbt2411xUAAAD/B0QxAABYCVcVxeRa1apVqTc+ffp0eSwvImap
q9zSMEpEMQ+G+vj4yM+1mThxoka7/bWB3XrPnTvHV1m/fr1OVGJiIkeJ1bUR
ERHr1q0jVSLPR2y1JM/HJCx0h0lKSuKtvwmScunp6QaMhZwnmWn5OctSbFk1
BnjnnXf4Wvn5+WZ4IbDQnT179nCZP/vsM3ksz8D39/fnr507d9Zo14DL/0Gx
d+9ezic8PNwSdwAAADyCKAYAAKvhqqL40WM927VrV51wkhs8/1Nnoy0llgZQ
IorFEbE644DFxcW8pFTvimBpefhwHPlRO+J8W14oSlKIx+/atGkjz2fOnDls
fPz4caN+Wc8dIjs7u3Xr1pxJcHCw4b2/SKCxpaenpxknPRnGZlXzSDsOO3jw
YPnAMT2PXGt0Q9rXnevXr3Py0aNH60RRHfEu0++99x6HjBkzho2vXr2qY8xL
rStVqoQziwEAwHIgigEAwEq4sCiePHky99V1RkvFnkhC6iq3NIASUZySklKt
WjWNbJOr7du3c/L58+cbziE0NJRVhlSAUD127NhRo90WSexoNGrUKL1OJScn
165dW6NdBGrhBtSWuzNp0iS2pBxKS0sNWN68ebN69epkWbNmTb3rdi3EllUj
7iudCcyffPIJh5Nqtrs7vHCgatWq0dHR0nDeyVyq8ePi4jgkMDBQur47Nze3
fv36Sv43AgAAQAkQxQAAYCVcWBQnJiZ6e3tTn9zDwyMsLKy4uLigoGD58uVi
RaqQusotDaBEFBMTJkxgy2nTpmVnZ9O16Iq8/TXJPQoRlkOHDm2kJSMjQwQm
JCTwxsIU/ttvv5WVlVHhBwwYwHnOmTNHWB4/fpwtSZjs3r2bLEl1RkVFibnK
ejcWMxVL3Dl16hSfHKTRrg7+WB87d+5k40GDBrElKSy9lgQfEmQXXx6ZUjXn
z59nx9u0afPjjz/ev3//7t27Qik3b96cLm2JI6q4c+bMGU5et27dH374gZ6I
oqKiTz/9lB8KUvrS2deDBw9m47Fjx/IhU/SXlx4TX3/9teXuAAAAgCgGAAAr
4cKimCDXeHiRYc1CeoQXEUulrnLLilAoim/evPnUU0+xMeXPIoWvqHNEjr+/
P0clJydLwz/88ENRTmmZe/bsSfJKarlkyRIRW6NGDanx8OHD5atNzcASd0JC
QjTGIFH5SDKb1zAnTpywly+M8qr517/+JWJ5SJfx8vK6cuWKJV6o6M7ixYv5
QdBoh4zF/4iaNWumY5mQkMAD4gzdbOIziX1V3AEAAABRDAAAVsK1RTERHh7e
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
ZIk8tRS3adMGk1AKrFu3Tia2JCnFhBBCCCGVGUqxYaBIQ4cOrVatmpn215fa
tWuHG2bZ9ddff5kV+B3hl156qUWLFkoyJycHOiwPgnGH37Vr1x9++EHnFIsX
L5aHVkqOLMb19ddfGxOh8VKM4UMMLi4uu3btQmD5+qRYflUKjQoICFi6dGn1
6tWNlGKUx96BAwdCveGqTk5O8EG9C23Jm+Hjx4+XdZvz/22UMTExsGD02MaN
G6FpiNbKyio0NFT2Pgsp1mg0MrL79u1Dz2D4dKS4X79+EK41a9ZERUXp7Qed
Jsg/H1auXInttWvXmmlfj9cbYbGkGKoL33R2dt68ebP82FBBMcScMdMu/nbw
4EFvb290nZFSjPLY27dvX6g3XBX+iCbrXWhL1tYeM2YMOl9y1FKMvyew4KZN
m6K7fHx8EC2unVOnTuk1WcNSjM6xt7c30/4elryQj+YYkOJu3bqhf5YvX45x
xPAVfH3a3Ny8Z8+e6I2FCxdiYrdu3VpRe0oxIYQQQkhlhlJsDGh1bGxsZmZm
iWuAXD/N4QYwXorB/Pnz5fvC8fHxSMJZoLHqArm5uePGjbO0tESZRo0abdiw
wUz7i1T5Wl3F9nfffacUhhQrC209fvwY8gshkv8etG/f/uLFi7Jr9erVainG
LPLw8EAONERyXF1dYStKtefOnXNzc4O/w2JQ5ujRo8ounYB/+ukn1KMosw46
hVGnu7u7ksQuFJBtPz8/+cUfGNzSpUshXEOGDFFKBgYGNmnSRPHcgv2gbgKm
iqOjo5OT0z///JOvXeYaXWFraws7KxhhsaQYzJ49W74vHBERgSREHhqrLpCR
kTF69Gh0Hco4ODhIz2/btk10FdtbtmxRCkOKlYW24HqQX8QpLon4g4ODZZeO
FMPNu3btKu82SE7Hjh3RsUq1QUFBnTt3hp/KNFAvV6UT8OHDh1GPoswFwbl2
7drl5eWFJmD+qKW4YNvRQIQt8Xfv3n3q1KnYQIfcfyLFn332mbyVgdhg0GFh
YcqxiB+tUJKnT58240JbhBBCCCGVBkpxeUekGJJrjBQDyJo8JjYAqk1OTs7L
yyvBjIIsqF+NLgyErf5Jo4KgEjhICQIoGWgsmoyGF7YXM7+wX1YqMZGRkRqN
xngpBpmZmfKY2ADwx9jYWOPrVHP9+nX1q9GFAcfHXwMDBVCJ8mtKJePLL79c
unSprNAF5Ov869evN3wUPDoxMVEnU/2UHHuVn20qAZRiQgghhJCKB6W4vCNS
nJCQEB4eXtaziRQPSDHsslhSXHmYP38+TNbNzW3evHlDhw61sbGpW7duXFxc
Caoq+Op4ycAwUYoJIYQQQioelOLyjlqKS/Zsl5QVUVFRlOLCgH6uWrWqU6dO
9vb2rVq1GjlyJLqrZFVFRkY6OzsfOnToKUOiFBNCCCGEVEgoxeUdSDEGBVJ8
9erVzMzMsp5QxFgwcNHR0ZBiSBaluFwgUpyVlYW/hCkpKcZcnpRiQgghhBDT
h1Jc3hEpTkxMvKqlrCcUMZaYmJjY2Nj09HRKcXlBkWKMWmpqqjGXJ6WYEEII
IcT0oRSXdyDFOTk5+IRkqRdqJiZOQEBAYmIiril4FqXY9BEjBrLW2aNHj4y5
PCnFhBBCCCGmD6W4AgAjzsrKun79ekhICDbKek6RosEwhYaG3r59m18oLi/o
fKE4OzvbmGuTUkwIIYQQYvpQiisAkGJ8JiUlXbt27fjx448ePSrraUUMgQH6
+eef4+Pj09PTKcXlAsWIMzMz8WcQA2fktUkpJoQQQggxfSjFFYOcnBzcscOL
MaC//PILhqmsZxbRD4YmMDAwKioqNTUVhgXVKmvhI4a4p0V5cTotLS0lJcXI
x8QPKMWEEEIIIeUBSnHFQL5ZDC/WaDSXL1+GF9++fTs3N7es5xf5fzAcGJST
J09GRkYmJydnZGRwiS0T5J6Ku0+Qt6aV7+8bf2FSigkhhBBCTB9KcYVB7tXl
9c6EhISjR4+GhYXFx8dDxLCrrCda5QWdjyHAQISHhx87diwmJiYpKSk9PR0j
BdW6S0ySOyowUhkZGdDh1NTU4v4BpBQTQgghhJg+lOKKR3Z2dkpKikajuXbt
2qlTp3777bfz589DkCFlGO7LWi5puUxKFXWvoqvR4ej2CxcuhISEYBSQvHnz
JoYmLS0NkpVJTBv57jAG6/79+7KWXQkuRkoxIYQQQojpQymuqNy5cyc1NTUp
KSkmJiYiIgKa9rsWONp58oxBJ0tvo9vhxdHR0fHx8YmJiRgOSDHGRUNMHuiw
/Ir03bt3c3JySnYZUooJIYQQQkwfSnHFJjs7++6TVXMznpBOnjFKV6Pbs7Ky
7mpX08rWkkPKD39reZoLkFJMCCGEEGL6UIoJIeQZQSkmhBBCCDF9KMWEEPKM
oBQTQgghhJg+lGJCCHlGUIoJIYQQQkwfSjEhhDwjKMWEEEIIIaYPpZgQQp4R
lGJCCCGEENOHUkwIIc8IkeL/JoQQQgghpg2lmBBCngX/RQghhBBCyglF3tpR
igkhhBBCCCGEVFooxYQQQgghhBBCKi2UYkIIIYQQQgghlRaR4vv379+7d+/v
v/8u63AIIYQQQgghhJDnBCwYLgwjzs3NvXPnTk5OTllHRAghhBBCCCGEPCdg
wXBhGHF+fn5WVhbsmF5MCCGEEEIIIaQyAP+FBcOF8/LyIMUPHz6EIPObxYQQ
QgghhBBCKgPwX1gwXDj/CfLgGPn8cjEhhBBCCCGEkIoK5FeMGBv5/0by5T1q
qjEhhBBCCCGEkIoEPFfempYnwvn6kPeowb179/6XEEIIIYQQQgipKMBzRXjV
b03rJTc3F+78P4QQQgghhBBCSEVBfn3JsA4TQgghhBBCCCGEEEIIIYQQQgip
DPwfX5h39w==
     "], {{0, 441.5}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 441.5},
   PlotRange->{{0, 643.5}, {0, 441.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`stratx = Null, $CellContext`stratx = 
     Null, $CellContext`stratx = Null, $CellContext`p1 = 
     0.75, $CellContext`p2 = 0.25, $CellContext`p3 = 0.5, $CellContext`p4 = 
     0.25, $CellContext`straty = Null, $CellContext`straty = 
     Null, $CellContext`straty = Null, $CellContext`q1 = 1, $CellContext`q2 = 
     0.5625, $CellContext`q3 = 0.5, $CellContext`q4 = 
     0.125, $CellContext`graph = False, $CellContext`seed = 1}},
 CellID->847036161,ExpressionUUID->"9c0ac4e9-aa3a-421b-a38c-0078ccea2507"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQl41cTe/yuUfasgq8i+aAERBcEriiiWXUBQ3BBQ8XoVQURRQWQR93u9
Ai6ACm4gviooCgiobP5B5GWnUKC0FOhC+7al7S0FFfl/PT87N5wlTc+W5OT7
eebpk0wmk0lmzmk+ZyaTpveNvfXBMlFRUeMr4s+tI5/q/vjjI58ZHIOV28aM
/8ffx4x6oPeYJ0b9fdTjXe4ri8gX8eeSclFRfy6f8+DMmTMFBQX/RwghhBBC
CCGEkGJgyvBlT4l2E+pcF3l5ef8hhBBCCCGEEEJIMTBlUWZfcl1YWIit+fn5
hS6KCCGEEEIIIYQQUozIMqwZ7owFr04N+z516pTZJSWEEEIIIYQQQiwKrBnu
7GbWMvabTk0IIYQQQgghhJSIMms1GjwnJ0fGfptdNEIIIYQQQgghxAbIaHDY
NJz69OnT0nltdqEIIYQQQgghhBDbIA9Tw6nh13l5eRz+TQghhBBCCCGEGAce
DZuGU//f//3ff/7zH7OLQwghhBBCCCGE2AzYtLzSmlpNCCGEEEIIIYSUFmo1
IYQQQgghhBDiN9RqQgghhBBCCCHEb6jVhBBCCCGEEEKI31CrCSGEEEIIIYQQ
v6FWE0IIIYQQQgghfkOtJoQQQgghhBBC/IZaTQghhBBCCCGE+A21mhBCCCGE
EEII8RtqNSGEEEIIIYQQ55Dk4hcXq89HIiWB8Qyp1YQQQgghhBBCnAO1mhBC
CCGEEEII8YN4F98aQxIbyZZaTQghhBBCCCHECVCrCSGEEEIIIYQQP5Bx3Z7u
fPJ8PBMYGRBOrSaEEEIIIYQQEtlQqwkhhBBCCCGEEL+Rucj80GrZUT9zajUh
hBBCCCGEkMiGWk0IIYQQQgghhPiNvD/Lq0r7QhLLjvqZU6sJIYQQQgghhEQ2
1GpCCCGEEEIIIcRvqNWEEEIIIYQQQojfUKsJIYQQQgghhBC/oVYTQgghhBBC
CCF+w5nACSGEEEIIIYQQv6FWE0IIIYQQQgghfpPkwg+tlh31M6dWE0IIIYQQ
QgiJbKjVhBBCCCGEEEJIgMS78HRnr0hiI9lSqwkhhBBCCCGEOAFqNSGEEEII
IYQQEiAyrlvmIlt9PhJpZOC3Fmo1IYQQQgghhBDnQK0mhBBCCCGEEEKsA7Wa
EEIIIYQQQgjxG2o1IYQQQgghhBDiN9RqQgghhBBCCCHEb6jVhBBCCCGEEEKI
31CrCSGktPw/QgghhBDiGEq8OaRWE0JIaTH7q50QQgghhISPEm8OqdWEEFJa
5Av2HCGEEEIIiWj+93//l1pNCCGhgFpNCCGEEOIEqNWEEBIiqNWEEEIIIU6A
Wk0IISGCWk0IIYQQ4gSo1YQQEiKo1YQQQgghTsAUrf7ss88ef/zx1NTUwLMi
hBDLQq0mhBBCCHECpmj1Aw88EBUVtWfPnsCzCpykpKRq1apFR0dv2rRJG19Q
UHDFFVegnEuWLPEj2/j4+NWrV+OKBVg8XHDks3379gDzIYSEH2o1IYQQQogT
oFaDt99+G+Vp27Ztfn6+inz22WcRedddd/mX54MPPojdN27cGGDZjh49inx6
9uwZYD6EkPBDrSaEEEIIcQLUaiEuLg5FeuaZZ2R1y5Yt0dHRDRs2zMjI8C9D
ajUhhFpNCCGEEOIEQqHVo0ePvuyyy/bu3Xv77bfXrFmzQYMG9913344dO1QC
T63+/PPPr7322ho1atSuXbtHjx5r166V+I8++ghZvf32257579q1S8UsWLCg
X79+1apVa9++/fjx47VPbUviH3/8sXv37pUqVZo6darXMh8+fDgmJqZs2bKb
N2/Oz89v164dSrhixQr9M33vvfeuueaaypUrX3LJJYMHD05MTEQkTBxHxLkg
h0aNGsnREY/zxfILL7zw1FNPNW3atFy5cpJJWlra/fff36JFiwoVKuC448aN
KygokE3Tpk1DPPLBIbDv0KFDjZwyKCwsfPHFF3FJK1asGBsbi8v43HPPIYcD
Bw5ga9euXa+66ip1FFW2hx9+WP98CSGlglpNCCGEEOIEQqHVt9xyC0ywefPm
VatW7dmzJxZEMI8fPy4J3LR6/vz5WK1evToSX3nllViGDG7ZsgWbIKoXXHBB
586dVeYnT56ESzZu3PjUqVMSM3fuXOyCSOzesmVLLF933XVqOLcUpm7durDm
66+/ft68eb6KLcVo27btE088gYUSHXPWrFlIBqHG6cDZUU4cJScnB1dp0KBB
KCG24ohYlnP55ZdfEFOnTh2kbNOmDXaRC9uqVSs5LjT5wgsvxLLSZ5xa7969
ZS/kAx83csoAoo3IKlWqIAG0GstNmjTB3927d2Prfffdh+VvvvlGpYe/I0bn
4hBC/IBaTQghhBDiBEKn1fBo1YU6evRoxAwbNkxW3bR6xIgRHTt2VLNyvfrq
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
N25camqqZwJqddigVhNCCCGEOAH7anXv3r0hDosWLVIxr7zyCoRUtHfdunXY
2qpVq6ysLNmKlNru5sOHD2NZK+aTJk3SarW47apVq2QVNiSd1wa1+rnnnkOM
13dj4YJjU6dOnXJyciQmMTFx4MCBEydO1B466FotIM3SpUvbtm3bunVrJXQG
hx+jtTzsgUqMMrRr127w4MElel+pJs0OpMD6ZdYvMDLZtm2bLOfl5UF1v/zy
S+uflCI+Ph6Zo1V7ZkitDhvUakIIIYQQJ2Bfrd69ezdMp0KFCnfccce0adP6
9OkD9YiNjVWvlr777rsRc+mllz7++ON33nlnpUqVKlasqPViebMV1ObZZ58d
OnQostJq9cyZM7HapEmTZ555Zty4cXXr1pUERrT6hx9+gCVVq1YNWj1Ng3rB
lnSFt2nTZsKECePHj69Tp462/zoUWr1161bt7FWLFy8uW7asPDVsXOiwsPx8
VqxYoTwxLi6ua9euwXrBVlAKrFPmEgu8Zs2aBQsWqNVLLrlk4cKFFj+pgwcP
opnl5eVJMjTdzp07e2ZIrQ4b1GpCCCGEECdgX60Ga9eu7d69u8hymTJlbrvt
NvXKKgBxuPfee2vVqoWtkJcHXWi9OD4+vl27dtKFXa9evY8//lg7HXdhYeHY
sWMh45L5qFGjZHc1EzhisIpMJCvtkPK33noryhtJSUnazJs2bSrxjRo1mj9/
vir5wIEDEZmZmWn8Uhicsmzu3LlIg8S33nrrVVddJZu8zkHtS+h8IVcD11Yy
8fpeJ4Xx2b3CXGCU6uGHHz5+/DiW4apVqlTZsGEDlufMmYMmFPgD46E+KexV
tWrVl156CfmjtO3bt3/ooYc8k1Grwwa1mhBCCCHECdhaqwU4QkJCQr5mqm0t
ENh9+/bJC6D/8Y9/aLVaSE9Ph4Agmdfdcb7IPDs7O+jFFpKTk48dOxZ4PkYG
gb/55pvVqlWTNya3atXq559/VkKndX8kK63Q4Qq7/YAwefJknfQGx0uHv8Df
fPNNxYoV5XnnvLy8cePGRUdHQ65r1Kjx0Ucf6edp+kkJcPOGDRvKe6v79OmD
1uWZhlodNqjVhBBCCCFOIAK02jhetToyMPhsNbbu3Lnz8OHDRgQtdBh/DDn8
BXZ7ndaJEyfQYEp8Yj3fYieVnJys7e/2LAC1OjxQqwkhhBBCnAC1OjIwPmWZ
FSjV7F52wUYnRa0OG9RqQgghhBAn4CitTklJkZcFm12Q4KPVajVjlWWxkYEa
xy4nheZBrQ4b1GpCCCGEECfgKK2OYFJTU1E7OTk51GqzsMtJiVajqaDBoNmY
3XIjHGo1IYQQQogToFZHBunp6ZmZmXbR6jQXZpciyNjlpJRWo8Gg2ZjdciMc
ajUhhBBCiBOgVkcGubm5GRkZ2dnZJ11Y3KwLXJhdiiBji5MSpwZoKmgwaDZm
t9wIh1pNCCGEEOIEqNWRAeoF0pSVlWWXDmtiCqqrGk0Fq/w4hxpqNSGEEEKI
E6BWRwxwJakmmjXxivapajQVLJjdZiMfajUhhBBCiBOgVkcSmS5yc3NhTDIr
uPi1FrPdjoQDt0qXlqAahrQTs1urI6BWE8VuDYs8UJvMLiYhhDgdfl0T/6BW
RxhwqLS0tMLCwuzsbOm2JuSkq5MaTQINA80Dq2a3U6dArXYsctP1jIv+pQd7
yf2b2edBCCGRj+gzv7FJgFCrIw+oU0ZGBhZOnTqVlZWFWhPFJg4EVY8GgGaA
xoAmgYbBj3A4oVY7Bx2P7tatm9x3KTy7P9QmSez1ns3sUySEkMhB55dPg1/X
vixbdWqbfYok3FCrI5WCggIZBy5WBTKJw5B6RwOQ3mo0CbNbpeOgVkc8yqa9
3pX5PVBQjTykXxNCSBAJxTe20m2vik2/dg7U6sjm1KlThcTxSFc1CT/U6kjF
q00Hclemj6dic8AhIYQYx/NLO5zf2PRrh0CtJoSQEEGtjjx82XR4ju7Vr8Nz
aEIIsSOeNh22L20Zd+Tp12E4NDEFajUhhIQIanUk4bWnw6zCUK4JIUQf63xp
e/o1v7QjEmo1IYSECGp1ZKC9NzPXpt3Q3qdxWDghhCjcvh7NLs5fzJkzh9/b
EQy1mhBCQgS12u5o738sJdRarHn3SAghpmDZH0K1UK4jEmo1IYSECGq1fbGF
UGuhXBNCHI4thFoLv7cjDGo1IYSECGq1HdHemI0ePdr6N2ZacGMmb77mHRoh
xFHgu9pGQq2Fch0xUKsJISREUKtth716Oryi7tBwCl632vS8CCHEF/rfe7aA
ch0BUKsjG/XealScua9Ojhj+46KgmHwXWMgLL9pDC1IwzwKjGYT/KumgCumE
t2lTq21EJN3SaDvc3c7F1redhBDiia+vO9uB8kfMuTgTanWkAs/Kzc09efIk
ai0rKyuTBI8TJ05kuMDC8ePHU1JSkpOTDxeTGDIOa8ARcVwcPaMYFEaK51bd
sFczLpIeKCGaJRpnTk4OGqrZn5UQQq22BbZ7HM8g6ocCdXumYiLmHAkhTkb7
7R0xX2uR9Buv06BWRx6FhYWQrCJXVzUUBrWWnZ2dQ4IBriSuJ65qamoqPHf9
+vVbtmyB3ubm5qp+5JMhQ9tbjTIkJSVt3boVZThw4ADK46uu0QxMuVY6qMso
HdZorpH6xUKttj7aoYMRc1em0Jq12yRsZheNEEICwr4PUxvB83dRYn2o1REG
hCstLQ1mLXoVOsVzJriqkMGDBw9u3Ljx6NGj+fn5uNS///67KR/e3377DUdH
GY4fP47y7N+/H34q9S4DFQSoq4lXTB9RbJwFGi1Wzf70BB9qtcVxwn2LOscr
r7yyv4bIuwslhDgH5dRO+PaO7NOMJKjVkYSMsIVSacXK7ZncfBIAWVlZ21yY
/cH1ws6dO7du3XrixAnUvrauodXmXjSFW1OU9qmaq7Resz9DQYZabVl0nj6O
PHCCLVq0qFu3rtas2WFNCLEpTnBqhRN+/o0YqNURA8REqkk6qWnQoWDjxo3H
jh0z+1Prk9TUVJQwLS1NflSRNmAdrfaK+DUarXy9YMHsT1IwoVZbk8ge+K3Q
/nTQrVu3ui60Zm12AQkhpNQ4yqkFmrVdoFYL77333rBhw2AlZhfET2Ru6qys
LDp1SDl8+LDZH9kSSElJiY+PP3HihDzunW95rc7XmDUaMFYj6UuGWm1BIv7+
BPec2qGDCk+zjuCfFAghEYkDnVrQfqvzq9uy2EWrcdzVq1dv3749RFk1a9Ys
KioKjTbw/P0uQyDAoTIyMmR2ZetrtfbVVHZBymz259UQK1euPHr0qBoKbhet
PumatR7NGI05WJ8L06FWWw3pvYVgRvwtmRGz5jhwQoiNcKxTK3Di+Bp38hWw
OHbRamgCtLdnz54hymr58uVTpkzJzs4OPH+/yxAI6enpmZmZdumqTnNhdilK
B64wymz259UQCQkJiYmJ8pS9LbQ6X9NhjWLjUgfrc2E61GpLEXnvYdHHq1lD
qLVm7ZBLQQiJAOQ73OG/B0b8gCtbQ602haCXITU11UZPVR9wYXYpSsfBgwdR
ZrM/r4Y4c+YMSqvGgdtLq9GM7fsshifUaougnjKO7IepPVGdO17Nulu3bg6/
QSWE2AXRSX5lnaNZW5gwazXu9seOHXvZZZddeOGFgwYN+vzzz9WmW2+9FfGr
Vq2SVbjAwIEDEbN9+/Zp06a1aNECHlq5cmXEDB06VO0F0xk9enS7du2qVq3a
o0ePV199Vd6EK2AT0v/444/du3evVKnS1KlTfWU1fvx4rGrv543kjKvXt29f
nEudOnVuv/32I0eOqARpaWn3338/jlWhQgVkMm7cuIKCAtmkczo610cfHA61
o52oyspQq0NNQkJCRkaGjAO3kVajAaMZozEbbPbWh1ptBbTvNjW7LObg2W0t
Zo3/RP05cRkhxPKoLzGzC2IVaNbWJJxanZmZGRsbC51s27btTTfdBM8tU6bM
119/LVvXrl2L1ZYtW8rra+fOnYuUw4cPl+XevXtjFfYK2XzqqadkF9x+t27d
GvHYCwlq1KiBZQisOuItt9yCGNw8xMTEXH/99fPmzfOVFdwWkcqLDeZ8ySWX
NGvWLC4uDu6MVRxCXa5WrVrJmfbr1w+OjGWlz77KoH999NFqtblyFB8fLxNP
6WAprT569Gh2dnaJyeyl1fv27bOXVgNqNQkFdGrB06zVK7d4V0YIsTJ8pNor
NGsLEk6tHjlyJJxxypQpsrpt27Zq1arBWFU37vjx45Fg0qRJx48fr1mzJqT1
xIkTssnrqOl77rkHkU8++aSswuZEZleuXCkxIr9wWFF1nazctNpgzmjMhYWF
Ra5Hm2vVqoUYmBdWN27c2KFDhzFjxkhiqE3t2rWh3ljQKUOJ10cHI1pdtmzZ
CzS89dZbKDYu8qOPPqrS3Hbbbddeey0WcO4XeLB3714dLVq6dClqrXr16tHR
0U8//bROSoNaHeoCb9iwoWXLluVcDBo0CB6qk9igVuPcy2iYP38+PjKNGzdG
21Zp7rrrrm7dumHh2WefLeMBGqGRT+7hw4fRPBo0aOB1a3x8PK6Vca0O9aXG
B0qb+JtvvvFMQ60mQYd3HVrcBoSr6ctGjx5tdtEIIcQn8ggPv8Y94f84qxFO
rW7evHn9+vW1MY888ghEcuvWrbKK++rY2Njy5cv36NED8StWrFApvXpo06ZN
oavaIn311VdIBluRVZFftxM0otUGc/7xxx9Vgttvvx0xahC7GyNGjMDWnTt3
6pShxOujgxGths7AfA8Xk5mZicgvvvgCKocTwfLixYsrVqy4ffv2fNcMXZKs
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
Jx/TDyrln+HPffv8Ffrzy8c7nDvdRMKs1QLunxMSEnAj7ce+uPFWb39WIAZm
FJSsgpKzgGuF04QHlbYMflwfg1odpeHNN988duzYRRddBLWUBChJly5d4uLi
tHtdeeWV+m+eEvbt2xd1PpMnT/aV2LhWh67A+a4XbTds2FDeW92nTx9krpPY
uFZry/z++++jRurUqQORlAR//PFH165dcTjtXp06dZo3b15pP7zff/99EAeB
h/RSL1u2rFatWlWqVImOjr733nu9tlJqNQkEPlZ2znU3qzzaTaKVOL/z8jvr
vlwnIWNXhh8BOyITCcq4lWuLaKsbXbMvCSEkHJz/I55GojXuvOiDuXt+2SDh
XGFWaYPsiEwk/Ne4lWv355fPX/BhKLMwRatJ0DGi1dbBoFaHh+TkZOmc1ceg
VluE0mp1GEBJduzYod5o5gm1mgSCY51adQwplYbhql5mJdH+GbQfri2irSyb
d7mERCraL59ile4lEj36oQeURPth0KXV7fNE+7+W/deXjwN7sTkxuFlQqyMD
anWosZdWx8fHW02rS4RaTfzGgRPGutm0tj86PB5t0LKVYksvNv2aELtz/gDv
/6o0Qng82ohln6fY/Z345aPM2oG/KpgItToyoFaHGttpdXp6OrXadKjVYcBR
05Qpm1Yd02LTVlBpfcWWXmzVhe20W1xC7I7mp7zzOqatoNLGFPuvLmznfPnw
IevwQ62ODLRarWa3tizU6lCzb9++jIwMG2k1ykmtJn7gnKFuXvumLavSvoLW
r1X/tdmXlhCix3kjvTU2bbo1lyqc59f9nfLlw4eswwy1OjJITU1F7UCjqNUh
wkZafebMmf3790OrZUI8G2k1GjCaMRqz2Z+noEGtDjUR79QyEZDdbdqrX8tc
Z+y8JsSaRIZNe/Xr4rnOIr/z2qa/PK9de+6GG/4KU6b8GfwG+yITZBgeqNWR
QXp6emZmpl20Os2F2aUoHbjCKHOYPpaBAadOSEg4ceKEHbUazRiX2uzPU9Cg
VocU3Cd069YtUn+Hd+uejgybdgsyPtxtcLjZF54Qp+Mm1JFh055y/ZdfR3rn
te0esp469VxUlHtApB/ApmV3ajUpFRCojIyM7Ozsky4sbtYFLswuRemQMofp
YxkY3377bVJSEj6t0hKsr9Xi1AANWDrZzf48BQ1qdeiw3a2CcdTT05HUPa0f
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
UAVpaWmoDlQKqgYV5Id5sX4tQojq1xaEWqvPeXsEyeszRDoTlBnMwRRsMQKc
/dRWDjRrEsHQqa0cbGHW1h8Hbi8cq9VyD4/TycvLy8rKwk1+eno67vBPnz79
xx9/mF0tTuf3339HHaE6UCmoGlQQqgmVZdy8WL9WJvD6tQth0GrFunWBPoUU
eA5Bx/ojwOnU1g/KrK18c0tIaeHz1NYPtjBrjgMPIs7UaunExLngxj4jIwM3
9rAts6uCeAdVIz2bqCwZM1yiebF+bYQf9WsjwqnVEYnF/93Tqe0SaNYkwqBT
2yVY36xHjx5t5eLZCwdqterHxG289JSZXQmkZKTHWcxLv0+T9WtHjNevvaBW
B4iVH6zmvN/2CjRrEjGod2nRqW0RLD43uC0etrILztTqwsLCvLy8jIwMOpeN
QGWhylBx+h2arF+bYrB+7QW1OhCs/L+e76e2Y5D3WVuzRRFiEDq1HYO8z9qa
Xz58vDqIOE2r1RxWuIdPTU01+/KT0oEqQ8WpGa5YvxFGifVrO6jVgWDZB6ul
YHRqOwaaNbE18uUDp170wVzTVZGhVMHKZm3lgWH2woFajVPIzc09duzYmTNn
zL78pHSgyo4ePYrqk6HCrN8Io8T6tR3U6kCQF39YTavlh/1eN/aiU9s03Hfn
fTBrq7UrQkpEvnz69+1Fp7Zp6N+nZ//+/Sz45cPXbAULR2m1PLNZUFCQmZmZ
lpZm9rUn/oCKQ/WhEj2fwGX9RgA69WtHqNWBYM3fz1EkSBmd2r5h3Zfr4rrF
9etjxZtbQnRwOXUfOrV9w55fNljTrKnVwcJpWl1YWJifn49b99zcXLOvPfEH
VByqD5XoOU6Y9RsB6NSvHaFWB4IFtVqm/h77wFjT3ZAhkCBmzdtIYiNk6u+J
Tz5muhsyBBLmzv6XBScG5+PVwcJpWi0jhI8cOYJVs6898QdUHKrP6zhh1m8E
oFO/doRa7TfyX3706NFmF+S/qNdpmW6FDIEHNTG42c2KkJJRr9My3QoZAg/q
lVtmN6v/Qq0OFs7U6qSkpLNnz5p97Yk/oOJQffpazfq1Lzr1a0eo1X5jtfnK
OE1Z5AVOX0ZsgZqmjFN/R0yw4PRlFhweZkecptUFBQXZ2dmHDh0y+8KHg19/
/fWtt95688039+zZY3ZZggmqD5Uoj986uX4jFV/1a0eo1X5jNa3mI9URGWDW
fMiaWBxOUxaRwWoPWVOrg4IztfrAgQNmX/hwgDONcvHvf//b7LIEE1SfvlY7
pH4jFV/1a0eo1X5jKa2W4d906sgLfMiaWBwZ/k2njrzw5/RlVnrImlodFJyp
1QkJCWZf+HAQqVqN6tPX6oiv3wULFjz99NOvv/662QUJCb7q145Qq/3GOlqN
MvTr04+PVEdqkIesLTUakxCBj1RHdpCHrC3y5cPJwIOCA7UaZxHx2iVEsFaj
En1ptRPqt0ePHqjWFi1amF2QkOCrfu0ItdpvrPMvnm+pjvggD1lb4TccQrTI
I9Xsqo7g8OdD1tYYCm6d/7m2xoFanZWVtW/fPrMvfDiIVK1G9aESfWm1E+o3
srXaV/3aEWq131jkXzyHfzshqDdZm97eCFFw+LcTQvGbrM3/Z2eR/7l2h1od
Uo4fP/7zzz+fPHnSLT4vLw9XPj093WA+Bw4ciI+P//XXX/WTpaWl/fLLL6mp
qbJaolbjaiBblCQjI+OPP/4osRi//fbbjh07VP4KXFjEHz161MCpBAHraPXZ
s2dRxbjmmZmZQcwWFb1r167ExERflWJEq1XZ0HhwZYwcFw1y586dp0+fdos/
duzYtm3bPONDBLWanCt+zsvcf/Ec/u2cwKHgxFJw+LdzgkWGglOrgwK1OojA
rcq6mDt37rx581q1aiVWO3/+fEkAXZoyZUqjRo2iiqlXr96QIUNwYbX5jB49
GplcfPHFKPPw4cPr1q0riaOjo2+77bYTJ054HvqLL75o3bq1yhb7vv/++zhT
X1oN2+rZs+cFF1ygdmnWrNmsWbPckqmS4LqhnNWrV5fELVu2XLduHRIkJyff
euutZcqUkfgGDRpMnjw5aBfUB1bQ6t9//3369OmoPnUBUa1333231q9xkaU9
rFq1ym33n376STatXbtWG//DDz9cffXVFSpUkDyrVKly8803ayc2RzVhL3VQ
yaRNmzbaTH777Tc0M23ZypUrh5Zz8OBBbTJtc128eHHbtm1VM0O9FxYWQurf
e++9+vXrS3z58uW7dOkShgH21GpyzhrTp3D4t6MCZwUn1oHDvx0VrDAU3Drz
mdgaanUQSU9PFwEZNGiQ1n1Eq+EpHTp0iPIGBPzIkSMqn7///e+IrFWrFkzW
M3Hz5s3d+g1hbdrDKR577DGvWr179+4aNWp4LckLL7ygTalKMmDAALeUUL8f
f/yxYcOGnplMnDgxFJdXYQWtfvDBB71eQMj1jh07JM3mzZslcvny5W67r1+/
XjZ9//33KnLmzJmqHtUvFaBq1arQbUnj9YK3bNlSm/n999/vtWyNGzfWjjRQ
zfWee+5RIq+4++67X3zxRc9MGjRokJycHIpLqqBWk3MW0GoO/3Za4KzgxCJw
+LfTghVmBadWBwVqdRBRngIqVar09NNPf/PNNz/99JMM9obbyqaePXt+++23
hw8f/uyzz2699VaJHDt2rMpHZFYYOnTo6tWrjx07Bndu06aNRL722msq8aFD
hy688MIoV8flE088sXbt2u3bt0OI6tSpozLRanVKSsrFF18s6Z988kmo8Z49
eyB0LVq0kMQLFizwWpJHH30UrQXOOGrUKImRzu5hw4bhHA8cODB79uzo6Gg5
999++y0UV1gwXaunT58uV+Dyyy+fM2fO/v37P//8c8ipRMbGxkqyUmk1Cl+l
ShXENG3aFJXy66+/oqbefPNN8evrrrtOkh09ehQ13qVLF0RCsQ+5QPNQOU+e
PFly7tix47vvvpuQkIDG9sADD0hk+/bt8/LyJKW2uTZr1mzx4sVok0uWLFHd
3Kjf2rVrf/TRR4hHgVEGiZ8xY0ZILy+1mpwze0Aajoujc/i308I7L7/TO663
6aMxiZMRu+Hwb6eFPzus+/Yx8cuHg8CDArU6iChPqVy58saNG922PvLII927
d7/99tsLCwtV5JkzZy666CLscsUVV6hIJbNIfPbsWRWfnJxcvnx5xPfr109F
Kpt75ZVXtIfbsGGDSK6bVqtu1n/+85/a9AcPHpQu7KpVq6qDqpKg8NrEcXFx
En/bbbdpn/997rnnJF712IYCc7U6LS1NzrFBgwYZGRnaTcOHD5dN8OJzpdTq
r7/+WmI+++wzbcpZs2ah2dx444346KlIX89Wq7I1adLE7cmCf/zjH27tRDXX
mJgY7fjwTZs2SXzZsmV37typ4uHj1apVQ/yAAQNKc8FKDbWanDP7Xzy7qh0b
OHcZMZc/v/rYVe28UDx3mWlfPtTqoECtDiLKUwYOHGh8r9GjR0e5Bv16yuyW
LVvcEkuP4aWXXqpiYmNjEXP11Vd75vzkk096avWVV16JmC5dunimf/PNNyV9
fHy8W0ncnqh97bXXvArjmjVrvLphcDFXq5X/YsFtU25u7pQpU5577rkNGzac
K6VWf/PNNxJjZAi9L61etmyZZPLdd9+5bTpz5kyDBg3klxCJUc31jjvu0KZE
OxR97tSpk1sm1157LeIvu+yyEksYCNRqcs7Uf/GcqczJgXOXERPhTGVODubO
XUatDgrU6iCiPMWtI9gNFAPtFuYFCfr4449r164te6mB0yKz5cuXhwq57XvX
XXdFuWYkU1nJ07hjxozxPNDSpUvdtPr06dPlypWLOn/MuWLr1q2S/sMPP9SW
BJLllvLdd9+VlNpHwgF8XOI//fRTnSsQIOZq9bPPPivnmJ2drZ+yVFqN3GQo
Aujatetbb72FsyjtTOBqtAAE33Ovvn37RrkGmcuqaq7/+te/3FLKYwIjRoxw
i4eSI75169b6Jx4g1GpyztR/8Tguu6qdHGTuMt5ekvDz5/BvdlU7OMjcZWb9
4zN9mtAIgFodRJSnwIm8Jvjqq6+uu+46ZU9uuGk1dNszh5EjR2q1esuWLbLv
vHnzPBMnJia6afUvv/yik76wsFAel1aS7qskSqtTUlK08U7Q6l69emmrQIfS
Tln27bffuk0dVrdu3XHjxu3Zs8dtd19a3adPnyjX6HSv5Xnqqae0PwjoNFfR
ajQ2t3hqdWmhVvuNWdOnyPBvdlU7Oaz7ch07rEn4ka5qiJXpcsdgVpC5y0z5
8qFWBwVqdRDR12rVkxjlmka7efPmHTt2FD8KXKvhuZ6JDx8+7EurvabH9RGt
fvTRR/VL4mSt7tevX5TrzWglpiytVp9zNaFXX331yiuv1M4EXrZs2U8++USb
TF+rfSk/tTr8UKv9xiytZlc1QwZftkXMgC/VYjhnXoc1tTooUKuDiI6n5Ofn
y+jrSy65ZOPGjdqJyCZNmuS3VqtB4F4HdX/11VduWq0/CByNQdK7DQKnVmuZ
OnWqnKPXF4hrUVq9dOlSt03qIWg3rVacPHlyyZIl6lcXWLZ2CjJfWq2mAfc6
CFx+EPAcBE6tDh3Uar+RubhHjx4dzoNKVzWUynStYzA3SIc1bzJJ2OBLtRgk
mNVhTa0OCtTqIKLjKWqeqzfeeMNt0/XXX++3Vp8rnrKsc+fOnoknTJjgptVA
3p1dqinLqNVali9fLuf4xRdfuG0qLCycNWsWqnjXrl1Y3b9/v6TEhXVL+cor
r+hrtUJ1MWvdXLS6cePGbolVMyvVlGXU6tBBrfYb0eow31qwq5pBBT5hTcIJ
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
1rKysn79+tnRam8h2yJpOn78uDOtph1pd3xgS108nAm8oKAgPT19wIABfNa+
u+66i4r0qlWreBp6+fzpT38yerFRq5mkP/7449qsUsyMGTPcXrNgoNVKwPqB
kz0FbnAIEgbWVK3ipFhAftAPHMEioKlaOaDVLlm/fj1V77OysujfyZMnL126
dNSoUbRMD4JWMEmizz333MbGRh6zZ8+el19+uaioiJYHDhzYq1cv7b195pln
AtFqyiH9yocPH66qqrJfiigx7UI74rvVSuOhVhMrV65kj8batWvnzJmTlpZ2
/vnn87nBSbe7du1KCV5//XXdjkatPnjwYLdu3Sjy1ltv/e1vf7t48eJOnTp1
7Njxvffe8/DyRQCtVgL0A0dIFFhTtVqTjAGFQD9whEQBTdUqAq12yYIFC5gC
0AL7XHXfvn2XL1+ubYOrqKig+KlTp5oewXQr/S6BaDVlm3ynvLycfJ8MyE4R
omSUmHahHWl3aLW6eKvVVDDmzZvHv4c1cuRIKtXaBBMmTDjnnHN27typ2/H7
3/++cbo/qnuw2b8ZQ4cOzc/Pd33FwoFWqwImLkMwDRGfrAz4ABqsEUzD6aZq
aLVqQKtdkpmZ2blzZybRNTU1pt/kZdN6X3755aZHKC4upq3Tp0/XRrJvYfus
1c2aBmvK1aFDh8inrMsPJaBklBhN1SHAW61m0BNB/rtjxw5tVw0GlRbdh62T
cvTo0ffff//IkSMp7RUg0GpVQIM1gjE89dhTmKwMiAYN1gjGEG+qnoGXj3JA
q90Qi8XS0tImT56cNOV5553Xv39/bUxtbW1JSQnTip49ew4cOFC79bXXXgtK
q+knJo2qrq4uKir68ssvy8vLExUe2kQJKBklpl1oR2i10hjd2YKgM6sG0GqF
oAoMGqwRtAGTlQF/OD1xGRqsETQBPcAVBVrths2bN2unGrNg7ty5lPLJJ59k
q01NTSTjFMNuPpvibMOGDWxrXV3duHHjAtHqZo1Zx2Kx4uLivXv3FhYWlpaW
1tbWfh2HFmiVImkTJaBkcOpwAK32HGi1QlAFBg3WCNqApmrgD/F+4DPRYI3A
wmmnxmRlagKtdgPdkN27d1dUVCRNuX///t69e6enp1999dUrVqyYOHEiWXNu
bi7bWlBQkJGR0b59e/Lo+++/Pzs7m83mFIhWN2vMmi6Qrq6oqIgketeuXTvi
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
W7cm2qusrIwSXH/99W5OrW2nVlqrDx06tH///k8//fTUqVOplmHahXak3VmD
ddBXIyO6QkLFxrQ4eajV/fr169Gjhy5y4cKFVOY//PBD011Onjw5YcKEs846
a8+ePSwGWg0kB2atSmBO7dXU3zZBs3XosfMTszSenxpmrUrYsP4J9jktvASi
ALTaPXfffTfJwieffKKNZAaxbdu2RHtBqzlcq7dv3+5Mq2lHaLUFKWl1fTLs
aPXFF19MxVs37/ecOXMokn4m0102bNhAW5cvX85joNVAfmDW8odAnJqjbcr0
/+xAHIF3SIhPDA6zljq0fqIan9OKCtBq90yYMIF0oLa2Vht56aWXUmQsFku0
lydaHZpO4Ly12lkncLRWW5NSJ3BPtPqmm26i4l1YWKiNHDt2bKdOnUxHdtfV
1fXq1Ss9Pf2ll156s5Xu3bv37t1706ZN27dvd/yMBAu0OgpQ3RZmLW0I1qkZ
mMcsZEjSD6H1k1swa0kDnDqCQKtd0tjY2KFDB92IUVpu167d6NGjtSkLCgpu
vfXWvn379uzZ84YbbtixY4dOq8kKlyxZkp2dnZGRMXHixMceeyzp2UMzZRkb
W02lsaSkJNUyTLvQjhhbbUFKU5Z5otWrV6+m4v3UU0/xGDp1x44dqXibpj92
7FibxFxzzTVJnwU5gVZHAVa5hVlLGGRwag4+vxUOtH8kCXzUPMxa2gCnjibQ
apds376d1fzXrFnDYmpra9nA6pdeeoknI6fo378/RY4YMWLatGkkzoMHD9Zq
9fHjx0nDKWbYsGEsAS3fdtttAVxSEJDoka/RTXCm1bQj7Y4PbLnEw5nACwoK
0tPTBwwYwGftu+uuu6hIr1q1iqehl8+f/vQnNjF4Q0PD8wa6dOnSs2dPWtiy
ZYu4qxYKtDoiwKwlDFI5NQPN1qrDG6nl6dIPs5YwwKkjC7TaJevXrydZyMrK
on8nT568dOnSUaNG0TK95LSWd91111HksmXL2GpZWVm/fv20Wn3LLbfQ6pIl
S9hqdXX1kCFD0tLSdJ8oCivsu9VUwA4fPlxVVWW/AFNi2oV2xHer3eOhVhMr
V65kj8batWvnzJlDhfn888/nc4OTbnft2pUSvP7664mOQM8IxlYDhcA4a3mC
hE7NQbO1inxjr3I0UuuAWUsVWuf9lvHlA0QDrXbJggUL2HxltMA+V923b9/l
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
6HDw4EEHhy0sLNy8eTPdMZfZoxtOx/nss89cHgcA4D/QaiACdeuH6ubcK7w1
azi1NZ7fH/7zeXI0FVH3EVY350AhoNXEzJkzKT+/+MUvtJE333wzRf7oRz9y
dsy77rqLdv/73//uMm9Hjx6l40yfPt3lcQAA/gOtBiJQt36obs49xCuzhlPb
wcO7FMHPaRlR9xFWN+dAIaDVxIEDBzIyMrp27VpaWspi/va3v1EOR4wYUV9f
7+yY0GoAALQaiEDd+qG6OfcW9x2J4dT28eRewakZ7D6oWOrw8gE+IEKrFy9e
PHr06H379l1//fU9evTo37//HXfcsXv3bp7AqNWvv/76d7/7XRLbXr165eXl
ffTRRyz+xRdfpEP99re/NR5/z549POb555+fNWvWOeecM3bs2GXLlmlHbbPE
W7ZsufTSSzt16vTwww+b5nndunWUpRtvvJGWGxsbs7KyaPW9996zvtJnn332
kksuISX/1re+dc011xw+fJgiKysr6Yx0LXSEgQMHsrNTPF0vLdOJHnzwwSFD
hpx11lnsIBUVFf/+7/8+fPjwDh06ZGdn33vvvZQBtmnNmjUUT8ehU9C+3/ve
9+xcMtHU1PTTn/6UbmnHjh0zMzPpNv74xz+mI7AO7ZMmTbrwwgv5WXjeFi1a
ZH29AICUgFYDEShdP4x4H1qOG7OGU6eKyzuGSeE40GoALBCh1XPmzCETHDZs
2Nlnnz19+nRaYIJ57NgxlkCn1b///e9ptUuXLpQ4JyeHlkkGd+zYQZtIVNPS
0iZMmMAPXldXRy45aNCgkydPspgNGzbQLhRJu48YMYKWJ0+e3NDQoM1Mnz59
unXrNmXKlN/97nemeeYqvXnz5scee4wrtgW//vWvKRkJNV0OOTvlk85SW1tL
d2nevHmUQ9pKZ6Rldi07d+6kmN69e1NKOhftwm7syJEjKX7MmDGkyd27d6dl
rs90aVdccQXbi45DPm7nkgkSbYrs3LkzJSCtpuXBgwfTv/RWoa133HEHLb/9
9ts8Pfk7xSS6OQAAZ0CrgQjUrdm2QKs1OJ5Qmt1DCEJKOFZj/BFDi7ovH2g1
8AFxWk0ezZtQFy9eTDG33HILW9Vp9W233TZ+/Hg+K9fPf/5z7aDmqVOn0ipr
CCY2bdpEq/RcsNUDBw6cddZZAwYMKCkpYTG33norJXj00Ue1mSE5JR+3zvaW
LVso5fDhw88++2xy8KNHj1qnpzy3a9fuq6++Yqtr16694IILyMrZqrETONPq
Dh06vPvuuzySEtBeS5YsYav19fW9evWiNLzzubETeNJL3rZtG62ed955ZWVl
LObxxx9vE4dpNevifvvtt/NjUh46depUXV1tfckAgJSAVgM3PPxwy9SpLW3a
fBNWr/4mnv73pGot/Wu9+0cfnbG79gieoDs+Lds5/qtx2LLQ7MmPM1+L+EzU
bnBg1pF16tC/fLTQxbKDAOAScVr90ksv8ZiGhoYuXbqMGDGCrVqPrSaDpq3X
XnstW33mmWdo9YknnmCrbCYxpofN8b7QtPqb3/yG715RUUExc+fO1WbGzjU2
tzbj6g6YiIsuuohdJm8315JIq0nwrQ972223UbLPP/+crRq1Oukl/+IXv6DV
p556SnvYMWPG8PtGGR48eHDPnj3Zr7l//37adP311ye9ZABASkCrgWN4pZEW
tBVIqk/agVUU3RwhpePzZYq3icsLDAepWhuc2iWpmnU0ndr02bRvnfQIu3w5
WOP+5WOaW2g1cI84rd63b5828pJLLklLS6upqWk20+pXXnmFPHTSpElZWVkZ
GRm09eqrr2abYrFYp06daFNzXM+7des2fvx4vuOSJUuYCI/TQKu9evXSZqaq
qip5DbjVT4cOHWpqyjpIqOmKKH3fvn3JSekStPObJdLqH/7wh7rjHDhwYOXK
ldOmTbvwwgvZSGqCt90btTrpJbPGa93PqvtzxIoVK/jg8UcffZSW//znP9u5
RQAA+0CrgTN4vZE7Jm+dsVP347vr6pm8Cuoe4/GNebaTQ21i+xcYJuyLHpza
E3DDrTF9+aQknsbEKb0cbB7f8ctHh4O/GwCQCHFaXVRUpI3Mzc2lSPLWZoNW
Mw1MT0//zne+c+2115JQa7WamD9/PglsSUnJX/7yF9r05JNP8k2sfTk7O/s6
DcOGDbvtttu0mbGp1QQlzsnJsZm4oKCANHnUqFHMc7OysnifcJtaTTe/W7du
rM/2rFmzmPxaa3XSS2YDq7VDpwk2RptrNd18WqVM0vLFF1/cu3dvT+Z4BwBo
gVYDZ5hKMa/cJq06skqmaduNJ5VbXonVYdOL+YU4vsCQYWeWaZYmaoonCNxw
Czx5+RhfDl51tE70cnP2RzldwzcALhGn1W+99ZY2sk+fPgMGDGDLWq1m2jho
0CBuvp9//rlOq5lN/+pXvyJzJPvm6kqsX7+eNm3cuNE6M4K0mrNnz57LLruM
9v35z3/OYmxq9Q9+8APdHwquvfZaa61OesmvvPIKJVi4cCGPKSkpYfLOtbo5
btP0oxw8eJDiFy9enOolAwCSAq0GDkhUL22xXXW06BLpSYtwouPzurc1Fsm8
7SyqENaix7f6n7GwYvOGR+1zWu5fPiyZuL/puXz5aOGmj7HVwCvEaTVZG5+b
moyYYmbNmsVWtVrNZHPy5Ml8dxJPnVbTSfv27Ttp0qRzzz135syZulorJb7o
ootqa2tZzOHDh6+66qoVK1ZoM+O5Vsdisfnz5997771NTU0s5oUXXtDOtLZo
0SJa/f3vf893MdVqlr3333+frR44cID5L9dq3i/d/iUfO3asf//+bGK37du3
v/HGGxdccIF2yjLGL3/5S4qhHenfbdu22bw/AAD7QKuBAyzqeDarf5QskZm6
12rrdiuXNefIanVLYneOrOKJBjfciEVHF5svn6R/03PzdFu7c6ovH54eWg28
QpxWd+nSZdy4ccuXL7/22mvPOuusc845h0/DpdXqkydP9unTh02ZtXbt2iuu
uKJDhw46rSaWLl3KxPDll1/WnY41+GZlZT3wwAPLli3r3bu3tjFXXGv1xIkT
KfGMGTN+9atfPfzwwz169Gjbtu2uXbvY1ieffJK2kt6SRxcWFjYn0Gr2B4fB
gweTApOk061gl8+1mqAjU8zMmTP597utL7k5Phl4586d27QyfPhw1giu1Wqy
73bt2lHkqFGjbN4cAEBKQKuBAywqnw5aZHS491brPLipOVu0lEUE42BefDFZ
KLjhOly+fKz/5ub+b3rWr4iUXm7aPyBAq4FXiNPq/Px89iVo9uFp7VDfhQsX
UjyTzea4b/LhyUOHDmWf0OIzgTO2b99OkeStJ06c0J2uqamJpHvIkCHsCAMH
DtS2EbPWWPufjqLE2inRLCgtLZ07d2779u3ZNWZmZn7wwQd8a01Nzfe+9z22
lfWHp1tNy/xbWtrMd+rUiV0d3RnWe5z/CYKgd3u/fv1YC7WdS2bU1tbSedes
WfPiiy/W1dWxAey62devvPJKinzkkUds3hwAQEpAq4EDLCqHLrXaE2+1PogD
raaL0n4uJ5pN1Ryt6EVc8fwBN1yLy5ePnb+5idNq+y8fnUdDq4FXiNNq1kBM
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
r7QxpNX//d//bZr4kUceoQtJekybWk0/JV3RCy+8wGPoaaUySeXN4ozks0uX
LjU9ICtviYSaYV+rrbOXKBt097773e+ef/75tbW1DTa0uqSk5J577iFtZ6td
unR57bXXTDMDrQaRws9OxR6ibp3cGf5PbGUhxTbF06Kzt7PWZB3Wrd4pabX2
UEFpddSmL1P3EYZWAx8Q0Qm8Z8+eAwcO1MZQTVjbCbxPnz4jRoywOIJRq9ev
X08xGzduTLSLJFrN2bNnz2WXXUZbf/7zn7OYpJ3AzzvvvP79+2sPQurBetUm
umqGfa0m9yRJfOWVV4YMGcIj7Qvs8ePHv/Wtb82fP/+DDz74/ve/T45TWVlp
mjIlrXaZq2PHjlGJuvHGG+lnZSPuRWs1WXx1HN1oX2+1mvXx0Eq0EVOtXrx4
cXUr2vLgrVZbZ4+ycc0117zXSmFhIYtnd2/o0KH0JDbY0Gotb7zxRseOHQ8f
PmzcBK0GUUNRrY5UzTaQDxxbaLWdXtzW7cWeaLVFe3qLZf6tEwel1S0RM2to
NQAWiNBqNk52w4YNbJVPFMa1mk30TWWb70IeRA772WefsVXWI5rq3traKcWQ
f5FpshiqXV911VUrVqxgq4FrNRkW+ea9997L5jcjXnjhBdr6ox/9iK0uWrSI
Vn//+9/zo+lON3fuXFp98skn2SodZ/LkycYB40ZsajWZfrt27YqLi8m2Onfu
/OGHH7J4+wL77rvvkkrTiRrivXPpWvhYWh32tdp9rujn6Nq1K2vQpOLRu3dv
0VrdppWzzz5bu8lbrX799dfPOecctkwqOq2VHTt2WJyRfLaNBlJRvslbrbbO
HmWDFLhHK5RPlpLu3ieffJKfn9++ffvt27fb1+r9+/f36tVrzZo1pluh1SBq
QKslJ6hRtxZtzSlptSmeqKtXWq0boB2gVrdEbPoyvHwASIQIrS4oKMjIyKBq
M3n0/fffn52dzT7ZzLWaXjtU0+7QoQN5KNWTZ86cSVszMzO1s3VRAoqkTb/9
7W9ZzA9+8APWrfqBBx5YtmwZ2ZO2/TpwrSYmTpxIqzNmzCARe/jhh+kS2rZt
u2vXLraVfJm29u/fn/JTWFhoPB2JA11Ueno6KcmKFSvY0XJzc5PecJtavXz5
ct73nhbmzZvH4o0CS6VikQFK8Mtf/pJulx0Jsq/V9nPVEG8hNWaMcjVu3Dh+
wEsuuUS0Vv/hD3/4Ig6bxIzjrVazPyWx/gCff/75T3/607Vr11IMOazFGanw
3H777V+0Ul1dzTd5q9XW2bPoBE5aTQt33XUX/WqvvfYa0+pERY5BskyvkWuu
uSZRZqDVIGqgZiszAUqWHa226GLtm1YnOohNrTa6ebBa3eL7fO8BouhlRuTl
A4JFhFYTb7755vjx41m7HokYm2uIJJon+Oijj8ibOnbsSPHknqRU/MtZDCr5
7LNcF110EYtpamqiivqQIUNYM9zAgQO1Lb9XXXUVRZJEaA/C+qnyT1Y1t2q1
dnJvqtuT/7Jlsl3aunDhwkTHZOLwzjvvsNUbbriBeQpbJb+eO3cum32Lrj0z
M/ODDz7g+9bU1JCGs63sI9260zXHK+F5eXmdOnViLaE33ngj3fOkd9umVnfr
1m3AgAGr45At0ikofYOZwNIVvXMm7777bkN8TuaePXvyA3755Zd80GsiO7NW
s5RyRcumGXv99dd79+7NDzh48OBwjK0+fvw4lYRnnnmGx5CQ0q04cuSIxRl9
G1ttnb2kWk27Dxo0iGSZaXWiItcQ7xcxbdq0SZMm4QNbAHBQs5UW/6cp02Ih
zmHS6kTf5wpQq1siM30ZXj4AJEKQVjOoisuV0xSqDB84cKAh8dhhqiprJ9Nm
kIDzecAkhG4RXRT5pulWuhyyA+sjUBpSG9OvdJliR6vpVyaj4UZWVVWVkZHx
5z//uSGV7talpaVdunQh/62urn766afbt29fXFxsmtKmVnuSq8OHD5PfrVu3
jnL1X//1Xz6MrfZHqwky0169euXn59PPSo/qmDFj6LZYn9E3rbbOHmVj4cKF
fCbwo0ePsniu1cTbb7/dJj5tvvVZ6DiU7LPPPmOHMh3OD60GUUPRmi39xxHu
mm3gw2xV6QTuRqtNv88lg1a3BDSg3mfw8gEgEUK1GviDHa2+9957J02apI2Z
N2/eLbfc0qD5IpWdObffeuutoUOHUrJu3brROypRMpta7VWuNm7c2KdPH0o2
YcKE8ePHe6jVOTk5v/71r7Ux1lqt016LDDTb8Fb6Wb///e+fddZZ6enpdHV5
eXm6nBvPeM011/im1RbZo2xoh3jTJhav1Wri9ttvt9bqL7/8ss2ZrFq1ypgM
Wg2ihqI129A3GAU+dZXQKcs8UVfrbCTVat79m46jDTxvbDUoAv+7ig/g5QNA
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
/d3BBaBW2wO1mliN+68b3VNCVymJF4ndi/ngrdhxz09D7jm0w+H+EhKfQa32
B/qnLHMDUU1Z5n6g1SUlJVFNWeYs1GrboFYTG3BPX3BIXDJS1G0DaD2HWX3N
SrPm7xvGcMmNDO6XVpecfEj8EFdanZ+fLx4W7HRBzEep1e6XO59p9b59+0pL
S72i1Sgktdo2qNXEBtym1biIVeqSS65sXWIiHsX08dt8pHUsyJ8mHN97Ljz5
qN7yqCd2Elda7WMKCwtROzA7arXNYOfv378fWg1Rdf+er67XajQVNBg0G6db
rs+hVhMbcNt8vCqBDXlla3NppRXa+aG+wSIF5q3WseCSJu2GMihx4cmHxBXU
an9QXFxcVlbmFa0uCuB02zeHrKysAwcOYOd7TqtRZjQbp1uuz6FWExtwp1ZL
Y5LFE9wewE6T4vDvWLC0W5lmHQvyGWeOl4EnH0IE1Gp/AKcrKSmpqKg4GcDl
flcTwOm2bw6vvfZafn4+Dg337/bqeqcGaCpoMGg2Trdcn0OtJjbg5ivbcNhZ
HoqbMaJ9OLUxaNaGccPvRTz5EKKEWu0PUC+QpvLycq90WIPc3Fynm3+s5OXl
4QiKahpwZ5Fd1WgqeMvD2Wqo1cQG3Hb/oBSlcNhZVPdMm+wt7Jyym2ZtGMdv
subJhxAl1GrfAFcS1eQVs960aVN+fr7TR4BxUHjxFaConhgBrryrGk0FL5xu
s/6HWk1swG3z8cpLfcd7i/hELWPY77nyE93TjL2Cs0PB3abV7jn5kPiEWu0n
ygJA8WBMYlZw4ddKnHa7n4CQfvjhh5999pnTB4ERMjIyUHh8BXfeVa2qdNES
ZMMQ7cTp1hoXUKuJDXhLq+28Amf/lAGc6jtWNhv+DBIVDrZznnwIUUKt9hlw
qKKiotra2oqKCtFt7VpKSkqOHDmCFvjOO+/k5uYiBcX+9ttvnT4mQoOCoXgo
JIqKAqPYKDy+gnyumctBY0CTwFdA88Bbp9tpvECtJjbgtivbuvrrfGevbN3W
j+YJ5K2pTu03Dgg3gINDwd128qFWE2ehVvsPqBN0Dy++/PLL8vJy1JpQbLeB
sqGcx44dy8nJ2b59+xtvvLF169Z9+/YhBepXWFh43AWgGCgMioSCoXgoJIqK
AiMFhRc3s7sZVD0aAMqJxoAmgTLzELYTajWxB3HR6HQpfkLjytaeArjk8UMe
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
6hGNW9uvQ35KCkeAM6IJ3l7tFajVOhHaBd2wX6urqqqEPnfo0AFOWlBQkJmZ
CbFt0aJFg3qMaTV0uH379kjE9lNTU2HTe/bsue+++7p27Sq3rNRqiLCQJpH/
ww8/hAs/8sgj/fv3F5mffvppmdm1Wo1mHE6rratfyT333CO+5pAhQx5//PHc
3NyNGzdef/31InHo0KEy589//nORuHjx4pycHFjwO++8c84558iqkVr9zDPP
iJQRI0YgEeqN4/SVV16BvCOxc+fO3377rdzsggULROapU6du2rQJBZCL5ETl
kPSnnnoKzQNlk7+l4KPRFEVON2t1yPp1Cmq1awnMjzQRouS4rDG8EuFur1ZJ
dER9NnY/ryNYd2+1nu27CtVIg1jkGm+hSBAlx2WN4ZXgOHCvQK3WidSuAwcO
WFER2lOWQawaBNGqVSucrmPRagCxEndYq7j55puDtbou8J9FdEwHs3LlSmVO
d2o1/BSVqKHVFtWvEim2Krp3756RkSGz7dy5U3RYqxC3OTdQaDXKP3LkSJkB
FSr6xEHLli3/9a9/KT/9gw8+UG6tf//+yqW//e1vQ5atZ8+eyu5112p1uPp1
Cmq1a+EIcIaBSEkZPmbMmIgS7c6uZ2NYqtV1UT6lyyVE5dRKuRZ+jb/nnz+G
I8AZUUVi4g+tyOm2TyJArdaJ1dpVVlYmPOXxxx8PmeFvf/tbjx49pOYMHz58
27ZtMNkGgTmpZHekULaQc02LYcbwI1X6Sy+9JLubxbpPPvnkiRMnxNv09HRV
/h07dowfP16KW4PAsOGHH35YlS1cSeTI5OPHjyvTIUQiHeXR3FUxgepzXKtR
WXfddZdySEDnzp0vu+wyuKoq55YtW1DRckB+u3bt0Aw+/vhj8RaCrNomKldu
E5kvuuiiffv2BRfgxRdflHflDxgwQLnom2++WbZsGcojt9OkSZPf/OY3qt2i
0VxFGdDYVOmzZs1C+qBBg6LdXVERrn6dglrtWgJCdCG1mhFVpKVN79evJ8xa
Q6KdbtomE/EBW3qMGKuH64/2nFZrzFemE7SfpKSU1NRMx02N4aHgOHBPQK3W
Ca7S8d0hm3l5ebJr2H6Kioo+//xzSI25m/3+++8LCgrQGPLz8/FazypVVVU4
ulGYwsJCnas4znfffZebm4tKRFUGa7XN9QsRxt7GPlf9vBAMyrZ79+5Dhw4p
x3KHA/WyZ8+ew4cPR6yU6upqGOhXX32lUbb9+/djt0T8UJegUb9OQa12LYHL
W95YzYgu1q9fMnbs+XPmzPGrRAej8XBqnXOOac9s5uDEZcaIyqBDDvtP4Y3V
jOhDaLWxh6QT26BW60RqF+zGQ6JBlKASYc3aWs369S4a9esU1Gp3whurGcbC
qadXO0i4Wcv0TwOucQO13Ij7760WhOuq1j/sH4t4YzXDQCxe/P94e7X7oVbr
RGjXyZMn8/PzTe8sJvaAikP1oRLDaTXr19No1K9TUKvdCW+sZhiOlJThKXF2
h2Nwh7U0ZVUvM96K52eperflE7WU+aVTe6WrGkYc+13zfLQWw1ikpmby9mr3
Q63WCa7Sa2trq6qqiouLjxw54nS9ESOg4lB9qERUZbBWs369jkb9OgW12p1Q
qxmGI/anV3sOKdFCrkM6skCacnAvtlxLercLn65lA7ByajXDWPD2avdDrdaP
fLTxgQMH8NrpqiPRgRrMycnReKgx69fTRKxfR6BWu5PAsM0LMzPTHXc0N8SK
FVeMHTtYxNatqxwvj8sjDrVaoFTmcF3MEPCQvdUht4A8Xhn7bSK8sVrEwoVb
+/UbK8OUbV588QrTt+mqoFa7H2q1foR2VVZWHjt27ODBg05XHYkOVBkqDtWn
rdWsX48SsX4dgVrtTjhfmTJg03Lmfyi24+VxeaxfvyTebq82nQ8/dLoEzkGt
FgGtVj7E05RtQqtN36arYs6cH+4g4KxlboZaHRW1tbXV1dXl5eW4hj969KjT
tUf0gspClaHiUH2oRNavz9BZv/ZDrXYhnK9MFdTqqCIOZy0jZsH5ymRQqw1E
amomZy1zOdTqqJATWxUXF2dlZeXn5ztdgSQyx44dQ2WhyiJOZsX69SL669d+
qNUuhDdWq4JaHVUEtDruZi0jpsD5ymRQqw0Etdr9UKujRQwVPnHiRFFRUXZ2
9r59+6qrq52uRhIaVA0qCNWEykKV6RkezPr1EAbq12ao1S6EWq0KanW0Qa0m
xqBWy6BWGwtOBu5yqNUGkOZVXFycm5uLfYhr++PHjyPxu+++c7pK4x1UASoC
1YFKQdUcPHgQ1RSVc7F+3Uzs9Wsn1GoXcvvtt1OrlUGtjjbidtYyEiM4+SQl
paSmZjpuZ44HtdpYcNYyl0OtNkZtba0YLVxeXl5QUIBr+7179+7YsePTTz/9
+OOPt27d+kGA9wO8RyxD7GGxt7HbsfNRBagIVAcqBVWDChJjg6O65Zb16xIs
ql/boFa7kIBWcxrwn4JaHW1Qq4kxxHxl1OqHqNVGg1rtcqjVhhH34VZVVVVW
VuLavqSk5Pjx4/n5+UcCHD58+FA9ecQy5E7GDhd7HlWAikB1oFJQNaggY/fb
sn7dgHX1aw/UahfCacBVQa2ONgKTgY/jfLwkWjgNuAxqtbGAVnMycDdDrY6R
/wSoqanB5f3JkydxnV9Rz/9HbETudlQBKgLVgUoRtcP69QEW1a/VUKtdCLVa
FdTqaIPP2CLGwKnHl89TNhDUamPBZ2y5HGq1KYgxw8RVmDgqmPXrQtw56lsF
tdptxO3TtbZuXSVDtciwViu3GbxZHwefsUUMEIdP14I7K0O1yJgCh9vgQ/Gh
1ZwM3OVQqwkhxCKo1W5DaPXChZc4rmb2BGxXac1KfZYiHK1Wi22G3Gyc9HdT
q4kBhFaPHr3QcTWzOiC8/fqNRQSfH2C+Mk9UCiy2GfKcI7dJrSaOQ60mhBCL
oFa7jfjprQ4n1MEKHJVWR9xmPMg1tZoYIE6erqVy25CIvmb9Chxxm8KsqdXE
cajVhBBiEdRqtyEeWr1mzQLH1czSgFPrkV/hvzq1Wo+nq7bs+H6wLvjoahIt
QqtnzlzjuJpZF3qcWqBfgcN1UqtAtnjQ6of46Gp3Q60mhBCLoFa7DaHV/n5o
dUinhhGLO6Bhu4hwl6YaLqyxzXCb9bFZU6tJtPi+tzrYqYXqir5pvNAQ5Ki2
Ke+t1rZ4x3eIRUGtdjPUakIIsQhqtduIh95qld5CfvVk0xbh4G2GnKMseJt+
ncqMWk2ixd+91cGGK2951s6mocDBmYOnKYt2mz4IarWboVYTQohFUKvdhu97
q1Viq91fHDyoO2R+nZ4uQtVXrp3Zu0GtJtHi795qlduGdGoRqruqNRRYj1OH
/HRqNXEKajUhhFgEtdptxJtWR8xvQKsjblNl647vEysiLW16SsrEL774wukW
TTzD7bffnpSUkpqa6biXmR4qU9ZwahHBFhwxT8RtBo8wd3y3WBTUajdDrSaE
EIugVrsN32t1REdWhZ7e7Wi3qeqw9uU4cGo1iRYfa7WBucKi1eqIGwzuBHd8
t1gU1Go3Q60mhBCLoFa7DVzZpqRcmJmZ7riXWREqR9bjsyoFDrZmA9sUa4mp
zBzfJxbFtGkju3TpxKOb6MfHWq3sKcbraFcJqcDKpRG7qnVu0x/Rpk0X4HRz
JqGhVhNCiEVQq91GXGm1zrW0H7BlbJu+D2o1iRYfa7UBBdZ+brVqqcZd1cqI
kwdsUavdDLWaEEIsglrtNvyt1UpB1j9XmLZWG9um74ODwEm0+FWrjSmwtlYb
E2TtbfomOAjczVCrCXEDX9ZTW1v7nwDVCkQKFslsTpeX6IJa7Tb8fW+1MQVW
9kdTq3UGtZpEC7VaFdRqYwGtHjZsmNPNmYSGWk2I4yiFuqqqqqKioqysrKSk
pCgAXuAtErFIKddOl5pEhlrtKuDU5/xAH79qtfKSUs/cYiKo1QaCD9gi0UKt
VgW12lhAq7t06YJ/Z063aBICajUhziKdurq6Gu4MiS4tLcWxhsRvA+AF3iIR
i5AB2WjWXoFa7RK++OKLhQsX9uvXr127doMG9aRWK4NabSCo1SRa/Prcavdo
tfY2fRNCq1MCUK7dBrWaEAeRTl1VVSV6qE+ePBnuaMUi0XONzF4x6wMHDmzc
uDEjI0P/qaO4uHjLli3Z2dnu/3YRoVY7DoR6zpw5XQKcddZZMOthwwbEg1Zz
ELilQa0m0UKtVoXpWh0/vdVCqIVZ33777bwbxT1QqwlxENlPLZwar7UPWGQQ
Zi37rJ3+BmGB+0+bNk3+gxswYADONtqr7N69+9xzz23YsKFcRc/Zyc1Qqx1E
9lALpx42bBiuQMaMGcN7q1VBrTYQ1GoSLdRqVVCrjYWcsgz/41LqYbe1S6BW
E+IUoru5pqYGR5YepxYIs8YqWNHcDuu39PF2gIhbS01Nxf+1wYMHr1q1asqU
KY0aNUpMTIRrh8u/Z8+eTp06YZWZM2emp6f//ve/b9q0aZMmTeDaZn1B+6FW
2w+uNMTP+DDoLvUEbPoHsHTMmJ+npU133MusCKtnAm+g+wFb/n5odR21mkQP
Tj7jx6ckJ6c57mXmhhVazQdshYvU1MykpB96qGW7kt3WNGs3QK0mxCnk8O/C
wkKNsd/BIDNWkUPBzSqPiVq9bds2eHSvXr1QVJGyYMEC/JuDa4db5Q9/+AMy
rFy5Uqa8+OKLSJkwYYIZX84ZqNV2gqvWwPOzfmDYsGFCqPv166f8PT/w8/5E
v2o1TFZ5ValTbJWrRHxutc5tKmXcf36dmZmeknKh8sqWkIj4VasfOlWQ+/Ub
q2eViApMrQ4ZwVpdpzBr8dOxUy2c1FGrTeWZZ54ZN27caaed1rt371WrVhUV
FSUkJNxyyy1Ol4u4FNFVXV5ejqYS7ZGLVbCi6LA2qzzBBl1VT/Ai7U0tW7YM
/9SeeuopmXL8+PFWrVoNGjQo3CoDBw5s1qzZiRMnlIl9+/bFdvLz82P8ak5B
rbYHpVCPGTNGNfBb+Us+tVp7lWCttkLVvR7UamIAH2s1VDpan42owMpt6lT1
Bqfi+G6xIubM+eFWgpAnH/lPkN3WDkKtNotbb70VR3Hr1q2Tk5O7du2K15Mm
TcJf+LV1HwqlKikpOXr06OF6DhGPkBfg4MGDu3fvLigoiPbIxSpYEauL7Wh/
lmweaCpoMOFM3EStnjVrFhp/dna2MhGO07x589ra2pCrdOzYsV27dqqyiX+O
H374YRRHhZugVluK0qalU8tOajnwW3WZEUgY7riaWRTRjgNXdUaHVOAYt+n4
PjE91q9fErhDn9euJAqEVicmpjiuZqaHasw2lDniKhEVONpx4CpP97dWhzv5
cEC441CrTWHLli04hBMSEqA5eFtdXS2GvILNmzdb97lQpMOnYo8SktiBC+fm
5ubk5GRkZFRWVkZ75GIVrIjVsRH9Wi0oLS0N2ZyU1vxOAMNanZSU1LBhQxwI
ysSpU6fiiECZQ65y6aWXqo4XfDVxEK1bty7KI8MtUKstIlioVU6tWqRc199a
HbH3WRkq/w2XX496KyOqzF4MajUxBk49vtTqh4I6rLUtWKcCKzNE7LBuEITj
+8SK0NbqOpq101CrTWHUqFE4hJV7cu/evUiBWZSXl1v3ucp+amq1txBd1dnZ
2Tt27Pj666+jPXKxClbE6qLDWvuzVI0EzSZkczJRq7t163bGGWeoEufPn4+D
4v333w+5ynPPPYelWOuf//wnvtRrr73Wp08f8c8xPT3dwNHhBqjV1qG8m0zb
qVVXFwEfvzAzM91xO7MoVJOMhRNblYBrZ9a5zahyejeo1cQYOPkkJaWkpmY6
bmemh6pzWcOsg506nAKrcmqYtUrqfazVyclp48dHUGaatYNQq2Onurq6cePG
w4cPVybW1tY2bdo0ISHB0o+mVnsXqdXbt283ptVY0QqtroqEHq2+4IIL8E9N
Ne/3lClTkChGdIRk5cqVyv+J3bt3F/OYQfANHB1ugFptNapJv5U3U4e7rvC9
Vgf7MtxWqbfIoJLfiBYccZshN+tLp0akpU1PSZnIqYFItPhYqx8K5cuq0eAQ
7ZD+q6HAwfmDtxlygxrb9HQIrY548qFZOwW1Onb27NmD4/fqq69WJubk5CBx
9uzZykQIxaJFi4YMGdKqVauRI0fec889+peGhIPAvYuyt9rYIHDDvdXag8BN
0eqrrroK7T8rK0uZOHTo0JYtW2rPsbZ3796///3vCxcuXL16Ncp53XXXYTu5
ubkRjwV3Qq22AVyp6nfquh+vN3z76GoRwaO7NdB+brWxbTbw9UOu+XQtYgx/
a/VDYXqiQ6J/1u5wJh6MgZnTPBeJiaHnKwtGPtWaZm0n1OrYwQ7E8Tt9+nRl
onhor3LwanFxcUJCAhL79u07YcIEuDNez5s3T8/ScHDKMu8i763GMXjkyJFo
j1ysghWjvbdaz5Rlpmj18uXL0YAfe+wxmYKPbtGixZAhQ8Ktkp2djW+kLBs+
q0+fPqeddpr2Z7kZarXViCuHMWPGBDt1OPHx92TgMnRa8Natq3Rqtf5tRtyO
14NaTYwBwRk1yp+TgcvQY9aix1m/Auvcpqrn2vFdYUVAq/WffGjW9kOtjp3q
6urmzZt36dKloKBApGzZskV48bZt22S22bNnI2XRokXibVlZWe/evRs2bChm
S9ZeSnwJFBLmWFxcbEyrsSJWd+cDtjIyMpo0adKjRw/53Oprr70WLXzZsmUy
D04+L730kpwYXBwCTzzxhMxw9913I2X+/PlmfUH7oVZbjbxmCJ7BLNwwuTjR
ahEaIjx27GDxtCz9Wh1xm8rN+jXi+elaW7f+GDFuYfnymDbiXXz8jC1lwHA1
upjlKO6oFFjDrPFZ4j5u32t1yIdWR2xy4qEYNGt7oFabwrx583AIDxgwYMmS
JbNmzWrWrBnewrWVMyFDkzt06FBTUyNT9u7d+/zzz4sBrtpLiS8Rz63GYZWX
l1daWqr/sEVmrIIVXfvcarB06VIcBYmJiStXrpwyZUrDhg3POecceURAt9u1
a4cML7/8skhBg2/atGnjxo3/+Mc/PvDAA2PHjsUq/fv3r6ioMOsL2g+12lKE
SiseSB1h+LfE35OBB4e4DxrCKwLaqzJfkRKcHnGbys3itb+FWsSaNQvicL6y
Dz+sGzsWHvRTrFgR6xYMbMTr+PgZW8EByYULC8UWoZrEDG9l6NymaoOihzrG
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
7Pl3L8aBw54cNziGC4Nd1cQ6OA6coRFWd1XLRshx4GZBrSZe58t6amtr/xOg
WoFIwSKZzenykjiCWh0j9mi1GAfOicsYwcGuamIpHAfOCBf2dFXXcRy4qVCr
iadRCnVVVVVFRUVZWVlJSUlRALzAWyRikVKunS41iReo1bEgRoDb87+eE5cx
QkacT1ZGbIAd1oyQYfVkZRJqtYlQq4l3kU5dXV0Nd4ZEl5aWopUi8dsAeIG3
SMQiZEA2mjWxE2p1LNhzY7WAE5cxgiPQVc0R4MRa2GHNCA7RVW3byYe3V5sF
tZp4FOnUVVVVoof65MmT4do5Fomea2SmWdvJgQMHNm7cmJGREZ+nDmp1LNh8
w1fgsoId1oyfgiPAiT3g1MMOa4YybBsBLuDt1WZBrSYeRfZTC6fGa+2mjgzC
rGWftdPfwOdUVVVNmzatQT0DBgzA2UZ7lY4dOzYI4rHHHrOlvJZArY4Fm38/
D3SOs8Oa8WPwuVrENnDyYYc1Q4YNz9VSQa02C2o18SKiu7mmpgZtUo9TC4RZ
YxWsyA7rYN7Sx9sBIm4tNTUVUjx48OBVq1ZNmTKlUaNGiYmJcO1w+VEpyD9w
4MCrT+Xdd9819VvaCrXaMDY8sToYdlgzZLCrmtiGfNIWO6wZD9neVV3H26vN
g1pNvIgc/l1YWKgx9jsYZMYqcii409/DXZio1du2bYNH9+rVCztcpCxYsADW
DNcOt8rhw4eRYenSpSZ+I8ehVhvGzhurT/1Qdlgzfgh2VRM7gdHApNhhzbC/
q7qOWm0e1GqzeOaZZ8aNG3faaaf17t171apVRUVFCQkJt9xyi9Pl8ieiq7q8
vBz7Odo2j1Wwouiwdvp7uItgg66qJ3iR9qaWLVsGR37qqadkyvHjx1u1ajVo
0KBwq2zfvh2rrF692rTv4wKo1YZxRKvr2GHNCAS7qonNsMOaIcL+rmoBZy0z
BWq1Kdx6660wgtatWycnJ3ft2hWvJ02ahL/wa2MbrKiouOmmm5599lntbBDD
kpKSo0ePHq7nUByQF+DgwYO7d+8uKCiIts1jFayI1cV2nP42diCbB5oKGky4
3xNM1OpZs2ah/WdnZysThw0b1rx589ra2pCrvP7661jlxRdfhIzPnz9/6dKl
7733ntdPONRqwzil1eywZnACcOII7LBmONJVLaBWmwK1Ona2bNkCHUhISICp
4W11dbUY7wo2b95sbJv5+flYfebMmdrZoEiHT8VpgbMDuHBubm5OTk5GRkZl
ZWW0bR6rYEWsjo3Em1YLSktLQzYnpTW/E8CwViclJTVs2BDHgjJx6tSpaNXY
8yFXWbt2LZaeddZZyvnKZsyYEU7DPQG12jBOaXUdO6zjPthVTZyCU4LHeTjV
VV1HrTYJanXsjBo1Ctf/yt24d+9epEArysvLjW1Tp1Yr+6njSqsPHjyYnZ29
Y8eOr7/+Oto2j1WwIlYXHdZOfxs7UDUSNJuQzclEre7WrdsZZ5yhSpw/fz5a
9fvvvx9ylbvvvltMGL5p0yYcOB988MGQIUOQkpaWpv1ZboZabRgHJyZlh3U8
B7uqiYNwSvB4DpufVa2Ck4GbArU6Rqqrqxs3bjx8+HBlYm1tbdOmTRMSEgxv
llqtgdTq7du3G9NqrEitDkY18DscerT6ggsuQANWzfs9ZcoUJIpBHSE/fcmS
Jcqlx44da9as2eDBg7U/y81Qqw3j7L/4wKdfCMNy3PIYNkfAqdlVTRwDJx92
WMdnJCamONVVXef0/1zfQK2OkT179sAUrr76amViTk4OEmfPnq1MhC8sWrRo
yJAhrVq1Gjly5D333KNcmpGRMXfu3K5du3bs2PGKK67YuXMnB4GHQ9lbbWwQ
eJz3VmsPAjdFq6+66io04KysLGXi0KFDW7ZsGdVMcT//+c8bNmxYVlamfxVX
Qa02jLP/4gPTB02EYTlueQw7Qwz/Zlc1cRCcfMaP/2HuMsctj2FniK5qB+fi
plabArU6RrD3oA/Tp09XJoon9qanp8uU4uLihIQEJPbt23fChAkwa7yeN2+e
WHr06NHu3bsjpX///mKpuMM0olbH7ZRl4t5qtN4jR45E2+axClaMz3ur9UxZ
ZopWL1++HA34sccekyn46BYtWgwZMiTcKg888MD8+fMrKiqUiQMHDmzbtq13
b6+mVhvG8fu8AtcY49hhHVchhn+zq5o4i+iwhmc57noM20LMVObgyYdabQrU
6hiprq5u3rx5ly5dCgoKRMqWLVuENW/btk1mmz17NlIWLVok3paVlfXu3bth
w4ZiquQZM2Zg6ZIlS8TS/Pz8bt266dHquAViCL8rLi42ptVYEavzAVsqTJwJ
PCMjo0mTJj169JDPrb722mvRpJctWybz4OTz0ksvSWUWJn7//fcry4OUiy++
2Owvah/UasM4rtXieTecuyx+gjOVEZfAh23FWzg4U5nEwWlC/QS1OnbmzZsn
plqCF8+aNatZs2Z4C9dWToMMie7QoUNNTY1M2bt37/PPP5+bm4vXPXv27NSp
k3LfPvHEE9RqDcRzq9Eg8/LySktL9Td4ZMYqWJHPrQ7GRK0GS5cuRRtOTExc
uXLllClTGjZseM4558iDArrdrl07ZHj55ZdFyoEDB9q3b4+UuXPn/uMf/1i4
cGHLli1btGixadMmC7+zxVCrDSO02tlfzjl3WfxEwKkv5PBv4hI4d1n8BJw6
Kcn5Wbip1aZArY4dmMIVV1wBBYARdO7cefXq1TDrESNGyAxFRUVYNHbs2JCr
h1yKeqFWawAjrq2thZoVFhbm5uaiCvS0dmRDZqyCFbE6tVqFuVqNvT1t2jT5
qKwBAwagVSsz4Bhp06bNZ599JlPgUGL2b0GfPn02btxo+te0E2q1YVwyII1z
l8VJcKYy4jY4FDxOIjExZfx4533WJf9zvQ612iwqKyvFJMaffvopjGDBggVy
kZjWe/z48SFXPHz4MJZOnDhRmbhv3z5qtTaywxo7EHse6qfd1JEB2ZCZXdXh
MFerBTk5OVDjnTt3KodqCFAFqgdbC44dO7Z58+ZDhw7F+n1cALXaMC75F18/
FHw4h4L7ODj8m7gQOXcZh4L7ONww/Fvgkv+5XodabToPP/wwjHjdunXKxDPP
PLN79+7KlBMnThw5ckRoRceOHXv27Klc+sILL1CrtYGUoTXC+MrKynJzc/fv
319YWBiunWMRMiAbMmMVrEitDibYnTVwurDegFptGPf8i+dQcH8Hh38T14KT
D5yLQ8H9Gi4Z/i1wz/9cT0OtNh0xO1lmZqYy8dJLL0Xigw8+KN7W1taOHj0a
KWLnJycn4/WaNWvE0pMnT5577rnU6ohIsy4vLz98+DD2eVZW1tGjR0+cOPG/
AHiBt0jEImRANjq1BtRq06FWG8ZV93lxVnAfR2D490SXtDRCVHAouF8jNTXT
JcO/BY5PE+oPqNWmk5eXt3v3bpW4ZWdnd+7cuUmTJpdddllaWtrIkSNhzWPG
jBFLMzIyWrVq1axZM3j0zTffPGTIEDGbE7U6ItKs0TiLiopyc3Mh0bt27doZ
AC/wFolYhAx0amIz1GrDuEqrOSu4XyMtbTqHfxM3I04+MGsOBfdZJCenuWT4
t4BabQrUatvAfk5OThYzm7Vu3frKK6/E/pRLN2zYcP755zds2BBLhw4dunHj
RryYNWuWgwX2CsKsa2pqTp48iV1aWloKiT4eAC/wFolYhAx0amIz1GrDuEqr
6+qHgvMmaz+FuKWaV5LE5YhZwfv1G0uz9k2IW6pvv/12pxvXT1CrTYFabTNi
4qxwcgcNzM/Pt7lI/qC2tlbIdXV19UkFeCuEWj4fmRDboFYbRvTRuOqqQwwF
503W/oiAUw/nvYTEE+Dkw5usfRPylmr3nHxwoeK2f7gehVpNfIbwawltmjgI
tdowLtTqOt5k7ZfIzEznLdXEW/Ama3+E226pFrhteJh3oVYTQohFUKtjwYVj
0uRN1jRrTwefUk08h7zJmmbt6YBTu+qWagG12iyo1YQQYhHU6lhw5/M++CRr
r4eYpsxtAyEIiYi4yZpPsvZuiGnKXHjyced/Wy9CrSaEEIugVseC+Efvwt/P
OX2Zd4PTlBFPQ7P2bohpytx58nHh2DCPQq0mhBCLoFbHgjtvrxbQrL0YAae+
kJ0yxNPg5AM7g1k77okM/eHCacokbv5X6zmo1YQQYhHU6lhw+f96TgzurZBO
7cLxD4REBScG91a42anreGO1qVCrCSHEIqjVMSJGprnzUqSOZu2dkI/T4qUj
8Qc0a6+EdGrXnnyo1SZCrSaEEIugVseI++dRoVm7P+qdmo/TIr6CZu3+gFMn
JrraqcGYMWNc/n/WQ1CrCSHEIqjVMeLyceACmrWbg05NfAxOjzRr14Zwarc9
olpF/bMtOF+ZOVCrCSHEIqjVseOJ//g0a3cGnZr4G+FENGsXhiecuo4jwM2G
Wk0IIRZBrY4d948DF9Cs3RZ0ahIP0KxdGOJ+avc7dZ3rJzDxHNRq4nW+rKe2
tvY/AaoViBQsktmcLi+JI6jVseOJceACYdZ86pYbon7ebzo1iQvEfdajRy90
3CgZ7p+jTMIR4KZDrSaeRinUVVVVFRUVZWVlJSUlRQHwAm+RiEVKuXa61CRe
oFabgof+79Os3RB8lhaJQ4RZJyampKZmOq6WcRsecuo6jgC3AGo18S7Sqaur
q+HOkOjS0lK0UiR+GwAv8BaJWIQMyEazJnZCrTYFr4wDFwQuVH4wa8id44IZ
h7Fw4SV0ahKfoM0Ls4bcOS6YcRjJyWnY/x76b8UR4KZDrSYeRTp1VVWV6KE+
efJkuHaORaLnGplp1nZy4MCBjRs3ZmRkxOepg1ptCh4aBy4ImPVEmrXNkZmZ
npY2PfCbBi8USZyCk8/48TRruyM1NdNzTs0R4FZArSYeRfZTC6fGa+2mjgzC
rGWftdPfwOdUVVVNmzatQT0DBgzA2UZ7lY4dOzYI4rHHHrOlvJZArTYLz/2o
LgbXpaRcSLO2zakDE5SNu/322z3UTggxHXHySUqiWdvn1ImJP8wa56Hffus4
AtwaqNXEi4ju5pqaGrRJPU4tEGaNVbAiO6yDeUsfbweIuLXU1FRI8eDBg1et
WjVlypRGjRolJibCtcPlR6Ug/8CBA68+lXfffdfUb2kr1GqzEOPAvXjRIqYH
563Wloac9NtbLYQQixAnH04PbkN45UFawbizq3rr1rqxY+saNPgxli/XuyLW
ihjYuNVQq4kXkcO/CwsLNcZ+B4PMWEUOBXf6e7gLE7V627Zt8OhevXphh4uU
BQsWwJrh2uFWOXz4MDIsXbrUxG/kONRqs5DD1bzVEYnSyknM1qxZ4Lh++jIC
A795MzUhpyBOPrzV2tJITk7z0ARlStzZVb1ixU9CrZRrPTosM2sEtdpDPPPM
M+PGjTvttNN69+69atWqoqKihISEW265xely+RPRVV1eXo79HG2bxypYUXRY
O/093EWwQVfVE7xIe1PLli2DIz/11FMy5fjx461atRo0aFC4VbZv345VVq9e
bdr3cQHUahMRHdZuuwzQQ/2t1hwQbnLIgd+e+72FEHvgrdYWhRz47dGTjwu7
qqVT44VEyrWe1cNF8Gatg1ptCrfeeiuMoHXr1snJyV27dsXrSZMm4S/82tLP
hRiWlJQcPXr0cD2H4oC8AAcPHty9e3dBQUG0bR6rYEWsLrbj9LexA9k80FTQ
YML9nmCiVs+aNQvtPzs7W5k4bNiw5s2b19bWhlzl9ddfxyovvvgiZHz+/PlL
ly597733vH7CoVabiKfnV5EDwjmPmVkhn0zNgd+EaCAHhFOuzQrxFK3x4z12
X5LEzV3VwfIrzNqwFEuttgdqdexs2bIFOpCQkABTw9vq6mox3hVs3rw53FoV
FRU33XTTs88+G8tHQ5EOn4rTAmcHcOHc3NycnJyMjIzKyspo2zxWwYpYHRuJ
N60WlJaWhmxOSmt+J4BhrU5KSmrYsCGOBWXi1KlTcVBgz4dcZe3atVh61lln
KecrmzFjRjgN9wTUanPxboe1QA4Ip1nHEvUzfnPgNyG64IBws0I547d3Tz7i
B2q3lT/cOG2kiDHhBrC5q7qOWm0Go0aNwvW/cjfu3bsXKdCK8vLycGvl5+cj
z8yZM2P5aGU/dVxp9cGDB7Ozs3fs2PH1119H2+axClbE6qLD2ulvYweqRoJm
E7I5majV3bp1O+OMM1SJ8+fPR5t///33Q65y9913iwnDN23ahAPngw8+GDJk
CFLS0tIMHBougVptLp570lYw7LaOMZSzk3lx7CUhTsFu6xhD2Unt3ZOPm7uq
Q/YpC6021t1ss1PXUatjprq6unHjxsOHD1cm1tbWNm3aNCEhQWNFarVhpFZv
377dmFZjRWp1MKqB3+HQo9UXXHABmrdq3u8pU6YgUQzqCPnpS5YsUS49duxY
s2bNBg8eHOVh4SJs1mr891m+/KeIcQvuBNczY8aMcdslQVQo5zGjWesP5Z3U
nm4AhDgFu62NhfJOaq+ffNzZVS20OlyXtLEJx2we/i2gVsfInj17YApXX321
MjEnJweJs2fP1ljRFK2O20Hgsrfa2CDwOO+t1h4EbopWX3XVVWjeWVlZysSh
Q4e2bNkyqpnifv7znzds2LCsrEz/Kq7CTq1WTqFpYN5L+YOwMuz8jVcnnr7D
Wgm7raMS6vpR3+ykJiRWZLd1v35jKdcRhVpM9+31TmqBO7uq66zRakcuY6jV
MYK9B32YPn26MlE8sTc9PV2ZmJGRMXfu3K5du3bs2PGKK67YuXOnSqtheYsW
LRoyZEirVq1Gjhx5zz33RPz0uJ2yTNxbjdZ75MiRaNs8VsGK8XlvtZ4py0zR
6uXLl6N5P/bYYzIFH92iRQs073CrPPDAA/Pnz6+oqFAmDhw4sG3btt69vdo2
rZZOLZ7MqFRsA6srt2DshiZL8eIzrMNBudYn1JzumxCT4ZhwPUItnkntm5OP
a59TKeYl09bqqATZka7qOmp1zFRXVzdv3rxLly4FBQUiZcuWLfBiOMW2bdtk
NjhF9+7dkdi/f/8JEyYgg5iaSWp1cXFxQkICUvr27Ssy4PW8efMc+EpeAGII
v8NOM6bVWBGr8wFbKkycCTwjI6NJkyY9evSQz62+9tpr0aSXLVsm8+Dk89JL
L0llFiZ+//33K8uDlIsvvtjsL2of9mh1uEk5tP9PKQm5uuy/tuFRj1Hh0WdY
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
oKFDh5577rm299lnn+3bt++CBQtsiY72zzrrrHAaGU6sfvPNN9Vg/a1b+qsz
ZcaXX35ZbTO9l1122YEHHuisoMj2ySefNHCrwqfWqs2h69RnFsKM1e+++65W
n/42wG7ByePxLF682L5T+8orr9Sm7qygHcjatWsbuFWRVdtY/dVXX2VkZBCr
AQAAYBCrQ5s9e7ayjAL1ddddN3LkyMaNG3fu3Lm0tHTv/lh92GGHNW/efNiw
YQMGDGjko9zqN7piyKhRowYOHKjujh07pqenm6Hjxo3TBAsLC02v6qjCxIkT
Ta/yu3oV6MJpZ/1jdeCl4yEuJq/bICMwVtdtUrW61t2vcnXjBi0PEatDLO3w
RSRW//zzzzWW1HOQERir6zapGj8o/Jp+FWpbv+qXsTqchhGrAQAA4ESsDk0H
2wcccEBubq7pfeSRR44//viVK1fu3R+rlYvffvttM/Tpp592Xha+ZcuWJk2a
dOjQwbzldq/vfLQqnHbaaab3ySefVK8ZXYlY8a1Zs2YHH3ywWcgLFy7U0Oef
fz6cdtYYq6dNm9a5c2dNUH979eq1detWFZ5zzjlKSXfeeWenTp1OPvlkU3P9
+vVjx4495JBDDjrooDPOOGP16tWm/Ouvv9aIc+bMufDCC9u2basKV199dVFR
kf2ItWvXKp60bt360EMPveCCCzTXplyLRSNqGap70KBBbdq0UTNUcv7555sK
48ePd+bWDRs2XH755V26dNF09FmfffaZHWQaPHPmzCOPPLJ58+ZDhw5NTU2t
Lq6ayg888IAmpQbffPPNhYWF11133cE+kyZNKikpMTWLi4tvueWWnj17al0f
d9xxs2bNMuUffPCB2qnWtmrVSh2m3CwHdY8ePbpFixaPP/64cxby8vIGDhyo
QXZFaHsYMGBATk5OfWL1jBkzunbtqpbob+/evXft2qVCLUDNzn333acZ1EZl
am7fvv3cc8/VotNyPvPMMzdu3GjKd+zYoREXLFig9rRr104VbrjhBqVC+xGb
N28eNWqUVrq22EsuuaSgoMCUP/fccxpRs6PulJQULUlt8yrRqjEVLrroIi1n
O53MzMyrrrqqW7du7du312dpD2MHmQb/5S9/Ofroo7XoTj/9dG2HIeZ67ty5
2iz1pRgyZMiaNWu0YB9++GHnpPzm/c0331QLtWEcfvjh1157rdfrdc67vlCa
Za16jfKb3/xG3xf7QSZWz58/v0+fPi1bthw5cqS+vCEaRqwGAACAE7E6NB3P
K8u8/PLLgcfPJlYrMdkSj8ejxNGvXz/Tq0SsCsrOzrF09K7DfoUpdW/atEkV
FHjVbc5Fqlt/FSRVcv3116tbnxJOO2uM1a+//rrijyaov3fffbdymQr79u2r
wKigoUj46KOPqkQxWWlIkVm5Q+FIHYpgmrgGKcBqdKUqJZ1bb71VyUi9SiJm
+pp3JbLu3bsr+CiiKpsoQZtBf/jDH1RT0Ubd999/vz5US0lt+Otf/2oqHH/8
8UpYpnvnzp1HHXWUJjVlyhQlo/Y+yoZmqMZVWlS0VEY2Fw+MGzeuurhqKiuA
33777SeddJLaoGyliWshDx8+3CxtU3Py5MnqnTBhwu9+9zuNpe5XX3210vcL
g9qprN2/f391rFy50i6H1q1bH3vssVpHy5Yt85uFP/3pT6qgv+rWdNT9xz/+
sbpGhhmr33nnnUmTJmlS+vvAAw9oRavwuOOOUzO0jpRqtTCrfO9+6tixoyKz
VoHapg6tXKU/DVKA1ehamwqh06dPP+aYY9T7yiuvmOmrGVpWPXr0ULPvuOMO
bRXKp2bQ448/rprFxcXqfuSRR/ShTZo0URvmzJljKmiTViw13doIe/XqpUld
c801N954Y0efrKwsM1Tjavs57LDDtORHjx6t6YwfP766WX7xxRf1uVodd955
p0K05kWrW+vdTspv3t9//33VHzx48IwZM8477zxV1rIylc28d+jQwax9rWgN
HTNmzE8//WQqqP3a5Dp37qwNQJ/VtGlTbck//vhjdW0jVgMAAMCJWB2aArWO
wHVM3qVLl0svvVQpqaKiwgwysfriiy921j/88MOV40y3IoAqfPTRR84Kv/71
r1W4Zs0a09uzZ08lPnXcdtttSkCFhYXNmjW77777VKJAMXDgwDDbWbeLwPUR
+jhtA7Zkw4YNSlVqs+mdNWuWfdqYiZPK1KWlperVxyl82TPOZuILFiywvZqO
OZftjNWVwS4Cd2ZSjaXKixcvNr1ffPFF8+bNteSdDU5LSzO9l1xySYsWLap7
xrgq64O2bdum7pKSEkUwVTZPbNMsKNydeuqppua99947e/Zs060MqFSlsGan
43cRuF0OWgJBZ0FbiLoVLdVOfYpqhr5WvM4XgStaauFoBm2J5u6ee+7R1mV6
582bZ582ZqKlZtmkxe+//16x1J5xNhN/4403bK+mY85lO2N1VbCLwJ2xWmPp
+6KEa3rXr1+vZT558mRngxVITe/ll1+uZVvdM8YVcnv37q3lY3oVltUMZ6z2
m/clS5boi6OFb3rPOussrXFzRbeZ965du9oHvt11110qee+990yv2q9ehWXT
e+utt6r366+/DtqwKmI1AAAAfolYXSPFqFtuuaVPnz7m1un+/fuba8KDPgnc
GauvvfZaVVi1apWzwo033qjCTz75xNZRiNu9e7diwkUXXbTX95iyU045JS8v
T9WUMcNsZJ1jtb3220mT0lwrjj300EMaZe7cuTZOqsRWGz16tLKP6V63bp05
Hawo5/ew8VrFaqWho446yjn0jDPOOOaYY2yDBw8ebAc988wzJjYGnV+/uVP6
S0lJsb0jR45UBWf9zZs3f/rpp0uXLtU0x4wZY8uDxmpzcj/oLFT6LhQ3z8fW
uIpgQZtn1SdWKyYH1lRkVpDU9/qxxx7TKAsXLqzaHy1VYqudc845Spqme8uW
LebU8EsvveT3sPFaxeqxY8f26tXLOfTMM8/Ud8c2+IQTTrCDXnjhBfMFCZwF
s/1rY7MlBQUFfrE66Lzrq7RhwwatR/OsA/PLgJn322+/3VbTV1gljzzyiOlV
+3v27GmHLlu2TEOdDzz3Q6wGAACAE7E6fBs3blRG0PH2E088sTeMWG1Cn9+z
wYcPH964cWMtSdO7aNEi1TH5wtRUXjvggAPmz5+vkuXLl4fZtjrH6lGjRjnr
aCI33HCDclMjB2esfvrpp21lzXvHjh1t71NPPdWlSxczytChQ99//31TXqtY
fdhhhylZO4deffXVWmLmQeJ+DTZL74MPPgg6v36VhwwZolbZXg2ysVpZ0ty5
bGlF25pBY7VzOVQGxGpRiFO1a665JmjbnOoTq88++2xnHQVqBc9WrVo558UZ
q59//nlbecqUKZ07d7a92uS6detmRtG8KJma8lrFam3/StbOodqcmjRpYh4k
7tdgk14///zzwJldu3atBs2bN8+WaApNmzZ1xmq/ec/KylKzzbUlljNW6/vo
rK/VesUVV5huvyeBr169upHvoQeBDTOI1QAAAHAiVodQUlIyadIk5SOv12tK
FixYoONtc5F2jbF6zZo1qtCnTx8bohUAFTHszddSWFioEH3UUUeZ4KmS9evX
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

     "], {{0, 451.}, {654.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{654.5, 451.},
   PlotRange->{{0, 654.5}, {0, 451.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`stratx = 12, $CellContext`stratx = 
     12, $CellContext`stratx = 12, $CellContext`p1 = 0.7, $CellContext`p2 = 
     0.15, $CellContext`p3 = 0.4, $CellContext`p4 = 0, $CellContext`straty = 
     8, $CellContext`straty = 8, $CellContext`straty = 8, $CellContext`q1 = 
     0.9, $CellContext`q2 = 0.5, $CellContext`q3 = 0.5, $CellContext`q4 = 
     0.3, $CellContext`graph = True, $CellContext`seed = 3}},
 CellTags->"Snapshot",
 CellID->1124728235,ExpressionUUID->"0370aff6-cb2b-46df-93cf-52c0f7492899"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
8cQToaGh5MX0PjY2lm0tLi7u3r07Gw7Ktvbu3VuNFLt9oi32TDFdFUVFRc5e
S5SEEuKZYgPi1ERbbpFi1nEpNVb66vvuu8/Pz0854R1bUhwTE0Mh7777rjRa
UlKS3JSNhsieYiM0jbTAaK1iSDEAwjBa9TcC8rX2Wum9GD10GIgBPcUG58yZ
M+yOtH37dhZSVVXFHih+++23ebSlS5dSSHJyMvt469atxx57zMvLi03PyxZm
TU1NZVtLSkq6deumRordDukSWQ8pfPOkmBJScizJZFLcOPt0bm6uj49Pz549
+Vxz9KNJl3R2djaPQzef3/3ud/LJqOVSfPLkSQoZM2YMH49x+fLlrl27ent7
U1VyQ8k1Q5gUq+kvoAgmWomJY7RWMaQYAGEYrfrrjlyHrdRYl1xBioEYIMUG
58CBA3QjGjx4MP0NCgpat27dgAED6P3s2bOlbkgK3KlTp/r6eh7y3XffvfPO
OwUFBfTe19f3kUcekR7bw4cP6yXFlEk60VevXi0vL1d/IVFkSkIJsU6xeXGj
FN9pWlyYqsaOHTvCwsK8vLyefPJJPh81yfKDDz5IET744AOrhHIpJiIiIijQ
399/165dtOdevXrRx/T0dHeVXSMED59WiMBn1hKQGfditFYxpBgAYRit+uuL
dOEA6cLE0jklsE4x8GAgxQaHDeykBjy9YcsTd+3aldrq0v6vsrIydhOzuQeb
W+m86CXFlHMSltLSUhJ2Uhg1VxFFo8iUhBJSckixSXGvFNNVwUyW0a9fP7qq
pRECAgIeeOCBb7/91irh6tWrW8kmqauurk5KSmJVjOjYsaO009mwGEeKeavJ
Xd/o4rNs6p+GM1qrGFIMgDCMVv11hN/D7d02WQRdZoqAFAMxQIoNzqBBg9q3
b88UuLKy0uYarGwq6SlTptjcQ2FhIW2dOnWqNJCtfSxeiu9IOospY1euXCEh
Ur6EKAJFo8joJjY77pViBtWI48ePnz17VjpMgkGXitVCxg65devWyZMn6a5l
lstMOynmPb9O4Zb2ktX4PWcH7MnXjVLeg9FaxZBiAIRhtOqvI8x5le+W7NYq
vrMYUgzEACk2MhUVFV5eXkFBQQ5j9ujRo3v37tKQqqqqoqIiJgWdO3f29fWV
bj127JiOUkxnmTyIBKSgoIBagKWlpfauH9pEESgaRaYklNAstgLkyM1XAb0z
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
tviRwyaNkTFaqxhSDIAwjFb9dYTfyfm/N62GNCs/9ttsuG4r/FuVpHjPnj1H
jhyhk5Wfn08h9Je/Z7glxLxSrNEBaSEh7D5AF1hmZiak2ODQaaLbRVRUlDQw
JCSEAr/88kt7qUpKSihCZGSkK18t7SM2ixRfuXLl0qVL33zzzU8//eTs5UpJ
KCElZ53FepfGNFhdJHTZ2Lyc3CjF3bp169ixo1VgfHw8XfNffPGFQsKbN29y
g+vTp897773H7zkvvPACCx8+fPhXX31Ft6NPPvnkkUceoZA333xTdaURijAp
Vpg1lKG8oIaRMVqrGFIMgDCMVv11hN3kpR3B8q5hdp9316AgPlrb4T4hxZBi
TUMgxSYiMTGR7hhff/21NJC1/xUWi2nhUnzmzJnmSTElhBQ7i1NSXOsINVI8
evRouryt5poOCwujQDp3ymkrKyuvX7/+zjvvhIaGUvzw8HAWfujQIfbrfOPG
DR6ZTcY1f/58x7VFD4RJscOBcxp1IgjAaK1iSDEAwjBa9dcRq6eJG23d9pk4
u0WKpc/jONwhhk9j+LQYMHza+AQEBNBNo6qqSho4adIkCqyoqLCXyi1SbMbh
07ynuHnDp9FT3AycGj7tFilevHgxXd55eXnSwKFDh7Zt21b9JGmUz/bt29N+
6FzfafJfQhqH7kjt2rXr0aOHyn0KRrAUK8eRt6lMgdFaxZBiAIRhtOqvI/am
2JLGcZcU852rHFwEKYYUiwFSbHDq6+vbtGnT6udPStJ7b2/vgQMHSmPm5uYu
W7asa9eunTt3jo6OPnv2rJUUk+glJyf7+flRIz8wMHDXrl0Ov92ME22xZ4rp
wisqKnL2cqUklBDPFDuLUxNtuUWK2U/qoUOHeAh99X333UeXt70kW7ZsSUhI
sMrbtGnTaD9nzpxhFYTeW1WrsrIyLy+vkSNHOqor+iBMitUIL6TYLUCKARCG
0aq/jlgNjbb5yIxbhgM5a8SNkGJIsSggxQaHmuvs7rF9+3YWUlVVxR4ofvvt
t3k0MoLu3btTYN++fUNDQ0l7e/fuLZXiGzduUGufQp544gkWgd7HxsbqUCSN
IeshsaLyNk+KKSElx5JMWuDG2adzc3N9fHx69uzJ55qjH026pLOzs3kcuvn8
7ne/45NRP/3001ZPB1+9erVjx44PP/wwv+1MnjyZ4nzwwQc8Tnp6OoWkpqa6
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
0+gpbgk4NXzaLVK8ePFiuoDz8vKkgUOHDm3btm2LmtVN057iZoDh05BiF4EU
Q4pFAik2BZBiSLEYIMVGpr6+vk2bNlaPSdJ7b2/vgQMH8pDi4uLu3btTtL59
+4aGhrZr1653795S53UYwR4NDQ1lZWXkxefOnSsqKnL27FMSugDwTLHH49RE
W26RYjat06FDh6S14L777vPz81NO6GGIfKbYU4EUGwpIMaRYJJBiUwAphhSL
AVJsZM6cOcMGJW7fvp2FVFVVsQeK3377bR5twYIFFJKamso+lpSUdOvWTeq8
DiMoQIJDnnLjxo3mSTElpOQtqvMO2MONs0/n5ub6+Pj07NmTTzdHP5p0SWdn
Z2tfDgMBKXYdSLGhgBRDikUCKTYFkGJIsRggxUbmwIED1M4fPHgw/Q0KClq3
bt2AAQPo/ezZs6Wa6evr+8gjj0gP3eHDh6XO6zCCAmydYjo1V69eLS8vV3/q
KTIloYRYpxgw3CjFRFZWFqsdO3bsCAsL8/LyevLJJ63mo/Z4xEvxqVOnrObg
YgOnRebBvUCKDQWkGFIsEkixKYAUu0WKv//++/HDhgWPGjV5zJiQoKApEydO
eeqpKSEhUyZPnhIcPCUoKGTs2MkBAXSTnDhiRPDw4cHDh1n+Dp/oTy//u68R
/pNGjLj7GjlyMr1G0WsUvZ6i1+jRd18Bo0MCAu6+AukVOIVeY+g15u5rLL3G
/vs1jl7j7v6l97QpMJCS3E1Oexs5kvYf7O8fNHz46iVLKM+annErIMVGJiYm
hs2yRW/Y8sRdu3ZNT0+XrsRaVlbG5reRJqTDzp3XYQRlyGfp62pqakpLSwsK
Ckg61Jx3ikaRKQklpOSQYnDH3VJM11hERASf4qlfv350VQsohaEQLMVs1LpN
3O7FpywI2A+k2FBAiiHFIoEUmwKSYjFnyrOl+Le//W3E44/vDw97L2HNH57d
/tmhQ59/+B8nPv74xNGjJw688tmz23+/ft17MUvfmBP+65DJ+wNG7R89ku45
B8YG0m3nVxOCfj0p+DdPTTo85anXp045Mn3a0Zkz3g6bRb9B782NoJ+h9xcu
+CB64YeLF320dMnHsTGfxsX+YeUKuiEfX7Oa7smfr008sW7tifXr7t6aUlPY
3Yn+fr5h/Z+TEj9bHf9J7DK6j/12/ly6rdGv24GJE3aSVg/oL0yK8/Pz6QLL
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
xLFjJ/a89Ls1T782a+a+kSNeCQw4OH7crydNpGY5tcnfCpv17tw5dGY/XBz9
8bKYP6yIO/70qs+TLMVPtRQ/PY2OBm367by5b0ydsn7ok5BifWFSbNN8+Sp7
NhNCiiHFYoAUAwCASYEUuw6kWA2QYkixGCDFHgzrDrY50bR86XkpkGJIsRgg
xQAAYFIgxa4DKVYDpBhSLAZIsQfTYqU4ImbL3GXZHizFLyxdCilWA6QYAAA0
AlLsOpBiNUCKIcVigBR7MApS3Kg415bZpThqeXp0XLoHSzGdIEixGiDFAACg
EZBi14EUqwFSDCkWA6TYg3FFij8VwoyZYeGRqxfFrluZsClp/ebUjKysLVs2
ZmanpGevTclenbQ5dnVG9PLUBUs3zIlOnrUgcfbCpLCFa8Oj1tLHiEXrIhav
m7t4/bwlG+Yv3bAgJiUyJjVyWdrC2LRlK9YuW5m8KC5j8YqNS1ZuWhK/aemq
zJhVmctWb459Ootey9dsoVdcwpYVidn0WkmvpOz4pOxVa+nNlhUJd7dSZEq4
aEUG7ZB2Tt8SHpU4a378jFlhKkv3wgsvLAkJyVq86Pmnn85JS9v7zDP7d7+4
/6WX9u/YsT97y960tN2Jic/HLX928eJnFszPCptNry3hYdlzwrdGzNk6d+4z
8+dtWzB/e+SCZxdGPhe1cEd01M5F0TsXL35+yRI6QbuWxbwYu2z38tiX4pa/
tCJuz8oVOfHxe1et2vf06n1rnt6fsGZ/YsL+xMT9SUn71ybtT167Pzn57t+k
xH1r1uxdvWrPihUvxsa+sHTJjkXRtP/seXMzwsPnzJyp6emWk5OT8ymkGAAA
TAik2HXYT6HDaJBiSDGkWACQYg+m2VKcn58vWI5Ai0XTKgApBgAAjYAUu47K
30FIMaQYUiwASLEH0+xnigHwDCDFAACgEZBi14EUqwFSDCkWA6TYg1FYjFh5
SSYAPANIMQAAaASk2HUgxWqAFEOKxQAp9mCY+dqUYraEMaQYeDa6SPH777+f
kpJSWlrq+q4AAMCwQIobLQ0tV0bcQYrVACmGFIsBUuzBKIyRVn7cGADPQBcp
XrlyJVWu77//3vVduc5HH31EmRk2bFhDQ4M0vKSk5KGHHmrTpk1+fn4zdpuX
l3fixAk6Yi5mjw447edvf/ubi/sBAIinhUsxtaxYU4rTjDYVpFgNkGJIsRgg
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
x8fzkKKiIqbeXIrvWFyYTgo1Myg8KSnJ2SIDABwCKZbTDCkmFfrUES+++OKU
GQvint64IS0rc3P2+rTsFWs2LVyWMjsyafbCpPCo5IhF6+YuXj9/6YbIZanL
VqwlKV68YuOS+E0xqzJjn85avmbLioTslYnZ8Un02hKXsCVm1WbypgUxKeEL
E8LC50q/aElIyK6nV+/Nzt6fk/PKM8+8lJy8I2Zp9tyILeFh2RFznpk3d9uC
+c8ujNwRHbVz8WL6LXgxdtnuuOV7Vq7Yu2rVvqef3p+QsD8pcf/atfvXJe9P
TMiJj9+1LIYiZ82dOz8szF4BcywoFD90VuTKhE2p6VmbMrOTU7LpUEQu20DF
D1u4Njz6bvHnLaHip7Dix8qLn/iz4i9dlRkdlz4/JnXKzCjaufSLYqaGvpiY
sHfbtv0vvfRydvbupKTnlizOCgvjxd/+7+JHZyyPJSWk4r8Ut/ylu0dg5d0j
sKbpCCTfPQL7EtbkrFxJ6vRcVFRmRIQrR2Da7KhVSZnpG7dkbMpem7IldjWd
vg2zIhPtHoGVG5fSEVi9mY4AFZkfgZVJW+iALI3PjFqePm9pypQZC62OQOz0
aS+tXbvvuWf3v/jiy1lZLyYkPLt4UVbYbDoCW+8egXnbFyx4NmrhjkV0BJZb
jkDsS3Fxe+JX7l1tKX4iFT/pbvHptWYNXRgvxCzdsXDhcjqwki9yqvhO4cqu
KIdxM2fuWb9+386d+194YX9mJtWF7dHRWbOp+OFbIyKemT9ve+SC5yTF3708
9qUVcTmW4u9nxV9rKT4dwzVP06YXli55bmFkbKiN4rN8uu3eBEATNocQKz/7
YxYUusI9o4DaoZ0Uk3Px+ZDJZylk1qxZ7KNUipkqBgUF8eSkjVZSTF/atWvX
8ePHd+rUacaMGVZtToo8atSoqqoqFnL16tU5c+Zs3rxZmhm3S3FFRUVUVNSG
DRsaGhpYyJtvvtlKMj9YQkICfXzjjTd4EptSzLL3+eefs4+XL19m9sqlmI/o
Vl/k69evd+/evZVlOrIzZ878/ve/Hz58OKsFUinev38/hVBC+nv69GmVxwcA
oB5IsRxnpbixqbcIANACcc9dCQAZfKQx++hJT9raHESNgdMO0U6KO3ToMGzY
sPT09Pnz5997770PPPAAnzxKKsW3b9/+xS9+0coy0dOOHTumT5/epk0bKykm
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
Wlpaenq6fB4/fvzf/vY3+YyhaB3AJRtSDDfH4Fy5ciX2AhFu2bLl3//+9yzH
1XNne+zbty9GmgpP5tmGSuOznLPBHPE5Li7OdI9uSfGkSZMqVaqEb9PVq1cP
HDjQqlWrjh07yip8NUaOHHk+D3SdlMu3eP/+/bK4du3amjVrWuzi+vXr2AV+
GfB5y5Yt2PbYsWPOKlOKST7RntvLbcOmTmSzWnChnM76oIzVwjQE7+HnmqVV
KaGFME51EOwDwDqtuj+VmB67KvTXIRBCSD7xuhSfOnUqzDBx9OHDh8PypFgq
gAEaYLiPPvooTv6lvlGKn3/+eZQ0a9ZMu1WDBg3UI7e+k2Jtm/CjMOdSfMkx
wxh217hxYznGu+++W91NbS3FMkF3586drbvXFPtS/MEHH+B/LnQdZEoVuqWf
UDO0UKZMGfTbb7/95qyaW1Kc/6jWr1/funXr0qVLY4y1a9cu/1KsgIfOnj1b
WwIphp2ZVn7nnXdwIC7btCnFSCWO6JtvvlEl+LZiTGK8WewRUjx69GjTBmW8
OdNhwb4U37hxA8NgyZIlqiQ6Orpfv37w91yHFCObxq2KFi0Kr0evXrt2LdeG
FGNgT5gwAdItixUqVMCvhLPKlGKSf0yNwPRGWTvVggvErxVD+8cuchS8Sqgw
PXxnT5HrKgf74Ruzr9JqcVe51popxYSQoMYXt09XqVKlbt262pLFixeHaW6f
joyMbNiwoUULRin+9NNPUfLtt9862yRApFhx4MCBRx55BGtnzZolJS5vn65V
qxYEQdtIenq63C7r7KgF+1IMc4Ti/fDDD3fccYcqtK+fSUlJderUeeqppzZs
2PDKK6+UL18+OTnZ2q0sgvFWVOfOncOIevrpp5FWedLc11IMB09xoHvO17tS
LPdXaBXYiKkUjxw5MiUP7XjwrhRDgdGaKLARfDUwTrbmgZ1KOaQYPzh33nkn
Is+1IcVa1q1bV6pUKQw5ZxUoxcSLbMrDK9WCCzsHFZIHLrh1aCHWD4X52Akh
hRxfSLE8H/rFF1/IopreSkmxTC69aNEitQksBga6d+9eWZR7ievXr689t0QJ
7AmeKCWxsbG9e/d+++23ZdHvUgw/ggWMHTtWZuUC33zzDdZOmjRJFocPH47F
BQsWqNZ0u+vVqxcWP/74Y1lEO+3btw8zPChtxKYUw9PDw8NPnToFVypTpszv
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
e5EfKMWhSnZ2dkZGxoULF5C11NTUFFIoQeoxADAM0tPTMST8PSoLHZRiv0Ap
ton2bM26MHBw65TP2bH491I4pdgrhPwBEn9hHFqb8nCrHbe2sv/EimfBEDtQ
ikOPnJyc5OTkS47LxNAiZC0tLS2dFEqQegwADAO5WIyBwa9wQUIpto9Mm6N9
66KFsMjDkrr3Mwra+8q08yNZTMuja83ZhUXZVhunRZC6Nu3Il1aKLQ5QBePs
pMh6reke1emfZ48S28ydVFPpcCvRqppbKuTs4ou74m/sUu14sMiUdVSmqx7W
YJFH60GrvgU2h5/ucIyb2BnPzgae8atnOhKsOzCfI4EQ+/hlaE21fA8UKRgo
xSFGZmZmYmIivFhE+AIhDkSQMTAwPLDo73FaWKAU2+RhzeNRWoxnCHJubFHT
uErOvU3Pc1y2pqqF5d2oZqeynTaNaBXVevOHnT+Y5u5VyKmau4inenT91H7u
Hs57R6fpJkaZMlZ7OO+GRvvnqw8bbqL2QPx1LWy6dapYjxOtK7TZk6aDMMxs
OlwtduLRHY6qYHM863pJYexwdf5v2oEWLSg8GAmE2KTgh1bB3D1CXEIpDiXk
jtmMjAwYkNw7DTJvJYsUAnRJl5GgBoaME3+P1kIBpdgOWi8TtGfLujNkdUqs
raytqSvRqdDDTm4VNrb28K33zoVp5khRNY3CZd2mtS7pXMaiKzY5v9Hag8sN
6rjsBGm6O5u507qVthuNHZ576x3Ouprunq9qN9nk0RPTzvrf9EBM86LF9ATY
dNi4O8C0EeqGq514VMvai7bagWGdMusxGWY2E5GzDjTdPP8jgRA7FJgUb8q7
/8GDHyXiCyjFIQNkR9IkF4jpv0SH2DGGh3yR8cHfYzb0oRS7xEJSjNdDnV3j
09U0lQ7jeY6z1iwk1LNdW+zLtCtc7sW0RPDg5EqneB5saCd3uc6nVzV2uLM/
IzjTMZtxKp9y9+TT2Xhwdg3X5l8/VInF8NA1aPMrkOvOib3FwHP29w3TIzWt
aRqzs/ya/rXHiyOBEDsU5JViz357iY+gFIcGyEt2dnZqaiqNmFigvBhDBYv8
OvsaSrFLNjl/1Nd4ZuLMONTf29Wi8Qzffmu5zlXXpf1ZXMO1f8HO9ACdeZnx
GE3dyhrPLlW4lbtcs1dqKnRHZ3FS6uyvAdbobgB2a1tjeBZZfjjvFnGL1kyl
2FlP6hp09lcXWaVd9ECKjQFYjArjYHPWJxZSbGzWdCSY1vRsJBBiB5c/195C
vvgFsy/iEkqxxyxZsmTcuHEJCQn4HBcXN2jQoO+++85fwWRkZCQnJ8s8w4Ev
xdkO/B2FlwmKg1K3UmOoYMBg2PhrxBYSKMUeo73/U5U4O+s2butSiq39UdeC
xa6duXZY3iOT9g7Xadi6Zq29zLPLoNqbUe10r0uMuRMsLEa3awsX81iFtHnx
bFvrv0how3NXil3WNEpxWN7txM629UCKnV0ONt2Lca31dyTMIMUWf/SYeuvN
2/b/8EIIIR5DKfaYF198ET/Ihw4dwuevv/4an6OiovwVTFJSUkpKSrBcJk50
4O8ovEywHJS6WIwBg2HjrxFbSKAU22eTZhJaraO5vDPZtCljTa9IsbGm8cxc
55hheZMCeRa2wmgHRj20UBiXO83P/aguc+csYGeR60xQi8cq5PFldGN4PpJi
uThl7EZdg8YBZvrnFy9KsbMNTbPmXSm2GAmb8p70d3mAhBBiB0qxx2ilGH4x
efLk3377zV/BJCQkBNHTxMcd+DsKLxMsB6V9sljucyC+g1JsB1OLVGrgUyl2
dkadHyl2dlAeu5JgtC1dfc9sUXtLs2rQfiM2c6fdl30pNrX7UJVi657UNbjp
1smmTAcYpZgQQtyCUuwxWin2O4mJiciOzDhNKfYLwXJQIsUYKhgwGDb+Hrkh
DqXYJdoLlLrHuHRnzsFypdhYQesvFpdx3ZXi3Fs1xI6OmQav3cpYYmdzl7nT
HgKl2Li5RU9aN7jp1kmqbYqns3jcun06t0Ck2OLwefs0IcS7BLUUx8TEjB49
ukmTJpUqVerTp8/SpUu1ay9evDhr1qx27dqVLFmyWbNmP/744zvvvIPKR48e
xdotW7bg87x581T9tLQ0lIwYMUKVQBleeOGFO++8s0SJEmhh7Nix2dnZaq1W
ihEJtp0yZYqswr6amJGcnKw2X7hwYc+ePcuVK9e8efPXX39de81u5MiRqPzH
H3906NChVKlS06ZNc9kVWin2t3W5Jlj80S2C6KAoxQUGpdgl9k96rU/R5Zra
pry3MrmUYuvWdKfxbkmxTmp0LVjoknVIpqu0mumu8TnzX2VYLm/DdldY7Eux
Rc2QlGKLsWF6h4BFm2pt/qU418ZfJ4xH4Qsp9u5IIIQQU4JXilNSUqKiovCT
2LRp044dO0IeixYtumLFClVBfjBR3qlTp8aNG+Mz9Bb/7t27F2tXr16Nz9Bk
Vf/8+fMoeeyxx2QRR9qoUSNpH/YK78bnJ598UtXXSjH+xWeUyKp169b10dC1
a1esLVu2LDpQKnzxxRcogRFjVcOGDfG5ffv2sBVZ+/jjj6MkMjKyYsWKDz30
0Pz58132hn0pjo6OPnv2rC9UKzMz88iRIzKtsTVu+WMgBGyHADkoAY2npaU5
W0spLjAoxS6x0AFZpT3pdXaGbMdhjafQLnetVtmXYotzeJe6ZCHOzoROu4lL
F9Nh7F5dmy51w63c5bojxRYdbjM2I4EvxXb+luKyD3UX/fMpxS6d1M5RhOWh
29bO18SlsFOKCSHeInileOjQofLLKYt79uyBY1aoUEEu5u7bt69IkSKVK1eO
iYmRCvBf+Qm1KcXbtm1r2bLlqFGjZBECVbVq1RIlSuCDlFhIsY5BgwZh7fff
fy+LEKJixYrVrl379OnTUjJkyBBUeO+992RRpLhbt26QF5u9YUeKlyxZgg7B
rtEzrVq1Onz4sJSHh4cX0TB37lwUQtWL3Err1q0tLGzZsmW33XZb+fLlIyIi
3nrrLWtls+mPfg+4TJkyqjVEEvgHBbZu3Yqtijno06dPcnKysQ6luMCgFLvE
pefqLsKaipidE2njebizS6Wq3I4EObsA7axNO1IcZrgyaLGt6kCXLmbcyvSI
bEab62buLOrnmvmUdTeGpBTrDmpT3iTebg0wixKX8di/w8F0hJjmV9U0xmbz
b0fWzVKKCSHeIniluEGDBjVq1NCWjBgxAr+Qu3fvxuf58+fj80cffaTWXrx4
0a0rxUaee+45VNi/f78s2pTizz77DKu0d2UvXLgQJbAeVQI3QUmvXr1kUaTY
Tl60LVhLcWpqatmyZd99913UOXv2bMeOHXv27CmroFowxJN5pKSkoBDCjs/y
H+KePXvwOS4uzpmIoc2KFSt++umn+Lx27VpsgnFlIW52/NHvASclJaE8Jibm
lAO0bx2w3w9KuOuuu8aNG5eenh4dHV2zZs05c+YY61CKCwxKsUt0Jqh9QNJU
3LQnw86epszVXJxSp/oWN/RqW1MlplpqjN/CtaVNbZA2XUl5ga43XHagRePG
mK3jsXMTtbu5c0uKdY1rU2PRG3aO2t0NjeF5XYq1GdH1pPF4dYPW2QDTdqDN
PFrfJm1MhO4wnaXMOBjckmLrZinFhBBvEaRSLAILWmiQki+//PJSniBv3LhR
u9UTTzwR5o4UQysmTpzYpUuX++67T4RabX7JnhSjb4sXL962bdusvFujwahR
o0yDr1q1qlQQKUY89jvEpRQfPHgwTKN+sbGx69evVzq2ZcsW063kuFyKGNxt
zJgx6n7d8uXLL1682KK+HX/0e8AHDhy47bbbshwGbd2a4PeDAnDhBQsWQOdl
8YEHHpg2bZqxGqW4wKAU20F71q3O9uX83PRc3aK+aR05bXZ2Hm6nNbek2LTN
MBuXcbV70bVgva3N9nWx2Td0O63ZyZ1bUmzauDigy6isQ3V3Q2N4XpfiXOc9
ab+ycafaah5LsUVsdmpOdbxMWXcIbklxrtls26pZSjEhxFsEqRSfOnVKfhgH
aIBaPvrooytXrkSF559/Hmu3bdum3Wrw4MFhtqUY3VKxYkWU1KpVq2fPnnIL
dJg7UpyQkFC3bt0qVarAfbTlEluzZs20wTdo0OC5556TCr6Q4izHNcT69et/
8MEH+/bt05ZDx+bMmbMuD+zXAx1T/PLLLyVLlsQhW9SxeaexfwPesGFDjRo1
HnzwQezunnvu+e2336zbCZyDOnHixLJly0aPHl29evUjR44YK1CKCwxKsX02
afBWfe+25i75bNP+ti6tx9f4oveMjXu95QDE61+BXHe+BV7ZXa7PUlaoRgIh
pOAJUikGkZGRDRs2dLb2k08+wUnCF198oS1s2bKlslp4Bz6/9NJLau3hw4e1
Ujxs2DAsfvzxx6pC//797UvxxYsXu3btCtNZs2aNLrZPP/0Ulb/99ltnwftI
iqOjo+Hd5cqVQ+OtWrXatWuX0rHy5cvflof2RmJ3dezYsWNVq1adPn26dTWb
/ujfgH/88ceIiIjZs2fv2LFjyJAhFStWtJ4aK3AO6ocffrj99tuxydixYxMS
EowVKMUFBqWY+BqPr5wSQgghRBG8UtytWzecCSxatEiVvP/++9BJkdbNmzdj
baNGjVJTU2Utamov9Z48eRKftVo9ceJErRSLmf7222+yCJeRC8c2pXjKlCko
MX2bEjocq1q3bp2eni4lsbGxvXv3fvvtt7W79roUC6izbNmypk2b3nXXXUrH
bN64i9Ey3ICqjBiaNWvWr18/l9bm1kTN+QnYOmbrgNHInj175HNmZiZE9eef
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
Y1FufJWGjwgcKb5x4wZSjD5PSUnxYrNI9IEDB2JjY50lxY4Uq9gweNAzdvaL
Abl///7Lly/ryuPj4/fs2WMs9xGUYkIIIYQQ4i6UYpv4WppgRuEOvvjii/nz
5zdq1EicdMGCBVIBsjN16tS6deuq9zNWr169f//+urdXjBw5Eo3UqlULMQ8Z
MiQyMlIqR0REDBgw4Pz588Zd//TTT3fddZdqFtt+/fXXOFJnUgxX6tq1a5Ei
RdQm9evXnzNnjq6aigT9hjjLly8vlRs2bLh582ZUOH36dN++fYsWLSrlNWvW
nDx5stc61AmBIMXXr19/55131Gsx5aWczzzzjNaO0ckyHn777Tfd5tu3b5dV
mzZt0pb//vvv999/f4kSJaTNMmXKdO7cWTuZNtKErdROpZG7775b28i1a9cw
zLSxFStWDCMnJiZGW007XBcvXty0aVM1zJD3nJwcKPlXX31Vo0YNKS9evHjb
tm0L4NZ0SjEhhBBCCHEXSrFNfC1NSUlJog99+vTRmotIMSyjZcuWYWZAn8+c
OaPaeeWVV1BYuXJleKixcoMGDXTX7OBc2t0pxowZYyrFBw8erFChgmkk//zn
P7U1VSS9evXS1YS4/fHHH7Vr1zY28vbbb/uiexWBIMUvv/yyaQdCjfft2yd1
/vzzTylcvXq1bvMtW7bIqo0bN6rC2bNnqzyqvzOAsmXLQpaljmmHN2zYUNv4
Cy+8YBrb7bffrr3Kr4broEGDlIYrIPgzZ840NlKzZs3Tp0/7oksVlGJCCCGE
EOIulGKbFJgUg1KlSr311lu//vrr9u3b5TZpmKms6tq166pVq06ePLlkyZK+
fftK4ejRo1U7oqLCk08+uX79+vj4eJjv3XffLYUffPCBqnzixIlKlSqFOS4a
vvHGG5s2bdq7dy90plq1aqoRrRTHxcXVqlVL6r/55psQ20OHDkHH7rzzTqm8
cOFC00hee+01jDQY30svvSQlcqF58ODBOMbjx49/+umnERERcuzXrl3zRQ8L
fpfid955R3rgnnvumTdv3rFjx5YuXQq1lMKoqCip5pYUI/gyZcqg5I477kBS
rl69ikx99tlnYsft27eXamfPnkXG27Zti0II8gkHGB6q5cmTJ0vLrVq1+vLL
L6OjozHYXnzxRSls3rx5Zmam1NQO1/r16y9evBhj8pdfflGXmJHfqlWrfvfd
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
c9g0VHUHsoiYMiPtFEzadpo1a6YthEj269evRo0axjhNpVie1dWC/ysrVqyI
VTBEKcGxS+X9+/dbdPLBgwel2syZM41r27dvH2YpxfnJkcXhOJPiN9980xik
TIEVHh4uMu51KfZp6kMPSjEhhPgISjEhhBROrl69+vXXX3fv3l29U0koX768
UkVT4YqLi9PNiowW2rVrN3369Ntuu80DKe7cuTMWy5QpYxrn8OHDpYX4+Phc
jRlpxVAwmtHkyZN1Ulm3bt1nn31WTcBllOIzZ84YY3j11Ve1O42KisLnFi1a
WPfwX3/9JVv985//NK7t0aOHtRTn5iNHFofjTIonTZpkDFLmeS5evLjc/m0h
xTLNmrtS7LvUhySUYkKCkYt55OTk/K+DLA1SglWqmr/jLaRQigkhpJCD/4JX
r1792muvVa9eXaTj3nvvlVWmwiUCAh566KElS5bExsaqB2Yha2GaK6q59qRY
TeikraPo2bOnrJWnaO2b0YYNG6QmjBLCjv/sVPsfffSRrMKBS4m1FCu9hRWq
67+IxLpj8Z+svORI3t6rQx43tpZihbs58kCKR44cadxvmzZtsKpx48ayqKQ4
Li5OV1PeSuyuFPso9aEKpZiQoEOrw/ihS0tLS0lJSU5OTnSAD1hEIVZp1djf
URdGKMWEEFLYSEhImDVr1vPPP79x40ZtOf5HlkvARYoUSU1NzTUTrgsXLsjj
tHA63fOt586d0/larj0pVga3cuVKXag4Q6hWrVqYY3ZiKbFvRuPGjZOaP/30
k66mcjG1R2spBnfffXeYYyoneUlTsWLFTB+D1SHm27JlS105ekNmkXImxfnJ
kfXhOJNiY5A4T5NVPXr0kBL1x4TDhw9ra8K/5C1d7kqxj1IfqlCKCQkulBFn
ZWXhFxUKfP78eXw3UXjdAT5gEYVYhQqoRi/2F5RiQggpbBw6dEjkAh508+ZN
7ar7778/zHFpFf8vYxFrRXZgZ1JBXSd95JFHtBui5tChQ2WV1k2mTZsmhWfP
nlWFOinevXu37MUo2jNnzpTN1VxV9s1InocF8upexb59++QZYfDzzz9LoUsp
/vDDD6WCXKvt1auXk969BWXfy5Yt05ZPnTpVyp1JcX5yZH04Fq9kUrdkCxMm
TJBy9f7fBQsWSAnSqq2pHv7VSrFp6nV791HqQxVKMSFBhDLizMxMuTp84cIF
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
KBs0aCDqT/9mIapXr37mzBkyE3PgzXP27FnbulNkT5eGYWyCo8guR6mnElgU
m4dFMcMwjJVwelEMoqKiOnToIIQkaNKkyZEjRywzMwUlUWKZmpo6YMAAOr6W
aNq0qbwgOgIAyE8wDw0NxXiAXkGCmjVrDhs2TDrNVXDq1Cma7ypwd3eHrH76
9KlCv0rBnd27d3t7e4vkyOrdd99NT0+3uCxb+YI6T5kyRdqEXFxcxItjQmzs
bB5N7kpnujQMU/o4iuxylHoqgUWxeVgUMwzDWImyIIqJ3NzciIiIsLAw8wtp
FZrJISGg3B4/fnh4OERrTEyMfNteJWRmZp47dw6PyGKTZ2Rk4CqjrLi4OA3P
/ZGi3p34+PiTJ0/ix3/8+LG1y7Jq/n/88cfVq1cPHToUFRX15MkTzatXUpzp
0jClzJ/6zVe1MrMtCiuJ3lJ8tmfZpbye9n91lPviKFfHerAoZhiGsRJlRxRb
m5KKYoZhGPvk4cOHs2bN8vHxoekotWvXDgoKunLlimVmtkVhJcPDwwMDA2mN
SZ06dV5//fWYmBg7lF3K62n/V0e5L45ydUoBFsUMwzBWgkWxVrAoZhjGCTh7
9qynp6d8Sj+01U8//VRSM9uisJJRUVF0BpkUqEiSk/Yju5TX0/6vjnJfHOXq
lA4sihmGYawEi2KtYFHMMIyjk5GRUadOHerNRowYERoaeubMmeDgYNo8DdqE
Fp4rNHMIX9LT0xs3bqzT7ws3b968ixcv/ve//+3Ro4fQX3Yiu5TX0/6vjnJf
HOXqlBosihmGYawEi2KtYFHMMIyjs3LlSurKZs2aJQ2fOXMmha9evVq5mW1R
WMkpU6bQ123btgmbvLy8AQMG2JXsUl5P+786yn1xlKtTarAoZhiGsRIsirWC
RTHDMI7OG2+8odMfKGawqVp6enrnzp0Ru3v3buVmtkVhJV966SWY+fr6GmwN
d+XKFbuSXcrraf9XR7kvjnJ1Sg0WxQzDMFaCRbFWsChmGMbRgfpAP9a/f39N
zGyLkko+e/aMJhUHBwfLY59//nk7kV0lqqedXx3lvjjK1SlNWBQzjs4ff5Gb
m/u/erIlUAiihJmt68uUIVgUawWLYoZhHJqcnBw6ZXvSpEnqzWyLwkpGR0dT
1/3pp5/KY7t162Ynskt5Pe3/6ij3xVGuTmnCophxaKRyOCsrKz09PTU1NTk5
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
6p8YGopiepOLB4Q0sG3btngs5ubmGk2CetIHuSiWQ6cEfvPNN/T18OHDOv3I
ATIcyefPnx8WFmYPnVXZFMXdunXz9vY2mG2lEnoKK7HEaBA9Z9euXb28vGrW
rDlgwIBly5aVaCcQjFiGDRvWsmVLV1fXevXq9ezZEzngalqjrGLRsIjCwkKM
MzGSOXDggCmby5cvBwcHd+jQwc3NrWHDhv369QsJCVFR/b+h3pczZ868+uqr
jRs3xqXp0qXL3LlzIyMjTRlb1Zei0m1peXl5a9eu7d69e506dTDYCAgImDZt
WkpKinbeMNqQmpqKlgCVIRRQ06ZNjxw5YmAGVUixiYmJprJC8yAbU9IDN/IL
L7wgCoJg8fX1LdFW1aXgzu7du/E4EMmR1bvvvoshbrFF9+rVC/a4O2zuC+3A
bJ4+ffoUSXY5M48mowL1lyY0NLRZs2biJTg6MXRH0rnuJS3LCWBRrBI0KjSP
5s2bQxviKx6INE0UnDhxwlSq+Ph4GLzxxhsWGxAQOLF/p0RaCUo2Jibm9u3b
GFc8fvy4pI0HSZAQyZEJi2J7xqCRYChltDlJNe8xPRaLYjxE0NPidpAGDh48
GK3aYIMsOcWK4vDwcHTOGBiLudlbtmxBkueff1763Bk+fLgpAV5qlE1RjOcs
fv/evXtrmCdd02LNoB1otZQBaJAKZ3mJtWMGYPB5/fp1bcsqBXek0PwNnekT
XrZu3Sp9myOYPn26alc08AXVkCdHhY1qfKv6ook7ylsaFETr1q3llhjEnjp1
ShN3GG35U/+cwtXB6EiTl7ZmSEpK+uWXX86dO1eiFXAlQr07GNOePHkyIiLC
gqGmtpTmpSkF1LuDZoPGAzFYbHIn++mMwqJYJV27dtXp/+0jQq5du6bT/8tO
OtvTAK1EsfQdsWWiGFr+1q1baOfPnj0raeNBEiREcnpZbCVBx6jHoJGg2Rht
ThqK4nr16tWqVcsgkNQuelTzac2LYrjToEEDFxcXVE8ELl26VKff4DokJAT3
3enTp+lYgXnz5pkvy9qwKNYKUgHFms2ePZss/f39t23b9s0339CJEqBNmzbF
nhQpDnBE6/3ss8+OHz++d+/ebt26UWCrVq3+lLzFU1mWErQqAgoO94IQU0ZF
MQKF7++9997PP/+8evVq2goefPvtt7b1ZfPmzWRct27dDRs2hIWFff7557Vr
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
rVaJCQsLw9WyPN5crRSfOnUKCQYPHqwUGNf/8Dv10jEwm8241O/Xr594B2Li
4uKwjRiYqXpU2wl1K8XyIudTTz0F08zJycGvfimusH2xF7VesWJFp06doE4i
wjWS4rFjx9rdwJ02bVrfvn0dFrhOpBjeBGsbPnw41BhdAOVBDz7wwAMqpQtS
DHXq3bt3mzZtbrnlluzsbIfFq6gHKZal29AvGGkGgwG/+qVYxPPIkSOLFy/u
2LEjnFFEuEZSHBQUhFJp906ePFndhNUvxWgWdMr8+fNVTHR0tN2dYru6owwo
87p1606fPo3SyssLWilesmSJSpyZmYmYl156SR1LKSaEEEIIabZQip0j954g
UCEhIatXr/bz84PVQj+/1yHFYOHChfJQMUQDYgVFwnW73VvGsgaU9vVhZCIn
1VNC/VK8f/9+ZbhCZSmGDiMNOlqC69ev1ynF8fHx4eHh6vVeeZv12LFjFZWk
eO7cuWhDWbxL0BrlokWLWrdunZiYKEGj0di5c+eHH37YYYHrRIoPHDiATNSq
X+hW6JhWijt06AAxV0E9Uoxm9PHxQcF8fX3tWlhLjaRYFpISw61KDNEjSKPW
VX7jjTd0SvGJEydCQ0PV673SZWiZokpS/OSTT6J9ZPEuQSvFzz33XKtWraCl
EkxNTe3UqRMa02GBnUgxCAwMxEjYvXs3Ggf53HXXXc6lGN0UHBws2zhElsjT
SvHgwYMxCCXB22+/LQNbgpRiQgghhJDmDKXYOVCkBx98sG3btl62ry8NGTIE
F8yy69KlS16VviN822239e/fXwWtVit0WG4E4wp/9OjR//jHP+xOsWrVKrlp
pWJkMa6//e1vekqoX4rRfSjD8OHDd+zYgYJVOJJi+aoUKrV3797Vq1e3a9dO
pxQjPfZOmTIF6g1XHTp0KHzQ4UJb8mT4nDlzZN3mih8bZUpKCiwYLbZx40Zo
Gkrr7e0dHR0te+tDis1ms/Tsxx9/jJZB99lJ8X333QfhWr9+fVJSksN2sKuC
/OfD2rVrsb1hwwYv2+PxDktYIymG6sI3AwIC3nvvPfnYUGUxxJjxsi3+tmvX
rhUrVqDpdEox0mPvpEmToN5wVfgjquxwoS1ZW3vmzJlofInRSjH+nsCCb7/9
djRXSEgISou5c+jQIYcm61yK0Th+fn5etu9hyQP5qI4TKR4zZgzaZ82aNehH
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
     "], {{0, 441.5}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 441.5},
   PlotRange->{{0, 643.5}, {0, 441.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`stratx = 13, $CellContext`stratx = 
     13, $CellContext`stratx = 13, $CellContext`p1 = 0.68, $CellContext`p2 = 
     0.16, $CellContext`p3 = 0.36, $CellContext`p4 = 0, $CellContext`straty = 
     5, $CellContext`straty = 5, $CellContext`straty = 5, $CellContext`q1 = 
     1, $CellContext`q2 = 0.5625, $CellContext`q3 = 0.5, $CellContext`q4 = 
     0.125, $CellContext`graph = False, $CellContext`seed = 3}},
 CellTags->"Snapshot",
 CellID->1156384751,ExpressionUUID->"ca4374ff-9040-4e48-901e-bfa4c619938f"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd4FNXCPvAAobdQQon0qgEEFAQVBBRBEaWDDSmKejWCiIKCSBH71SuI
XkAFG4hXBRQBAQUF/xT56AQCBEIC6V/6DUEs/N+758u5w5bJZHdnp72/h4dn
9+zZmTNzzk7m3SnbfPykoQ+XDQsLm1IJ/w0dN63PU0+Ne25YBJ6MmDjlb49M
nPDQ7ROfnvDIhKe6jy+HwpfxX+PyYWH/eXzJw2+//VZQUPC/RERERERERFQM
SRl52TNEuwXqHJe8vLx/ExEREREREVExJGURmX2F68LCQryan59f6FJERERE
RERERMVEWEZqRnbGA6+ZGun7/PnzRreUiIiIiIiIyKSQmpGd3ZK1OPebmZqI
iIiIiIioRDJZy7PBs7OzxbnfRjeNiIiIiIiIyALE2eBI08jUFy5cEAevjW4U
ERERERERkWWIi6mRqZGv8/LyePo3ERERERERkXbI0UjTyNT/+7//++9//9vo
5hARERERERFZDNK0+ElrxmoiIiIiIiKi0mKsJiIiIiIiIvIbYzURERERERGR
3xiriYiIiIiIiPzGWE1ERERERETkN8ZqIiIiIiIiIr8xVhMRERERERH5jbGa
iIiIiIiIyG+M1URERERERER+Y6wmIiIiIiIi5zjt8qvLpsuJQlFB+wQZq4mI
iIiIiMg5GKuJiIiIiIiI/BDr8p02orKWyTJWExERERERkRMwVhMRERERERH5
QZzX7Zmdcy/nWUHLCeGM1URERERERGRvjNVEREREREREfhP3IvMjVos3qk+c
sZqIiIiIiIjsjbGaiIiIiIiIyG/i97O8RmlfRGXxRvWJM1YTERERERGRvTFW
ExEREREREfmNsZqIiIiIiIjIb4zVRERERERERH5jrCYiIiIiIiLyG+8ETkRE
REREROQ3xmoiIiIiIiIiv5128SNWizeqT5yxmoiIiIiIiOyNsZqIiIiIiIgo
QLEuntnZK1FZy2QZq4mIiIiIiMgJGKuJiIiIiIiIAiTO6xb3Itt0OVGo5cRv
JcZqIiIiIiIicg7GaiIiIiIiIiLzYKwmIiIiIiIi8htjNREREREREZHfGKuJ
iIiIiIiI/MZYTUREREREROQ3xmoiotL6f0RERETkGCXuHDJWExGVltGbdiIi
IiIKnRJ3DhmriYhKS2xgLxERERGRrf3P//wPYzURkR4Yq4mIiIicgLGaiEgn
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
M2dOq1atUL9KlSqoMGrUKPnSsmXLBg4cWL169Y4dO06ZMkW5Cx0TE4PKW7Zs
6dOnT+XKlWfPno3Cw4cPo/Cll17CU0yzWrVqd911V0JCws6dO2+66SZMv2nT
po8//rhcKLQK9V944QXlNLGK7rjjDrSzXr16WIQzZ87ImaINqKBsxgcffHD9
9ddjyo0bNx42bFh8fHyR66d1Ua1mzZpYqCZNmoh2es5OlEycOLFDhw6YQvfu
3V999VUtaxuxOjMzE71jnltymTBWX3IdsE5PTxfngRu4chirg0vEagx+fATE
cXbzYKwmIiIicgI9YjWCZ1RUFCJk69at+/Xrh4TYrFkzZazOyMiIjo5GSfv2
7W+55Rak4LJly37zzTfi1cWLF99+++14FTEWiXvatGmyHIXI1P3798eU8bhn
z575rnsrAfIySurXrx8REYHIvGTJEhT++uuvKLziiisQqBGNxbuuu+46ZGQ8
HjRoUJ06dVAydepUMRHEcDx96KGHlNNEQG7RogUWpGLFiniKicslReRHiQza
CxYsEPUxBaT7MmXKoD3iIBoWBBFevB2Pd+/e7Tm71NRUpGyUtGzZUqw3PB47
dmyJK9wtVhudcv7DnLH6yJEjjNXqrBirgbGaiIiIiAykR6weMWIE8uCUKVPE
08TExIYNGypj9bhx4/B01qxZ4unevXsRlmvWrClulFTk7STwuLi48uXLN2rU
KCEhQZSMGTMGdV555RXxVERg5HHsYMt3iVhdtWpVLCae4qVOnTqh5NZbbxUL
gmCL8Nu5c2dR32usvvPOOwsLC4tcsVfEcBE6ijxidZcuXcqVK3f27FnxdN68
eZjypk2bxFPPk8DdZjd69Gg8nThxoniakZHRvHlzNO/YsWPqKzzAWL158+ZD
hw7hAfLm559/Lu6oHKDAY/WOHTtOnz6NB7///vuaNWsuXLhQ2jd6wgpPS0uz
YqyOjY0NSr+UyL9YrXfz0F/qs2CsJiIiIiID6RGrmzRpEhkZqaz5/vvvK2N1
y5YtEbSVb3n88cdRYc+ePeKpZ6xetmwZSt59911Zgv1nlAwaNEg8FRHYbVlE
rEYuliVPP/00SlauXClL0JhatWqJx15jtThhW8AioETeZMwtVnft2hVPP/30
U+Rcz9VSYqxGiEZsl98twMGDBz/77LOTJ096Tk2pVLG6b9++mKmypE+fPq+9
9hoenD17Fi9hdoHnoNLG6ttuuw2zVpbceuut8+fPxwMsEV5KTU3VOKl+/fqJ
N3o6dOgQpqMlVj/zzDNlPBw5cgQvlStXTlm4evVqBHnPyvPmzfM18VLF6okT
J9arV6+sC9ZSQkICClXmOHz4cGXhAw88gMLWrVu7VcZYVe+4QJrn2Qz0pijH
2nvuuefk21etWhUVFaU+C6zh2rVr16hRIzw8/Nlnn/Vah7GaiIiIiAwU9Fgt
0m7v3r2VhZiLjNXp6elhLp0URAnSt6jvGaux9+71XcjvooKIwJi4cr4iVj/x
xBOyZMaMGSj54YcfZEnHjh0jIiLEY6+xWrmjPnfuXJR899134qlbrEagRoJA
SYMGDbCwy5cvR3yT71WP1V7Xm0baY/WpU6cqVKiAGaFHZKHhsRq9Jk6wP3bs
mCw0Nlaj2imX9u3bv/jii+KxWLciSp8qlpWVhQmKx1OnTr3++uvFYyyUr4lr
j9VI9xic3377LeaCKN25c+devXrlu84r8DXHoUOHYqTJ5mFcoRBpF4+3bt2K
Nbl37148TkxMVO+4QJrn2QwMLVEuPsXY5oinX3/9NT4sKrPAkMYs3nnnHTze
sGGD29CVGKuJiIiIyEBBj9WnT5/2vIn3kSNHZKwWFWCEAjLybbfdhv1zUd8z
Vo8fPx4lHTp0UL6rZcuW8tJj/WK1cppIWCqxush1rzbM7sorrxTL2K5dO3lO
uHqsFjdLR5ZUX71eaY/Vb7zxBpI7Vh3imCwsVaxGesIUqlativW2ceNGX9VK
FasRmvr27XvvvffOnDlTFpYqVv/yyy/du3dHq+677z40L/BYLSEqYmrKEsTq
n3/+2WvluXPnYu4lTlNjrMaCV6lS5aOPPpIl+LRiTGK8qcwReXbSpEleJyjG
m69ALWiP1erN89UMrL0bb7zx6quvRi/ka4jVCQkJTz75JGK7eFqjRo2VK1d6
bQxjNREREREZRY+TwOvWrdukSRNlCfaElSeB169fv3Xr1ipT8IzVSF4o+fjj
j329xSSxWjp48ODNN9+MV19//XVRUuJJ4FdccUVUVJRyIoge4qxaX0staI/V
Xbt2RUhcvnx58+bNZaH2WI1M2rhx47vvvnvz5s2PPPIIMk5aWprXmqWK1UjE
ixcvXrVqVcuWLWWh9liNjNywYcMxY8bs3LlzwoQJqKx3rN60aVOGi9vVvsGN
1eIcD2WI9uQ1VsfExGQUU46H4MZq9eahGcOGDfu+WGxsrCgXa69Fixb4JOZr
iNVKGCGVKlWKj4/3fImxmoiIiIgMpEesFlfvIiiJp/JGYTJWixt9r1ixQr4F
sQ4Zdt++feKpOCMa+97KvVOUIBUiE4kS7F0PHjx4+vTp4qnhsRoJC3lz8uTJ
4v5m8NFHH+HV559/Xjx97LHH8HTp0qVyam6zGzRoEJ6+9dZb4imm07NnT88L
xj1pjNVI+uXKlTt9+jTSVtWqVX/88UdRrj1Wr1+/HlEaM8p3nZ2LZZHX0rrR
HqtPnToVHh6OJmFBqlWrtmvXLlGuPVZv2bIFPXjx4sVLrvubIabpHavDiqHB
ypeCG6u//PLL6tWri8eIov2K7d69W2WOyLNhCoii8qXgxmr15qEZiMC1i6Gd
oibW3i+//LJhw4YKFSrs3LlTe6w+duxYZGTknDlzvL7KWE1EREREBtIjVu/Z
s6dKlSrYbUaOfvrppzt06CB+slnGaqQb7GlXrFgRORT7yQMGDMCr0dHRyrt1
oQIK8dJ7770nSh599FFxWvXUqVOnTJlSr1495fFrw2M1dO/eHU9vu+02BLHZ
s2djEcqWLbt3717xKvIyXo2KikJ7YmNjPWeH4ICFQsZEJJk+fbqYWq9evUpc
4Rpj9TPPPCPPvceDIUOGiHLPWI1R8ZgHVHj77bexurSEIO2x+vnnn8dM73UR
g0SUe43VcXFxT3pYtGjRtddeKyfYs2dPvWP1559/fshF3MRMCm6sFl8lifMB
Dhw48PLLL8+bNw8lyLAqc8TgGTdu3KFiGRkZ8qXgxmr15qmcBI5YjQcPP/xw
p06dVq5cKWK1ryEnICxjMzJs2DBfjWGsJiIiIiID6RGrYfXq1V26dBHH9RDE
xL2GEKJlha1btyLNVapUCeXIngh68pezhBUrVoif5eratasoKSwsxI568+bN
xWG4Jk2aKI/8Dh48GIXioKckzlOVP1lVVByrlTf3xr498q94jLSLVydMmOBr
miI4rFu3Tjy95557RE4RT5GvBw0aJO4JhmWPjo7evHmzfG9WVhZiuHhV/Ei3
2+yKXDvhffv2rVy5sjgSiqSJdV7i2tYYqyMiIho1ajTLBWkRs0D9fG+xGku0
7nLr16/Pd92TuW7dunKCR48elRe9+kpnJY7AWrVqoStfdsGYQQP++OOPSz5i
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
RDZjxgy/Y7U8CdzrSd1r1qxxi9XqJ4FjMIj6bieBM1YrzZ49Wyyj1x8QV5Kx
evXq1W4vyYug3WK1lJubu2rVKvmtC1K28hZkvmK1vA2415PAxRcCnieBM1br
h7Hab+Je3DExMaGcKY8WkSBvH2R0Q8gpeJtEEow6YM0tXlAwVgeRSk6R97l6
++233V666aab/I7Vl4pvWdatWzfPylOnTnWL1SB+O7tUtyxjrFZat26dWMav
vvrK7aXCwsIFCxagiw8ePIinx44dEzWxYt1qvvbaa+qxWpKHmJXZXMTqpk2b
ulWWw6xUtyxjrNYPY7XfRKwO8a4FjxaRxCusKZS48SEp9Bsf3qoxWJwZq5F3
9FiZKjlF3j3sxRdfVJZv375d/gyWf7H6vvvuE29X/pi1mLI4MB3m4we23G5U
pfIDW2aL1eg+9VitU/8K6enp4lT5+vXrJycnK1+SPw+9efPmS65baoufokYK
VlZD+m7cuLFbrH766ae7du3au3fvlJQUZeWlS5eKmj/++KMsFCd7g1tltEeU
N2vWzO2Oaio/sGW2WO2rf62IsToQIf7ynFdVkxKvsKaQ4aFqUgr9xocjMFgc
GKsRN0Ifq/Py8kR8rlOnDjLp2bNn8alBsK1UqVJYMf9iNeJwREQECjH9adOm
IU0fOHDg9ddfb9CggZyyMlYjCIvQJOr/9NNPyMLvvPNO69atReVly5bJyqaN
1RiKvmK1fv0rvfrqq2IxO3TosGjRopMnT27YsOHxxx8XhR07dpQ1r7/+elE4
adKkuLg4pOD169dfffXVsmtkrP7oo49ESbdu3VCI6I3P2ldffYXwjsJ69er9
8ccfcrKPPfaYqDx48ODvv/8eDZAvyRuVI6R/+OGHGB5om/wuBbPGUBQ1zRyr
vfavFTFWByLENwPn0SJywwPWFBrc+JCbEG98+OtaweLMWH38+HE9Vqb6LcsQ
rMI8VKlSBSM5kFgNCFbiCms3Tz/9tGesvuQ6u1IcmPY0b948ZU1zxmrkU3Si
SqzWqX+VZLB1ExUVtWfPHllt9+7d4oC1G3GZc5giVqP93bt3lxXQoeKYOFSu
XHn58uXKuW/ZskU5tdatWytfHT9+vNe2NWnSRHl43bSx2lf/WhFjdSDEH/rQ
7GryUDV54gFrCgFufMhTiDc+HIHBwlgdRBkZGSKnLFq0yGuFv//9740aNZIx
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
RBwO/Oy1IH7zT86BPdvevXs/8MADNjgMrZHKj1NrP9DsKztrvOmZqZQqQXs9
7Z8bH/KD9ns7qODw0xtjNRGRThirg07uFQSydyEmwmsbqbT0/pktE/J1rLlU
idhXNhcTsdAZ4L4OVXvGZ19T4MaH/FPajY/XQRj4X09Sx1hNRKQTxmo9BH4q
OM+CI7858FiPZyiWWdstEeMpqol/Sl7ry2BulViNDU7gN2znxof8I2K1xo2P
uPmDZyHHnt4Yq4mIdMJYrZMAf3OTexfkt6D/0o35yVAswrVI2SpHn9WPbrtN
xCqZOli48SG/afw+2evfR/5QdWgwVhMR6YSxWj+BXGQt3stbBpEfHBirL7mS
tTIX+4rDqOb1aLXgNgXUsdCdyoKF0UYnW7dunV1sq00HlsaNj7w2QdaUmdpp
G67QY6wmItIJY7Wu/L6bN/dsyW8O/8nXn376zz8zTMSiuPHRSe/evcOKzbbp
ORBaTnVQ/uqf2EwF5YYkpBFjNRGRThirdeXf3gJvGUSBcOBdyyhYuPHRjxNi
dYkbH89b6okbAjBThwxjNRGRThir9Sb3IrTvM/DaRgpEqW4cRKTEjY9+GKu9
3qb+gQce4NeAocRYTUSkE8bqEChtsuaeLQWIsZr8w42PfpwQqy+pbnw8M3Wr
Vq3q16/fq1ev0LbR0RiriYh0wlgdGqVK1tyzpQA5865lFDjeLFE/DonVvjY+
ykuqAVFaZGr8z793ocRYbSfnixUWFv7bJV9BlOAlWc3o9hLZHGN1yGhP1tyz
pQAxVpN/xDaKGx89ODlWu53+jUxd30VkaonhOgQYq21DGajz8vKysrIyMjLS
0tJSXPAAT1GIl5Th2uhWE9kZY3UoaUzWPIOXAsQTHsg/3Pjox1GxWrnx0Zip
BV5krTfGanuQmTo/Px/ZGSE6PT0d/YXCP1zwAE9RiJdQAdWYrIn0xlgdYlqS
NfdsKUAO/40t8hs3PvpxSKx2+05P/hxGiZka2yueYBMCjNU2IDN1Xl6eOEKd
m5vrq8fxkjhyjcpM1qS348ePb9iwYc+ePc7cdDBWh55yN8NzL8LhP3Cz9XIm
mZTl8De2yA9O3vjosdlxe8khsdpt46O8pPqaa64RmRoPmKaNwlhtA/I4tcjU
eKze6aggkrU8Zm30EpAN5eXlDRkyRP6Za9OmDbY2Rjcq1BirjSJ3NtwOWztz
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
2h6ciDxAq2UGw6tBQsQd22ixZ3iimsaN28uTZQS7E7gNfebRuD7buy8ofEBC
sMdPqt/cgCHQatXh3b+rq6tN+n5HQ5FpF94V3O/zAP7jolbv37+fPHrUqFH0
mLGQlStXkmWTaws/DZmAVssMumKChLDewmgu19qY2s9YW59O/EENf9DgRPQM
8UCrXZ+y7FMNugtrfbZ27bUV0YWAPSEofIBFrBc+wF+g1a6wdOnSrKysvXv3
5uTk9OnTZ+LEiRs2bPDGVVlTdWNjY01NTaJ3n3ahHVmDtQdZBZITbdCtZ4ne
ZJ7Uxo0bSaJfeOEFHnLy5Mn09PSMjAzBJyEX0GqZYVqNugqwgo1OmLHk2uLu
0WJoxQdNHNyegMfV6rhGbOUDW3ETcUWWTa6M679IxD2d70GrgTXQA1whoNWu
0L9//+Tk5B49ekyaNOmKK65ISkoip7j77rttJ9jU1LR27dqdO3eaR+vo6Kit
rS0rKzt06BBpS6J3/8svvzx48OCJEyfKInwOAkr5WSorK+vq6mL9iuKiVufm
5tIrcPToUW1gVlZWamoqPbSJvApqA62WHHTFBBaxXbON7hnu3N2iBVOnmfYE
XAeTPpNO2hb7b5s0eWs38Z+5HGLYlK+1cocX3y1Q+ACL4NNaCgGtds6RI0fI
IEiln3jiCRZSUlKSkpJCls17wCZKVVUVpXnTTTeZR2NOffz4cbqPp06dSvTu
0y6FhYXHjh0rLS2FVgeY8q9TX19v+DhprfmdCLa1+pJLLqE3oq2tTRu4aNEi
eqrpeUvoXVAaaLXkoM0IWIQpm5MUuFx7PJ2voYNbEXCtVht24TZpyNYRS8C1
k56Za7UqsmwddvFR+IC4OC98gGdAq52zY8cOkoXc3FxtYE5ODgV+8MEH9tK0
qNUVFRVkxOQpBQUFZ86cSfTu0y4ff/zx0aNHWYO13/IHRKHT6srKSsPHyUWt
HjZs2IABA3SBK1asoKf6/ffft/4iqA60WnLQDxxYwcVOmExpnafjGbxBWSfF
hj3AKTL/M0xEF+76wGqFwG96wAroAa4W0GrnrFq1imTho48+0gYyg9i/f7+9
NBPVarJje1p94MABaHXgSUirW+NhRasvu+wyeoB1834vWLCAAulhS+hdUBpo
tfygKyaIS8g7YfI2ZVpgysxan6M1mceMHknNd+GJsNW4M54FGBQ+IC7sh9/Q
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
29tLd47crOmCiJu1O7QTg6v7Cqubc6AQIrT6xhtvJB9ct24dW62qqho2bJhW
q++44w5a3bRpE1stKioiWe7bty+bKKnTqBP4sWPHzjnnnBEjRlRUVLCQZcuW
UZxHH32UrTIFJh+nCjbfi2l1r1696DRplTZNmzaNQq688kp2IiS2JL8XX3wx
i2+o1fQadnR0dEa0l2k4k47OKK2ePn16cnLyl19+yVa3bt1KKe/Zs4etRncC
1x1uyZIltLp69Wq22tDQMGbMGMre0aNHzS+4Q61+7733qLShhebm5tdee43N
qOwQ51ptO1d8x1ioqNUlJSWu3Je42NNq0dlrbW01PwS0GoQKdeuH6ubcCU4+
UW0D5pg6BWYSatGLo1t+yccFtVlrW5ytwz1a+0MBD/SGcJq1uq+wujkHCiFC
q0eOHDlo0CBtzOeff16r1WPHjiXR1u6yatUqilBYWMhWo7V6x44dFPKb3/yG
h1D9mUIWLlzIVpkC686FaTW9Rzzk3nvvpZBdu3bxEMpM//792bKhVrMO2ww6
BQrhk4zptPrSSy+l1Zdffpk8N/qyxNVqkmjSdv7bAnH48OFXXnmltLQ0OjUt
CWl1Tk4OHVQbMnfu3F/84he08OWXX9ImOpxzD0pUq13M1be//W22YyysaPV9
992XFMWRI0doU3JysjZw9+7d+/fvj468detW8wx0WvPW1atXDx48uHuEq666
qqKiggJNjnjDDTdoA5cuXUqB48eP10WmZ9XwcIlqtWH2orNx5ZVXsnC6evSf
Gt/9zTffHD58uPkh6AoPGDCgT58+KSkpP/nJTwzjQKtBqFC3fqhuzm3jsXyZ
+K/FButYcspTdgueoA2tjnWOTNI9GAzOYDc3VM+zuq+wujkHCuG6VjPbnTNn
jjaQjsK1ur6+vluEaRpYCNk3ix+t1VR7N9yL/J1FYApMiWuPy7T6xz/+MQ/Z
sGEDhfz973/nIVOnTu3Xrx9bNtRqbUX94YcfppC//vWvbFWn1STUZBAUMnTo
UDrZV199tbW1le9rrtWG180i1rX6888/79GjBx2I7ggP9F2r3c2VK1pdW1v7
eYQpU6b87Gc/Y8vs2jKV/vwsTU1Nzc3NbPn++++//PLL2TI9iuYZ6LTgrWT3
9HD++c9/pqOQSl988cXZ2dltkRb8WEe87rrr6Enj2WNznpPt0vK+ffvoShYV
FdFyVVWV4RET0upY2YvOBt1EFs7eYipz2Oobb7xBL4vJIeiRpkNs27aNlvPz
83UPCQdaDUKFuvVDdXNuD++n6TZpsbXYYM2iGbZKJ9ST3BxdP/OEtNokvmFL
vVDC9sktdV9h9jKGcDg88BLXtbq8vDx6Eu8jR45wrWYRiBs1kCNfddVVVD9n
8aO1+s4776SQzMxM7V5jx47lQ4/FabU2TTIsE63ujMzVRoebOHEiO8fJkyfz
PuHmWs0mS7/yyivNL68h1rX6l7/8JZk7XTrSMR6YkMCSPVEKvXr1ouv27rvv
xoqWkFY7z9WePXsuvfTS9PR0esZmzZrlXKs5pIpPPfWUNoS0+h//+Idh5Icf
fphOJG6aFrWabiWd0e9//3seQm8rPZP0vJkckXx2zZo1hgmy5y2WUDOsa7V5
9mJlg67et771rYsuuqi5ubnNglZXVFTcfffdpO1stU+fPrt27TLMDLQahAov
OxW7iLp1cnt4P7GViRRbVE6Tzt4J9SS3ns9E28FNTsT1JvW4hG36MnVfYWg1
8AARncAHDhw4cuRIbQjVhLWdwIcMGTJ+/HiTFKK1etu2bRSyc+fOWLtIotWc
w4cPf/vb36atjz/+OAuJ2wn8/PPPHz58uDYRUg/WqzbWWTOsazW5J0niq6++
OmbMGB5oXWBra2svuOCC3Nzc995774c//CE5Tl1dnWHMhLTaYa5OnjxJT9St
t95Kt5WNuBet1WTxDRF0o33d1WrWx0Mr0dEYanVeXl7DWbTPg7tabZ49ysb1
11//t7OUlJSwcHb1LrzwQnoT2yxotZY333yzZ8+eZWVl0Zug1SBsKKrVoarZ
+vKBYxOttqKcPI5hk7SLWq1NP1EXtnKOnvUD7wqZWUOrATBBhFazcbLbt29n
q3yiMK7VbKJverb5LuRB5LCffPIJW2U9oqnura2dUgj5F5kmC6Ha9aJFi9av
X89WfddqMizyzXvuuYfNb0b8/ve/p60//elP2erKlStp9cUXX+Sp6Q63cOFC
Wn3yySfZKqUze/bs6AHj0VjUajL95OTk8vJysq1evXq9//77LNy6wL7zzjuk
0nSgtkjvXDoXPpZWh3Wtdp4ruh19+/ZlDZr0eAwePFi0Vnc7S+/evbWb3NXq
119//dxzz2XLpKLzzlJQUGByRPLZbhpIRfkmd7XaPHuUDVLgAWehfLKYdPU+
+uij/Pz8Hj16HDhwwLpWHz16dNCgQVu2bDHcCq0GYQNaLTl+jbo1aWtOSKsN
EdTF2kWt7nK1p7p1QjV9GQofAGIhQqsLCwvT09Op2kwefe+992ZmZrJPNnOt
pmKHatqpqankoVRPvuaaa2hrRkaGdrYuikCBtOm3v/0tC/nRj37EulXff//9
69atI3vStl/7rtXEzJkzafWqq64iEdu8eTOdQvfu3YuKithW8mXaOnz4cMpP
SUlJ9OFIHOikUlJSSEnWr1/PUsvOzo57wS1q9X333cf73tPC4sWLWXi0wNJT
sTIKivDrX/+aLpcVCbKu1dZz1RZpIY3OGOVq2rRpPMHLL79ctFa/9tprn0Zg
k5hx3NVq9lMS6w9w6NChn//851u3bqUQcliTI9LDc8cdd3x6loaGBr7JXa02
z55JJ3DSalq466676K7t2rWLaXWsR45BskzFyPXXXx8rM9BqEDZQs5UZHyXL
ilabKCe02jYez/fuI4qeZkgKH+AvIrSa2L179/Tp01m7HokYm2uIJJpH2Ldv
H3lTz549KZzck5SKfzmLQU8++yzXpZdeykI6Ojqooj5mzBjWDDdy5Ehty++i
RYsokCRCmwjrp8o/WdV5Vqu1k3tT3Z78ly2T7dLWFStWxEqTicPbb7/NVm+5
5RbmKWyV/HrhwoVs9i0694yMjPfee4/v29TURBrOtrKPdOsO1xmphOfk5KSl
pbGW0FtvvZWuedyrbVGr+/XrN2LEiE0RyBbpEBS/zUhg6Yze/jrvvPNOW2RO
5oEDB/IEP/vsMz7oNZadmatZQrmiZcOMvf7664MHD+YJjh49Ohhjq2tra+lJ
eP7553kICSldis8//9zkiJ6NrTbPXlytpt1HjRpFssy0OtYj1xbpFzFv3rxZ
s2bhA1sAcFCzlRbvpynTYiKV0GrRhGT6MhQ+AMRCkFYzqIrLldMQqgwfO3as
LfbYYaoqayfTZpCA83nAJIQuEZ0U+abhVjodsgPzFCgOqY3hV7oMsaLVdJfJ
aLiR1dfXp6en/+lPf2pLpLt1ZWVlnz59yH8bGhqeffbZHj16lJeXG8a0qNWu
5KqsrIz87pFHHqFc/dd//ZcHY6u90WqCzHTQoEH5+fl0W+lVnTJlCl0W8yN6
ptXm2aNsrFixgs8E/sUXX7BwrtXEX/7yl26RafPNj0LpULRPPvmEJWU4nB9a
DcKGojVb+o8j2DVb34fZohO4j1rd5dOAeo9B4QNALIRqNfAGK1p9zz33zJo1
SxuyePHiJUuWtGm+SGVlzu233nrrwgsvpGj9+vWjMipWNIta7Vaudu7cOWTI
EIo2Y8aM6dOnu6jVWVlZTz/9tDbEXKt12muSgU4L3kq39Yc//OE555yTkpJC
Z5eTk6PLefQRr7/+es+02iR7lA3tEG/axMK1Wk3ccccd5lr92Wefdfs6Gzdu
jI4GrQZhQ9GabeAbjHyfukrolGVSabX5TOB+abXvv6t4AAofAGIBrQ4A1mcC
dwve+BiLhGYCd4XW1ta4uWIkpNUisK7VDLqz9J7yTz8LJSGtZniZvVhAq0HY
YI1iys2PFOyarV/TlGkxUU6Ln4eOOxN4rGZi24jQah8J/PRlimq1omUmUAto
dQDwXqvj4r1WW0c5rfYSG1otA9BqEDYUrSIqmm0rSDJjVVytjtvWzFIw1GqT
HuZOSNSFTeJb/OlANME2a0XfYkWzDdQCWh0AdFrd2trqt+VAq+NnoFNKb1VR
q+mBh1aDsKFoFVHRbMdFHo0yUU6LUhxLzMUZq22tjnZ/lknXxd8GAZ6+TNG3
WNFsA7WAVgcA0uqGhga6O83NzdDquECrTVBXq+nhp1egurra79fxa0CrgSAU
rSIqmm1zZBtOa9hVO5YUk5nq5JRLqy4FQT3Au+JpNcuhLpOG7s/P0a+B1TqC
On2Zom+xDJ1JQOCBVgcA0mq6NWTW8mh1W+QLSjU1NX7nwoCaCL5noFNWb2U3
TtrsRcO1ml4Byrzfr+PXgFYDQSg6SDmQNVupnLrr615Mf7TKJDRaimM1+3I/
ZbtrUxCaYUMMDZrvQuHm5+gjsv3e4hbQagBiAa0OBnRf6urqmpqaWiLIYNbt
EfzOhQG+Z4xloFNWb5U8ezqYUxP08NMrcOrUKb/fxa8BrQaCgFZLgpwtktyL
tX/Rvhm3N7XuT1ArsA2t1u5lfo7+ws1aOQk1AYUPALGAVgcDui//+te/Ghsb
pWqwBiZ0yu2tkmePw5uq6eGnVdkKKGg1EARqtjIgyTRlsWCt1bw915Do/tXa
TSwFk93dwjwbJlutnKO/yDPu3i1Q+AAQC2h1YCC/YL3BYdZK0Cm3t0qePYZ2
VDUVTbTg91uoB1oNBMFawZSbEClINdtg6BKdxfr166VVJJY9ori42O+82EeG
L6+5iIqno2iBCZQDWh0kmpqayDVOnTpFfsFmBWd+rcVvEwL/oVNub5Ute7rH
mD3b/FFviOD3+2cAtBoIQsVaoop5jgV3ammF1DqsH7uEvw8E7yIH4+FX8UVW
Mc9ARaDVQaKjo+PMmTNsvinebA3khO6R31kwQ/LstUQaqZuamuiZpwe+JZJh
CYFWA0GoWEtUMc+GBG8qKgnNOkhOzQjM6aj4IquYZ6Ai0OrgQYrR3t7+73//
m24W+/AW2UczkAy6U35nwQxps0cPMz3SjY2Np0+fpkzW1dXJXChBq4EgVKwl
qphnQ+ScpswhUpl18Jy6K0C/xqj4Iis6HhwoB7Q6qHz11VfkIGfOnGk8SwOQ
CbpHfmfBDDmzx55kKohYazWbsVxmoNVAHMqNUw5GzVbFgaUWkWS0uCTZEEEw
Tg1aDUAsoNXB5l//+lcHkJLOSKd9aZE8e6ypWn6g1UAc0GrvkXzqb+f47n2+
Z0A0wXiElDuFABQ+QAmg1QAAIAhoNRAHarYeE8ieydH4KLZSdUQXRwCmL0Ph
A4Ah0GoAABAEtBqIg1XOFRIQpWu2gRkYawVffkAIiVMzVB+er5xWq37BgSpA
qwEAQBDQaiAO5bRauQxrCY9TMzw261A5dZf6v9Io9y4rl2GgKNBqAAAQBLQa
iEO5iqJyGeYEeJoyEzwz67A5NUPpUeTKvcvKZRgoCrQaAAAEAa0G4lCuoqhc
hhnBmGPKHh6YdQAGGttG3Z9rlHuX1f0FA6gFtBoAAAQBrQbiUG6osopyqnpn
XecINeswOzVD0SugqFb7nQsQfKDVweb06dPsg0R04/z9IhLwHn7TVfkcVfCA
VgNxQKs9IOROzRBh1mRkihqluyj6uw0KHwAMgVYHlfb29lOnTrW0tNBda2xs
bAChhG49PQD0GDQ3N9Mj4fdTGTqg1UAcqNmKRt0+uq7jrllzl8S17dJcDYUa
f1H4AGAItDp4dHR01NXVdUaaqkms6K41NTU1g1BCt54eAHoMWIM1PRh4hb0E
Wg3EwWrjComJWjXbMA+pNsQts4ZTR6PcDzhqabVyRSVQF2h1wGhtba2pqSGz
ZirdAkAEptj0YNDjQat+P6dhAVoNxKFWXVHF3CokDt7g3Kzh1LFQq0u8iq+z
KrkFSgOtDhKs3++pU6fIoVgPcKL167SBEKC76exJ4A8Ge078flpDAbQaiEOt
uqJauYVTx8KJWePHChPUujhqvc5q5RYoDbQ6MJAusdvEGqlh0EAH82t6PNiL
TAt+P7PBB1oNxKFWXVGh3CrXI9dj7AmgWtroCwp9yVqh17lLtS7rQGmg1cGA
7kt7e3tjYyOcGpjAzZoeFVrF6ywaaDUQikKDf6lOm52dLX/NFkOqrZCoI3vw
/etgoMpPOspptRKFDwgA0Grb/PGPf1y7dm11dTUtV1VV3X777S+99JJfmTl1
6lRdXR2b81l+rW6P4HcuXEaJk+IdwulRoQeGHhu/ntiQAK0GQlFIAJVoMEKL
qnWsj5KGUycEG2Qt/7VC4QNANNBq2/zgBz/o1q1bcXExLb/wwgu0nJGR4Vdm
amtrGxoaVGmqrongdy5cRpWT4g3W9MDQY+PXExsSoNVAKKwGLn+X0S5Faraw
v4Tg3542eQjh1Imiym870GoAooFW20ar1WQoGzdufPfdd/3KTHV1tUKjqo9H
8DsXLqPKSWlHWLO+FkAc0GogFIW0Wv6sqtL/VjZMzBpObQ8lBlnL/0ZzFMoq
UB1otW20Wu07NTU1dHfY7N/Qal9Q5aSYVtOjQg8MPTZ+P7kBB1oNhKJQdVHy
rGJItRMM9TluQzYwQf4feSR/o7Xg1QaeobRWnzhxYs2aNZMmTerfv//ixYtf
f/117dbTp08//vjjs2bN6tmzZ2Zm5muvvfbwww9T5M8++4y2/uMf/6DlZ599
lsdvamqikFWrVvEQko7vf//748aNS01NpRTuueee9vZ2vlWr1ZQT2vehhx5i
m+hYk4yoq6vju+/YsePaa68999xzp06dum7dOm27YV5eHkXeu3fv3Llz09LS
Nm/eHPdSaLXab2+LjyoGmhAKnRS02jOg1UAoCnVulLlmq0q3W5nRmvWDEeDU
DpF8kDUKHwCiUVerGxoaMjIySGynTJnyne98h/Sze/fub731Fo+wadMm2krh
OTk5EydOpGUSZPr3k08+oa1vv/02LZNo8/j19fUUQq8eW6UznTBhAkuf/JfM
nZZvvvlmHl+r1fQvLVMI2/S3v/1tsYb58+fT1t69e9MFZBG2b99OIeTUtGn8
+PG0PHv2bPIdtnXBggUUMmTIkH79+l1xxRXPPfdc3KthXauPHTv2xRdfiJC1
1tbWkpISNsW0OQkZqAwZtoIkJ8WgxJuammJthVZ7BrQaCEWh+XhlrtnCqV2B
zbdMVZesCPRYwqmdIPmvPdBqAKJRV6vvuOMOck9yZ7ZaVFREltq3b1/WoHzw
4MGkpKTzzjvvxIkTLAIZdLcIFrX6ww8/vPjii1evXs1WScEGDRqUmppKCyzE
RKt13H777bT1lVdeYaukVOecc86IESMqKipYyLJlyyjCo48+ylaZVl999dWk
PxavhhWt/uMf/0gXhA5NV2b69OlHjhxh4cnJyUkafvOb31AgyX7S17n00ktN
PG737t0DBgzo06dPSkrKT37yE3Pps2igvme4V69ePDXKifwnRfzP//wP7XVO
hMWLF9fV1UXHgVZ7BrQaCEUVrZY5n/L3tlUFustk06TV4yIoIVySI/Mga5lf
ai2q5BMEA3W1euzYscOGDdOGrFq1imy0sLCQlp977jlafuKJJ/jW06dPJ9Ra
Hc3y5cspwqFDh9iqRa3+7//+b9qk7Vu+Y8cOCiFv4iFkNxSycOFCtsq02sp9
0aZgrtWNjY29e/f+2c9+RnG++OKL73znO9deey3bRLJGjvn5WRoaGiiQlJ+W
9+3bRzkpKiqi5aqqqlgqR2n269dv27ZttJyfn0+70HNlon5WDNT3DNfW1lL4
iRMnyiNQ+uYZ9v2kGN/4xjfWrl3b3Nx87Nix4cOHP/3009FxoNWeAa0GQlGl
xihtPjGk2i34lczLy/veWSS848oh7c8+0r7UOhRqVQcBQFGtZgpMTNPAQp5/
/vnOs4r997//XbvXTTfdlJBWk5hs2LBh3rx5l1xyCVNyvnunNa2ma9ujR4+Z
M2e2ne3gTaxevdow84MGDWIRmFZTfqxfkLhaTQWgVh7Lysr27NnDhe4f//iH
4V7svOKqHNnf3XffzXsd9+nTZ9euXSbxrRio7xk+fPjwgAED2iIObp4aw/eT
IsimX3zxxdraWrb6zW9+c/PmzdHRoNWeAa0GolHCCuWs2UreyVYhdFOWfRoB
Zu0W0g6yRuEDgA5Ftbq8vJyZ6Y0aSE6vuuqqP//5zxThzjvvpK0ffvihdq8l
S5ZY12q6LP369aOQ888//9prr2UduRPS6urq6pEjRw4cOJDsSRvO8paZmanN
/NixY5cvX84iiNDqtkg75oUXXvjLX/7y4MGD2nASuqeffvpvZ6Hj2hA6zptv
vtmzZ086ZZM4FvtL+5vh9957b9iwYd/61rfocBdddNG7775rno48J1VaWrp7
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
6HCbDhsihS37tXn7HPgTi7WazvMXL16ckZFx4oknzpw584UXXhAvzZo1i8rf
fPNNfkouMGPGDCr56KOP7rrrrmHDhpGHpqSkUMnPf/5zsRRZw8KFC0ePHp2a
mjpx4sT777+f74TL0EtU/+23354wYULnzp3vvPPOSKu6+eab6al8Pq9lzbT3
pkyZQp8lLS3t0ksvPXLkiKhQUVFxzTXX0Ht16tSJVnLTTTe1tLTwSyofR2X/
qENvR63Ds39Dq80AWm0qrNXUgakbU2fW2O2dD7QaxIk0sveYTWdnj3ejTYf1
ayl//d0s4lp2CLKQMvLAb+yTULBzZBTTg0f9tUH0Lnmkt+tsOqxfi/w1ktfA
WKzU6pqampEjR5JOnnbaaT/5yU/Iczt06PDKK6/wq9u2baOnw4cP59vXbtiw
gWpeeeWV/Piiiy6ip2SvJJvLli3jRej0e8SIEVROS1GF7t2702MSWPGO06ZN
o5LevXufcMIJ559//iOPPBJpVeS2VCi8WOOaTz755FNOOWXSpEnkzvSU3kLs
rvT0dP6kU6dOJUemx0KfI22D+v5RR9Zqe+Vo3759PPGUCo7S6qNHj9bV1UWt
Bq02G2g1ADKSMU3h9LQHbDqsXyuS1yr7BMO/ZTDwWwsYEC4jDwhX6TPi4MOD
vb1h04rg8eFIXgNjsVKrr776anLGlStX8tMPP/ywa9euZKwijXvzzTdTheXL
l5eVlZ100kkkrdXV1fxS2FHTV1xxBRXecsst/JRsjmV2y5YtXMLySw7Lqq6y
KoVWa1wzfQ0DgcDnwUube/ToQSVkMfT03Xff/cEPfrBo0SKuTLLZq1cvUm96
oLINUfePClq0OiEhob3EunXraLNpJ994442iziWXXDJu3Dh6QJ+9fQiffPKJ
iha99NJL1GrdunVLTEy87bbbVGpq1GqzN3j79u3Dhw/vGGTmzJlVVVUqlTVq
tdnbLNi7d29qamqfPn2ibrMWrTZ7s+kLJVd+9dVXQ+tAqwFgpPHeLrh02ii5
lpPXYc9vMfxbBgO/taPRJX2Ces8R4729lJ5WD3lyM8g1iBMrtXro0KF9+/aV
S2644QYSyby8PH5K59UjR45MSkqaOHEilb/xxhuiZlgPHTJkCOmqvEkvv/wy
Vbvjjjv4Kcuv4gNq0WqNa3777bdFhUsvvZRKxCB2BVdddRW9umfPHpVtiLp/
VNCi1aQzZL6H2qipqaHCF198sUOHDvRB6PHmzZuTk5M/+uij5uBsV1zttNNO
u+eee/ixysrprU844YQ///nP9HjLli202dS1IlXWqNWmbjAxYsSIJUuW1NfX
FxYW9uvXb+3atSqVNWq12dvMNDU1jR8//owzzkhLS4u6zVq02uzNvuCCCx58
8MHDbYQdHgCtBkAh1CSbtguvxXItJa+V57fIOTIY+K0P7DSBMGv5RwaFUJNs
2i68Fsu1SF6jkwDdWKbV1dXV7YKcIcEljz76qKj2/vvvJyYmUuH8+fPlxUM9
lM7tqSQ7O1uuRmfsVDhlyhR+yvIrUt6RVvX58Vqtfc3y+f/dd99NJa+99ho/
JVNbvnz5pEmTzjzzTL6SmhB31ArdBo37JxIatfqdd94JLb/88stPPfVUMqM+
ffrce++9ild/8IMfkBBF9bLi4uJf//rXQpe6detGIhapsnatNm+DyaY3btxI
bc1Pf/SjH915550q9bVrtXnbLHjooYcGDhz4/PPPG6jVpm72mDFjXn/9dXX1
hlYDP+NzoY4q1ywCyMxi4Hc8YEC4gHcFdyFZqP2QnoZcA/OwTKtZS4lLJMgc
f/rTn/7jH/8Q1egEPjU1VXEh8+fhPJQ8jkpocbkanZBT4Y9//GN+qk+r9a35
nnvuEVpNu/SEE06gp/379586dSoPKVfXao37JxIatXrt2rX/bIM2nstLSkrI
zuitzz333NDFYzU+4u9//3tycvLBgwcjVdCu1WZvcFFR0UsvvbR48WLSxn37
9qnU1K7VZm9zWVlZz5496Wj/6quvGqjVpm52v379pk+f3qlTJ9rPK1euDFsH
Wg38CYQ6qlxnZWVlZmZiBC8GfscPBoQL6OMvXLjQzxlqyDUwHCsHgffu3Xv4
8OHqdcg0ExISRo4c2aFDh3feeUeUh3Xhvn37Dhw4UC7517/+RdVuvvlmfqpP
q/WtWdbq6667jh4/8MAD4tWLL75YXas17p9IaNTqbt26ndSGPEibpIm257HH
HgtdKlatLigo6NWr11133aVSR7tWm73Bzz777KBBg/hnnPLycpWa2rXa7G1e
vHgxnWTSA2O12tTN7tixI33Fdu7c+fDDDyclJT399NOhdaDVwIe0neRPgVCr
yHV29nmZmWfMmzfPt+e3GPhtLNiZrW0HHzLHhIRsCHVYuU5KyuUJzWK9DyDw
LVZqNU9/TZ1TlNx3333kp0I26ZSbKvz617+mksTExPT0dDrN5pc4WXzKKafI
K5wyZQoVPvLII/w0EAhMmDBBfouwWh12VQqt1rFmWav5VXGddWFhISevxScN
uw1R948K8QwC37dvX0JCAr31mWeeGTUjSR1mQQjiVdqM0aNH/+xnP1OXrDgH
gce0wVG3mVc4YsSI5cuXq2xMnIPAjdpmOrAnJyfv2LGj2WitNrVvbN++vb6+
nh9fffXVc+fODX0vaDXwFXKS2g+TksUp1+qzmXkbOUmNc3uj8POAcDHqmycl
s11gnRxIW4OYsFKr6Yt80kknderUafbs2XfdddfkyZPpdH3kyJE80zWd/3ft
2nXgwIH0LvT01ltvZcUWi9OyVEJL/eUvf+GS/Pz8Hj16JCUlXXLJJcuWLTvn
nHOowtSpU8VGhtXqsKtSaLWONctaTa5BjwcPHkwHrptuuql37958By5ZkEO3
QX3/qBOPVk+aNGnixImkYN26dVuzZo26OpWUlLx+PG+88Qa/RO9Oqxo/frxR
N9gyZIMjbTMtTjtZ3OObWurcc89V2Zg4tdqQbW4OXlVNvaJTEJ6FoGPHjpE2
LH6tNqRvUPnKlSupf3K1RYsWhf3hBVoN/AOEGnKtEQz8Ng9/DgjHZdSQa2Ae
Vmr158GbU0+YMCE5OZl0oEOHDiStxcXF/BKdwFPh3/72N35aX19PWkpn+2Lz
qCf37duX6px99tlihdu3b//xj3/cuXNnKu/Xr9+VV15JC4pXZ8yYQeU1NTWK
zQhd1WWXXUZP6fxf95pXrVpFJaQSnwez24sXL+Zl6WPOnz//2muvlWcCj/Rx
VPaPOrpnAt+4cWNKSgrfHelPf/qTeBxJnVSgj8k/HfD6Ve5XFc9M4EZtMK0t
NTX1t7/9Le20gwcPjhkz5rrrrlOpH89M4Abu5CNHjrzbxgMPPHDiiSfSA5EI
DrvNumcCN2qzqU/26tXrN7/5TVNTE30F+vTp88c//jFsNWg18DxtU05h1Hc8
ck17b6rnT24x8Nsa/LOT+eBDbojLqHUE3+caZg3UsVirGTp/LiwspBNpHcvS
ibe4+7OASsiMDFmVIWtmaF/Rx6yrq4t1G3TsH41a3U7ioYceKi0t7dmzJ6kl
V6AtGTt27KRJk+SlMjMz1e88xXz66aftjmfFihWRKmvXavM2uDl4o+0BAwbw
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
x7n8f/7nf1T2QJzYq9V33HEHf8a6ujr1mjFpNa2NhyIQ48ePX7duHX2KWGcC
F6MFSPBDl5oyZUq74CBzfiq66x/+8AdFTb5M4KqrrlKUk5JT+YgRI9Q/eJxA
q0FMIFWN0BI8Dtztcwd9LLEpyO2q8O+0KuO0eVy3liHcWlLSPCd2pI3ZdDzi
g+jYD3HC20nEKdcYAY7QEhgH7i6g1RqxTKvJicJWePnll8877zxhTwoUWk26
HbqGq6++WtbqXbt28bKPPPJIaOWDBw8qtPqDDz5QqR8IBPhyaSHpkbZEaHVJ
SYlc7get/ulPfyo3gQqxTln22muvKaYO692790033ZSfn69YPJJWT548uV1w
dHrY7Vm2bJn8g4BKd2Wtps6mKIdWAwdC5yrQaoSWcOY48FBTVshyThzIWh02
m8xaHXUceOhwcVpb6AqFruomrIObIeDyjuV30bcSaDVCS2DiMhcBrdaIvVot
MontgtNoDx069KyzzmI/il+ryXNDKx86dCiSVoetT/uHtfrGG29U3xI/a/XU
qVPbBe+MFrVmrFrdGuxC999/f2ZmpjwTeEJCwjPPPCNXU9fqSMoPrdYHtNrh
BM+LMQIcET3smrgsbHI5TusU4vmxKq1tg7QjabXGy6vlauJi6khJ8Egbo8hW
G7IrFOqtvVHCvm+scp2DOcAR2oK0GglrtwCt1oiNWt3c3Myjr08++eR3331X
nohs+fLlurVaDAIPO6j75ZdfVmi1+iBw6khcXzEIHFotc+edd/JnDHsDcRmh
1S+99JLiJXERtEKrBY2NjX//+9/Fry5k2fIUZJG0WkwDHnYQOP8gEDoIHFqt
DrTayWAEOEJ7mDoOXJbHmIQx7DBphRrHg4FaTX/FZOCKO20ZdWF1WAePVcBD
f3YIfaPgoSM8GuUaI8AR2gPjwF0EtFojNmq1mOfqT3/6k+Kl888/X7dWt7ZN
WXbuueeGVr711lsVWk3wvbNjmrIMWi3z+uuv82d88cUXFS8FAoG1a9dSE+/d
u5eeFhQUcE3asYqa9913n7pWC0SKWXZz1upBgwYpKotuFtOUZdBqdaDVTgZa
jYgp4h8HHpp61mF5Vo4FFVodFo3zeMsSLaenxeIapxM3kNBh8zE1RNT6UUeG
Q6sRMQXmA3cL0GqNCO0i3zGjIVQ8Rcweds8998jl7777rrgNlj6tnjNnDi8u
38ya18yJ6XYRbrClmKhK5QZbTtNqaj51rTapfZnq6moeKt+7d+/y8nL5JXF7
6H/961+twSm1+VbUZMFyNbLvk08+WaHVS5cuPfvss7OzsysqKuTKGzdu5Jpv
vfWWKOTB3oSiMm0Plw8ePFgxo5rKDbacptWR2tcuoNVOJnj+ixHgCK3BWq0l
HRlr6lnOOFvvzipo0eqoUiy0OtJM4AYmrOMn9Cr1qMat7tdh3yUHI8ARsQQu
r3YL0GqNsHaRbliv1U1NTazPPXr0ICctLS3Nz88nsU1OTm7Xhj6tJh0+4YQT
qJDWv2zZMrLpPXv23H///X369BFrlrWaRJiliev/+9//Jhf+85//PHz4cK78
xBNPiMqO1WrqxpG02rz2FaxZs4Y/5ujRo9evX19UVLRly5YbbriBC8eMGSNq
/vCHP+TCxYsXFxYWkgW/8cYbp59+umgaodVPPvkkl5x77rlUSOpN39MXX3yR
5J0K09LSvvnmG7HaBQsWcOUZM2b885//pA0QL4mJyknSH3/8ceoetG3itxR6
a+qKXNPJWh22fe0CWu1YgvMjTSVRsl3WEG6JSJdXKyQ6qj7ru57XFgwZBC60
WuVVLdOJ24tipEE8ck1PSZFIlGyXNYRbAuPA3QK0WiNCu/bv329GQ6hPWUZi
1S6ElJQUOlzHo9UEiRVfYa1g6dKloVrdGvzPwonpUFatWiXXdKZWk59SI6po
tUntKyPEVkG/fv3y8vJEtV27dnHCWgFf5txO0mra/rFjx4oK1KCcEyc6d+78
7LPPyu/+9ttvy2sbPny4/OovfvGLsNs2cOBAOb3uWK2O1L52Aa12LBgBjtAR
OTkXZWVlRZVoZ6ae9WHUtdVu12qZmJxalmv2a/o7YkQWRoAjYorExGO9yO6+
D6IArdaI2dpVU1PDnrJ+/fqwFX7/+98PGDBAaM7ZZ5+9Y8cOMtl2wTmpRDqS
lS3sXNM8zJj8SFH+/PPPi3QzL/vYY4/V19fz07Vr1yrq79y584ILLhDi1i44
bPjBBx9UVIu0JWJkcllZmVxOQsTltD2quyouqPls12pqrLvvvlseEpCWljZr
1ixyVUXNrVu3UkOLAfndu3enbrB9+3Z+SoKsWCc1rlgnVf7JT37yySefhG7A
c889J67KT09Pl1/6+uuvV6xYQdsj1pOYmPizn/1MsVtUuitvA3U2Rfns2bOp
fOTIkbHurpiI1L52Aa12LEEhmgytRsQUublLhw0bSmatItF2d22DiXqDrahG
rD6S3HVarTJfmUao/6Sl5aSk5NtuaggXBcaBuwJotUboLJ0+O8nmwYMHRWrY
eioqKj766COSGmNX+9///re0tJQ6Q0lJCT3WskhTUxN9u2ljysvLNS5iO99+
+21RURE1IjVlqFZb3L4kwrS3aZ8rfl4IhbZt9+7dhw4dksdyR4LaZc+ePYcP
H47aKM3NzWSgX3zxhcq2ffrpp7Rbor6pQ1BpX7uAVjuW4OktLqxGxBabNm3M
zj5/3rx5XpXoUFRuTh3pimkF6iPJNa7EOcRk0GGH/efgwmpE7MFare8m6cAy
oNUaEdpFduMi0QAy1IhkzepajfZ1LyrtaxfQameCC6sR+sKuu1fbSKRcs8Zp
wJlIbh7TSpxApFS19mH/9BIurEboiM6d/w+XVzsfaLVGWLsaGxtLSkoMTxYD
a6CGo+ajRoyk1WhfV6PSvnYBrXYmuLAaoTtyci7K8dkVjqFSLFxbkWXmm1Nz
yIStH2kljoWMOP6r5nFrLYS+SEnJx+XVzgdarRE6Sw8EAk1NTZWVlcXFxXa3
G9ADNRw1HzUiNWWoVqN93Y5K+9oFtNqZQKsRuiP+u1e7DuG/LNcqN8wS2WeV
7LZiJdbftNpeyMqh1Qh9gcurnQ+0Wjvi1sb79++nx3Y3HYgNasHCwkKVmxqj
fV1N1Pa1BWi1MwkO25ycn7/LdkdzQtx5Z2529nkc27a9Yfv2ODx8qNWM7MWR
Uswk4GGz1WINCrl2S57aQHBhNUfnztsSErJFGGSddxq+TkcFtNr5QKu1w9rV
0NBw9OjRAwcO2N10IDaoyajhqPnUtRrt61Kitq8tQKudCeYrk4NsWsz8T4pt
+/Y4PDZt2ui3y6uBgUCrOUir5Zt4GmSddxq+TkdFcvKxKwgwa5mTgVbHRCAQ
aG5urq2tpXP4I0eO2N16QCvUWNRk1HDUfNSIaF+PobF9rQda7UAwX5kioNUx
hQ9nLQNGgfnKRECrdURKSj5mLXM40OqYEBNbVVZW7tu3r6SkxO4GBNE5evQo
NRY1WdTJrNC+bkR7+1oPtNqB4MJqRUCrY4qgVvtu1jJgCJivTAS0WkdAq50P
tDpWeKhwfX19RUVFQUHBJ5980tzcbHczgvBQ01ADUTNRY1GTaRkejPZ1ETra
12Kg1Q4EWq0IaHWsAa0G+oBWi4BW6wtMBu5woNU6EOZVWVlZVFRE+5DO7cvK
yqjw22+/tbtJ/Q41ATUENQc1CjXNgQMHqJlici60r5OJv32tBFrtQG6//XZo
tRzQ6ljDt7OWgTihg09aWk5KSr7tdmZ7QKv1fkbMWuZooNX6CAQCPFq4tra2
tLSUzu337t27c+fO9957b/v27du2bXs7yFtB/heYBu9h3tu022nnUxNQQ1Bz
UKNQ01AD8djgmC65Rfs6BJPa1zKg1Q4kqNWYBvz7gFbHGtBqoA+erwxanQqt
1v8ZodWOBlqtG74Ot6mpqaGhgc7tq6qqysrKSkpKioMcPnz4UBsHgWmInUw7
nPc8NQE1BDUHNQo1DTWQvutt0b5OwLz2tQZotQPBNOCKgFbHGsHJwKdgPl4Q
K5gGXAS0Wu9nzMVk4E4GWh0n/wnS0tJCp/eNjY10nl/Xxv8DFiJ2OzUBNQQ1
BzUKtw7a1wOY1L5mA612INBqRUCrYw3cYwvogw49nryfso6AVusL3GPL4UCr
DYHHDANHYeCoYLSvA3HmqG8F0Gqn4du7a23b9oYIxUu6tVpeZ+hqPRy4xxbQ
gQ/vrkXuLIfiJX0KHGmFqf7QakwG7nCg1QAAYBLQaqfBWr1w4a9sVzNrgmxX
tmZZn4UIx6rVvM6wq/VJvhtaDXTAWt2x40Lb1czsIOFNSMimCD0+kPmKOjEp
MK8z7DFHrBNaDWwHWg0AACYBrXYa/slWRxLqUAWOSaujrtMPcg2tBjrwyd21
FG4bFs41a1fgqOtks4ZWA9uBVgMAgElAq50G37R6w4YHbVczU4OcWov8sv9q
1Gotnq5Ys+37wbzAratBrLBWd+q0wXY1My+0ODWjXYEjJakVUDU/aHUqbl3t
bKDVAABgEtBqp8Fa7e2bVod1ajJivgKabJci0qmpigurrDPSaj1s1tBqECue
z1aHOjWrLuem6YGKIMe0TnFttbrF275DTApotZOBVgMAgElAq52GH7LVCr0l
+dVSTV2EQ9cZdo6y0HV6dSozaDWIFW9nq0MNV1zyrF5NRYFDK4dOUxbrOj0Q
0GonA60GAACTgFY7Dc9nqxViq54vDh3UHba+Rk/nUOTK1Su7N6DVIFa8na1W
uG1Yp+ZQXFWtosBanDrsu0OrgV1AqwEAwCSg1U7Db1odtb4OrY66ToWt275P
zIjc3KU5OVM//vhju3s0cA233357WlpOSkq+7V5meChMWcWpOUItOGqdqOsM
HWFu+24xKaDVTgZaDQAAJgGtdhqe1+qojqwILdntWNepSFh7chw4tBrEioe1
WsdcYbFqddQVhibBbd8tJgW02slAqwEAwCSg1U6Dzmxzcibn5++y3cvMCIUj
a/FZhQKHWrOOdfJSPJWZ7fvEpJg5M6d37974dgPteFir5UwxPY51kbAKLL8a
NVWtcZ3eiPbt6djT2+7uDMIDrQYAAJOAVjsNX2m1xqXUb7Clb52eD2g1iBUP
a7UOBVa/b7XiVZWrquXwyQ22oNVOBloNAAAmAa12Gt7WalmQtc8Vpq7V+tbp
+cAgcBArXtVqfQqsrtX6BFl9nZ4JDAJ3MtBqECeftREIBP4TpFmCS+glUc3u
7QXAOqDVTsPb11brU2A5Hw2t1hjQahAr0GpFQKv1BWl1Zmam3d0ZhAdaDeJB
Fuqmpqa6urqampqqqqqKIPSAnlIhvSTLtd1bDYBFQKsdBTn16cc4zataLZ9S
aplbjANarSNwgy0QK9BqRUCr9QVpde/evenfmd09GoQBWg10I5y6ubmZ3Jkk
urq6mjoJFX4ThB7QUyqkl6gCVYNZA18BrXYIH3/88cKFC4cNG9a9e/eRI0+F
VssBrdYR0GoQK169b7VztFp9nZ4J1uqcIJBrpwGtBvoQTt3U1MQZ6sbGxkjd
jF7izDVVhln7iv3792/ZsiUvL0/7oaOkpOSf//wn/TV1w6wBWm07JNTz5s3r
HWTw4MFk1pmZZ/hBqzEI3NSAVoNYgVYrwnCt9k+2moWazfr222/H1SjOAVoN
9CHy1OzU9Fi9p1EFNmuRs7b7EwBzaWpqmjlzpvgHl56eTkcb9UXIvkeMGCEW
GTNmTGFhYaTKd911F1d74oknjN52w4BW24jIULNTZ2Zm0hlIVlYWrq1WBLRa
R0CrQaxAqxUBrdYXYsoy+h+X0wbS1g4BWg10wOnmlpYW6hJanJphs6ZFaEEk
rB3Ia9p4PUjUtS1btoz+r5122mmrV6+eNm1ahw4dRo0aRa4dqT79gzjhhBOS
kpKWLFmyYcOGn//857R4nz59amtrQyt/+OGHVJP/dW7cuDGuj20m0GrroY7E
P+OTQfduI2jTx6BXs7LOz81daruXmRFmzwTeTvMNtrx90+pWaDWIHTr4jBuX
k5SUa7uXGRtmaDVusBUpUlLy09KOZahFvxJpa5i1E4BWAx2I4d/l5eUqY79D
ocq0iBgKbvfnAMdhoFbv2LGDPHrQoEHU4lyyYMEC+jdHrh1pkRUrVigcefbs
2VTy3HPPKWrSUeiss87q2LEjrxNaDRg6aw3eP+sYmZmZLNTDhg2Tf88P/rw/
1ataTSYrn1VqFFt5kaj3rda4TlnGvefX+fm7cnImy2e2AETFq1qderwgJyRk
a1kkqgJDq8NGqFa3SmbNPx3b1cNBK7TaUJ588skJEyZ06dJlyJAhq1evrqio
yMjIuOWWW+zeLuPhVHVtbS19xli7HC1CC3LC2u7PAY4j1KCb2gh9SX1V7MiP
P/64KCkrK0tJSRk5cmSkRRYtWvSjH/1Izk2vX7+eVrJy5UpFzTVr1lD58uXL
H374YWg1aD1eqLOyshQDv+Vf8qHV6ouEarUZqu72gFYDHXhYq0mlY/XZqAos
r1Ojqrc7Htt3ixmRnHzsUoKwBx/xTxBpaxuBVhvFrbfeGvwWp06cOLFPnz70
ePLkyfSX/Nq8NyUzraqqOnLkyOE2DpnPwSAHDhzYvXt3aWlprF2OFqEFaXFe
jwUbDET3oK5CHSbSDxoGajUnmgsKCuRCcpxOnToFAgGN3fv666+nldA/CLmQ
ek6XLl3S09Npq6DVPke2aeHUIkktBn4rTjOCBRfZrmYmRazjwBXJ6LAKHOc6
bd8nhsemTRuDV+jj3BXEAGt1YmKO7WpmeCjGbJMyR10kqgLHOg5c4ene1upI
Bx8MCLcdaLUhbN26lb7CGRkZdM5PT5ubm3l4KvHmm2+a976kSIePxwJHIxcu
KioqLCzMy8traGiItcvRIrQgLU4rgVZbg6KTVFdXh+1OsjW/EUS3Vp955pnt
27enL4JcOGPGDPpGqMxCJrNz587ExMQhQ4aIYeTM9OnTxdcKWu1bQoVa4dSK
l+Rlva3VUbPPcij8N1J9LeotR0yV3RjQaqAPOvR4UqtTQxLW6hasUYHlClET
1u1CsH2fmBHqWt0Ks7YbaLUhjB8/nr7C8p7cu3cvlZBZhJ1wySjkPLWVWn3g
wIGCggISn6+++irWLkeL0IK0OCesLdhgoOgk1G3CdicDtbpv374nnXSSonD+
/Pn0pXjrrbeidmza5v79+yckJNA2yOWvvPIKrWHOnDn8FFrtZ+SrydSdWnF2
EfTxyfn5u2y3M5NCMclYJLFVCLh6ZY3rjKmmewNaDfRBB5+0tJyUlHzb7czw
UCSXVcw61KkjKbCipopZK6Tew1qdlJQ7blwUZYZZ2wi0On6am5vp/P/ss8+W
CwOBQMeOHTMyMkx9a3u1+v3339en1bQgtNpKYtLqpmho0epzzjmH/qkp5v2e
Nm0aFfKIDhWqqqpGjx5NNf/yl7/I5bS2oUOHduvWTdzSGloNFJN+yxdTRzqv
8LxWh/oyua2st1RBIb9RLTjqOsOu1pNOTZGbuzQnZyqmBgKx4mGtTg3ny4rR
4CTaYf1XRYFD64euM+wKVdbp6mCtjnrwgVnbBbQ6fvbs2UPf3yuuuEIuLCws
pMK5c+fKhSQUixYtImVISUkZO3bsmjVrtL8aFrsGgYtstb5B4MhWW0xMg8AN
0eo5c+ZQ/9+3b59cOGbMmM6dO6tPVdfY2HjeecfOzJcvX6546b777qPymTNn
vtQGX3x94403/u1vf6urq4v6fbEeaLUF0Jmqdqdu/e58w7O3ruYIHd2tgvp9
q/Wts52nb3KNu2sBfXhbq1MjZKLDon3W7kgmHoqOmdNcF4mJ4ecrC0Xc1Rpm
bSXQ6vihHUjf34svvlgu5Jv2rl27VpRUVlZmZGRQ4dChQydNmkTuTI+vuuoq
La9Gwq4py/jaauo8xcXFsXY5WoQWxLXVVhLTlGWGaPXKlSupAz/88MOihN46
OTl59OjRKksFAgG+dHrRokWhr1533XUq/093796tvkm2AK02Gz5zyMrKCnXq
SOLj7cnARWi04G3b3tCo1drXGXU9bg9oNdAHCc6pp3pzMnARWsyaM85yiSHr
VGSubd8VZgRptfaDD8zaeqDV8dPc3NypU6fevXuXlpZyydatW9mLd+zYIarN
nTu3neQLNTU1Q4YMad++Pc+WrP6q0yAvI72qrKzUp9W0IC2OG2w5DQNnAs/L
y0tMTBwwYICYcOzaa6+lHr5ixQpRhw4+zz//vDwx+DXXXEN16G/YddK36Ynj
mTdvHtX/5S9/SY/pKxP3DjAeaLXZiHOG0BnMIg2T84lWc6iIcHb2eXy3LO1a
HXWd8mq9Gn6+u9a2bd+F7StxKR6+x5YcZLgqKWYxijsmBVYxa3ovvo7b81od
9qbVUbsc3xQDZm0N0GpDuOqqq+grnJ6efvPNN8+ePTspKYmekmvLMyGTJvfo
0aOlpUWU7N2795lnnikqKor6qtPg+1ZTfzh48GB1dbX2/kaVaRFaEPetdiAG
ajWxfPly+haMGjVq1apV06ZNa9++/emnny6+EaTb3bt3pwovvPACl9xzzz38
r5C+QZdL3HvvvZHeYt26de1wbbWPYZWWbkgdZfi3wNuTgYcGXwdNwstB2qsw
Xy4JLY+6Tnm19NjbQs2xYcODPpyv7N//bs3OJg/6Pu68M+aV0CLyGvStxNV4
+B5boUGSSy7Mis2hmMSMnorQuE7FCjlDHec6XRRRpwGP1OvUf2oGBgKtNgSS
hcsuu6xz5850kp+WlkZn+2TW5557rqhQUVER/Bk/O+zi6q86EDLiQCBAZlRe
Xk7iTx9fS2ejalSZFqEFaXFotdMwVqupuWfOnCl+N05PT6ejjVyBviBdu3b9
4IMP+Ckd88P+EP2Tn/wk0lv85S9/oQpPPPFEnB/cPKDV5iGmZBElGp261Qez
liHMCx9OAy50mMyaHstP41+J38w6x7v32EKYHfq0ulX6dwmzNhtotYE0NDTw
LMfvvfcene0vWLBAvFRSUkIlF1xwQdgF1V91JiJhffjwYfrUZF7qPY0qUDWq
jFS1YzFWq5nCwsItW7bs2rVLHonBUB9Q3Njae0CrTSLsSYIYBx51cWg1Qnf4
cBrwsP7LyWuNZh1WokWhrwaEe37WMoR5kZiYo2Ua8Egdj/45+vPqFSuBVpvB
gw8+GDo2tX///v369ZNL6uvri4uL2SzUX3Ug5ETUGUi4ampqioqKPv300/Ly
8kjdjF6iClSNKtMitCC02oGEurMKdm+sO4BWm0GkaVi4XMspB08G7pPLqxHG
RjzzlX3cxqYg+lZiMUJ+FZALa5diXkloYjomN/cGPGtZcvIm2x0N4bqIab6y
UOTLpoBJQKvNgOcfy8/Plwt5iuMHHniAnwYCAb6REO9/9VediTDr2traw4cP
0+fdt2/fkSNH6uvrvwxCD+gpFdJLVIGqwamdDLTacKDVZhDp3IBtRcsafDVr
GcLA0DhfmezOtwcJnabeLSe3bL5hh2pr1+pI472Fm/sHn8xahjA8kpM3xTpf
WWjfc9fBx41Aq83g4MGDu3fvVshjQUFBWlpaYmLirFmzcnNzx44dS9aclZWl
5VXHIsya+kZFRUVRURFJ9IcffrgrCD2gp1RIL1EFODXwG9Bqw+Hh3/GPZPPb
rGUIQ0JxYbUWfQ6Li05rVa6A1phrVndnX40D5w4zbNgwXF6NiDV0X1gtEzon
CTAWaLWV0K6eOHEiz2yWmpp6+eWX0y7V+KpjYbNuaWlpbGykDa6uriaJLgtC
D+gpFdJLVAFODfwGtNpwjLISXF6N0BG5uUuzs8/nG9bEgyHfBWtQ0V4e2h1V
qyMNI5fX78mJy1iiQ39vIa3u3Dkbl1cjYoqkpNxx44z63+emX/bcBbTaenjy
rkiCqf6qYwkEAizXzc3NjRL0lIVavj0xAD4BWm0s/Eu7IecDwVOLKZs2bbTd
1BAuCnFhNWeo9Tm1i05o1S+gjkmrI1VTGWTuIsS4BfVBC/zqvHnzMGsZItaI
88Jqua9yb/TVvIuWAa0GxsJ+LYBNAz8DrTYQY0ev4fJqRKwR9sJqHXJNi7CF
GdKTTUV9/LZ6GlpRzRtaHdOwf64g5qmTV4LLqxExRfwXVstgVnDzgFYDAIBJ
QKsNxMBUNRM888Xl1QitoXLHat2ZayFfm9pwlG77U6vlCdtvb0NLIwqJjvoW
Obh7NSKWMOTCakUPzEHC2gSg1QAAYBLQaqMwY6IVXF6NiCmi3rFa48hw7fOb
KXTb+nNgbw8C1zHjnPwbSDwtgrtXI2KKeO5YHRajJv8ECqDVAABgEtBqoxA+
YuA6MQ4cEVNov2O1ulyH9kMd04mL9OgmiY8lDPmOWKDVhk9ZJu8EsWdul4hp
3xq7P+WNxDhwhMZISck36sJqGf4uIGFtLNBqAAAwCWi1IZh0T5C2mVswDhwR
PVRGgKv027ASp/E8NqwYajFuLQKuXRijanVUI9Zygy31lXx8PDpMWWXP2DIY
gLUa48ARWsLwEeCiE+YgYW000GoAADAJaLUhGH5VtQDjwBEaIzgCPDatFr1X
kbw2RN9CE7LaLwTWSG5ubqvqIG2NiWaVlLds3GKC4jiRddu8PH78YBw4QmMY
dWutUPgr45wvhQeAVgMAgElAqw2B//WbsWaMA0doDO0jwCMh5Nri9FBYAdfi
4LJWhx3CrZLIVhDJzeVJz1S0+vbjcawpxwR9EIwDR2gJM0aAi05o/RHJ20Cr
AQDAJKDV8WNeqroV48AR2kLHCPBIsBLGvx7LEAllhRSHHQFOlUWEXYlcHmnN
PgHjwBFawqQR4KITmvertT+BVgMAgElAq+OH/+mbZyIYB46IGrpHgHsDkVOm
B6zMnH0OTVWLmqFXUotFxEr4adQZzzwMxoEjogbPAW7yf0CMAzcMaDUAAJgE
tDpOLPgtHePAEeqRn78r/hHgbkf2ZRGhw79VtLpVMmsRfnbqVswHjogWycmb
zBsBLjohxoEbCLQaAABMAlodJ6aOABfwOHAkrBFhw8AR4G6HrJlD5XrqsIPA
Q9egvhKfwEaDceCISGHqCHABxoEbCLQaAABMAlodJ9b8u+dx4GRPthscwoGB
VDUwD4wDR6iE2alq0QkxDtwooNXAdj5rIxAI/CdIswSX0Euimt3bC4BWoNVx
Yo1W8zhwTFyGCA2kqoGpYBw4IlJYk6puxThwQ4FWA3uRhbqpqamurq6mpqaq
qqoiCD2gp1RIL8lybfdWA6AJaHU88Ahwa/7XY+IyRNjw+WRlwAKQsEaEDbMn
KxNAqw0EWg1sRDh1c3MzuTNJdHV1NXUzKvwmCD2gp1RIL1EFqgazBi4CWh0P
1lxYzWDiMkRoBFPVGAEOzAUJa0RocKrasoMPLq82Cmg1sAvh1E1NTZyhbmxs
jNRR6SXOXFNlmLWL2L9//5YtW/Ly8rQfOlpaWnbv3l1eXm7qhlkDtDoeLL7g
K3hagYQ14vvACHBgDXToQcIaIYdlI8AZXF5tFNBqYBciT81OTY/V+ypVYLMW
OWu7PwFQo6mpaebMme3aSE9Pp6ON+iJlZWWTJ09OTk7mRQYOHPjss8+KV88/
//x24aA1m/xR9AOtjgeLfz8PJseRsEZ8F7ivFrAMOvggYY0QYcF9tRRAq40C
Wg1sgdPNLS0t1Km0ODXDZk2L0IJIWBvOa9p4PUjUtS1btoyc97TTTlu9evW0
adM6dOgwatQocu1I9RsaGgYPHkyLUOU1a9YsWbKkW7du9HTz5s1cYdWqVVcc
z89+9jOqMHLkSMN2gdFAq3VjwR2rQ0HCGiECqWpgGeJOW0hYI1ItT1W34vJq
44BWA1sQw7/Ly8tVxn6HQpVpETEU3O7P4SkM1OodO3aQRw8aNIjai0sWLFhA
CkyuHWmRp556iiosXbpUlLz55ptUMnPmzEiL3HvvvVTh/vvvj+1zWgi0WjdW
Xlh9/JsiYY04FkhVAyshoyGTQsIaYX2quhVabRzQaqN48sknJ0yY0KVLlyFD
hqxevbqioiIjI+OWW26xe7scCqeqa2traUfF2mlpEVqQE9Z2fw5PEWrQTW2E
vqS+qhUrVpDwPv7446KkrKwsJSVFJbP8yiuvLF++vLi4WJSUlpbSSsaPHx+2
Ph2Oevbs2bt37/r6+hg/qHVAq3Vji1a3ImGNCAZS1cBikLBGcFifqmYwa5kh
QKsN4dZbb6Xz/9TU1IkTJ/bp04ceT548mf6SX+tbYV1d3ZIlS5566in1auSV
VVVVR44cOdzGITdwMMiBAwd2795N6hRrp6VFaEFanNdj96dxAaJ7UFehDhPp
5wgDtXr27NnU/wsKCuTCzMzMTp06BQIBjd8CsmxaycqVK8O+es8999Cr9913
n8a12QK0Wjd2aTUS1ghMAA5sAQlrhC2pagZabQjQ6vjZunUrnd5nZGSQ6NHT
5uZmHu9KvPnmm/rWWVJSQotfeuml6tVIkQ4fj90Cpwly4aKiosLCwry8vIaG
hlg7LS1CC9LitBJotRYUnaS6ujpsd5Kt+Y0gurX6zDPPbN++PX0X5MIZM2ZQ
r6aGU1mwsbFx6dKlN9xww9ixY2kNc+bMCXvMqa2tPemkk9LS0pycqv4cWh0H
dml1KxLWvg+kqoFdYEpwn4ddqepWaLVBQKvjZ/z48SQL8m7cu3cvlZAU0Mm/
vnVq1Go5T+0urT5w4EBBQcHOnTu/+uqrWDstLUIL0uKcsLb707gARSehbhO2
Oxmo1X379iXtVRTOnz+fevVbb72lsmBVVZWY4nvYsGH0zyXsMefOO++kCmvW
rFHfDNuBVuvGxolJkbD2cyBVDWwEU4L7OSy+V7UCTAZuCNDqOGlubk5ISDj7
7LPlwkAg0LFjx4yMDN2r9YlWv//++/q0mhaEVmsnJq1uioYWrT7nnHOoAyvm
/Z42bRoV8qAOFerq6srKyp555plJkyZR/enTpysqVFdXn3jiiWlpaVRTfVW2
A63Wjb3/4oPvPpkMy3bLQ1gcQadGqhrYBh18kLD2ZyQm5tiVqm61+3+uZ4BW
x8mePXvozP+KK66QCwsLC6lw7ty5ciHZxKJFi0aPHp2SkjJ27FhFoi0vL+/K
K6/s06dPz549L7vssl27dnl7ELjIVusbBI5sdUzENAjcEK2eM2cOdeB9+/bJ
hWPGjOncubP2ieZoO7t06ULroVaWy3k+tN/+9rca12Mj0Grd2PsvPjh90FQy
LNstD2Fl8PBvpKqBjdDBZ9y4Y3OX2W55CCuDU9U2zsUNrTYEaHWc0N6jM/yL
L75YLuQ79q5du1aUVFZWZmRkUOHQoUMnTZpEZk2Pr7rqKn71yJEj/fr1o5Lh
w4fzq3wD36ha7d4py/jaaup+xcXFsXZaWoQWxLXV2olpyjJDtHrlypXUgR9+
+GFRQm+dnJw8evToSIvccccdCxYsUGzbT3/6U1rP+++/L0po+7t3796rVy/n
p6o/h1bHge3XeQXPMaYgYe2r4OHfSFUDe+GENXmW7a6HsCx4pjIbDz7QakOA
VsdJc3Nzp06devfuXVpayiVbt25la96xY4eoNnfuXCpZtGgRP62pqRkyZEj7
9u15quRLLrmEXr355pv51ZKSkr59+2rRavdC9kSCVllZqU+raUFaHDfYMhYD
ZwLPy8tLTEwcMGCAuG/1tddeS116xYoVog4dfJ5//nkxMfh1111HFZ588klR
4eDBgyeddNKJJ54oH3Z4evB7773XsI9tJtBq3diu1Xy/G8xd5p/ATGXAIeBm
W34LG2cqE9g4TaiXgFbHz1VXXUXn+enp6eTFs2fPTkpKoqfk2vI0yCTRPXr0
aGlpESV79+595plnioqK6PHAgQN79eol79tHH33U81pNe4N6FKlTdXW19h5L
lWkRWhD3rTYcA7X68zb/HTVq1KpVq6ZNm9a+ffvTTz9dfClIt7t3704VXnjh
BS6hY1G3bt2oGn2J1qxZc9NNN/G96mQTr6iooDpuSVV/Dq2OA9Zqe385x9xl
/omgU0/G8G/gEDB3mX+CnDotzf5ZuKHVhgCtjh8yhcsuu6xz586kAGlpaevW
rSOzPvfcc0UFcgF6KTs7O+ziYV+ldvG8VgcCAXKr8vLyoqIi2odauitVo8q0
CC1Ii0OrjcVYrabGmjlzppjWOz09nXq1XIG+I127dv3ggw9ESfCasnH8wxQx
ZMgQ+jbJi9xxxx3x3A7eeqDVunHIgDTMXeaTwExlwGlgKLhPIjExZ9w4+33W
If9z3Q602igaGhp4iuP33nuPzvwXLFggXuJpvS+44IKwCx4+fJhevfDCC+XC
Tz75xNta/bmUsKY9QLuO3E29r1IFqkaVkao2CWO1miksLNyyZcuuXbvkoRoM
taDixtYMFe7Zs6e8vDzez+MAoNW6cci/+Lah4BdhKLiHA8O/gQMRc5dhKLiH
wwnDvxmH/M91O9Bqw3nwwQfJiDdu3CgX9u/fv1+/fnJJfX19cXExa0XPnj0H
Dhwov7p582Y/aDV1J1K2mpqaoqKiTz/9lEwqUkell6gCVaPKtAgtCK02nFB3
VsHujXUH0GrdOOdfPIaCezsw/Bs4Fjr4kHNhKLhXwyHDvxnn/M91NdBqw+HZ
yfLz8+XC6dOnU+EDDzzATwOBwHnnnUclvPMnTpxIjzds2MCvNjY2nnHGGZ7X
6s8ls66trT18+DDttH379h05cqS+vv7LIPSAnlIhvUQVqBqc2jyg1YYDrdaN
o67zwqzgHo7g8O+pDulpACjAUHCvRkpKvkOGfzO2TxPqDaDVhnPw4MHdu3cr
vK+goCAtLS0xMXHWrFm5ubljx44la87KyuJX8/LyUlJSkpKSyKOXLl06evRo
ns3J81r9uWTW1LsqKiqKiopIoj/88MNdQegBPaVCeokqwKmBu4BW68ZRWo1Z
wb0aublLMfwbOBk++JBZYyi4xyIpKdchw78ZaLUhQKstg/bzxIkTeWaz1NTU
yy+/nPanePWll14666yz2rdvT6+OGTNmy5Yt9GD27Nk2brBlsFm3tLQ0NjbS
PqmuriaJLgtCD+gpFdJLVAFODdwFtFo3jtLq1rah4LjI2kvBl1TjTBI4HJ4V
PCEhG2btmeBLqm+//Xa7O9f3QKsNAVptMTzvViQ3JIssKSmxeJMcQiAQYLlu
bm5ulKCnLNTiBscAuAVotW44R+Oosw4eCo6LrL0RQae+CNcSAldABx9cZO2Z
EJdUO+fgQycqTvuH61Kg1cBpsF8LYNPAvUCrdeNArW7FRdZeifz8XbikGrgL
XGTtjXDaJdWM04aHuRdoNQAAmAS0Oh4cOCZNXGQNs3Z14C7VwHWIi6xh1q4O
cmpHXVLNQKuNAloNAAAmAa2OB2fe7wN3snZ78DRlThsIAUBU+CJr3MnavcHT
lDnw4OPM/7ZuBFoNAAAmAa2OB/5H78DfzzF9mXsD05QBVwOzdm/wNGXOPPg4
cGyYS4FWAwCASUCr48GZl1czMGs3RtCpJyMpA1wNHXzIzsisbfdEhPZw4DRl
Aif/q3Ud0GoAADAJaHU8OPx/PSYGd1cIp3bg+AcAYgITg7srnOzUrbiw2lCg
1QAAYBLQ6jjhkWnOPBVphVm7J8TttHDqCLwBzNotIZzasQcfaLWBQKsBAMAk
oNVx4vx5VGDWzo82p8bttICngFk7P8ipExMd7dREVlaWw//PughoNQAAmAS0
Ok4cPg6cgVk7OeDUwMPQ4RFm7dhgp3baLaoVtN3bAvOVGQO0GgAATAJaHT+u
+I8Ps3ZmwKmBt2Englk7MFzh1K0YAW400GoAADAJaHX8OH8cOAOzdlrAqYEf
gFk7MPh6auc7davjJzBxHdBqABzOZ20EAoH/BGmW4BJ6SVSze3vB90Cr48cV
48AZNmvcdcsJ0TbvN5wa+AK+zrpjx4W2GyXC+XOUCTAC3HCg1QA4GVmom5qa
6urqampqqqqqKoLQA3pKhfSSLNd2bzX4Dmi1Ibjo/z7M2gmBe2kBH8JmnZiY
k5KSb7ta+jZc5NStGAFuAtBqAByLcOrm5mZyZ5Lo6upq+hpS4TdB6AE9pUJ6
iSpQNZi1o4BWG4JbxoEzwROVY2ZNcme7YPowFi78FZwa+BPq82zWJHe2C6YP
Iykpl/a/i/5bYQS44UCrAXAmwqmbmpo4Q93Y2Bjpi0wvceaaKjvKrPfv379l
y5a8vDzth47KysqtW7cWFBSofISysrK33nrr3XffbWhoMGhLTQFabQguGgfO
BM16Ksza4sjP35WbuzT4mwZOFIFPoYPPuHEwa6sjJSXfdU6NEeBmAK0GwJmI
PDU7NT1W/y5TBTZrkbO2d/tJ8GfOnNmujfT0dDraqC+ye/fuM844o3379mKR
0KMTfa4FCxYkJiZynYSEhMWLF7e0tJj2OeICWm0UrvtRnQfX5eRMhllb5tTB
Ccqm3H777S7qJwAYDh980tJg1tY5dWLisVnjXPTbbytGgJsDtBoAB8LpZrJF
+tJpcWqGzZoWoQV1JKxf08brQaKubdmyZaS9p5122urVq6dNm9ahQ4dRo0aR
a0eqv2fPnl69etEil1566dq1a3/5y1927NiR9JlcW652//33U50BAwYsWbKE
HmdkZNDTq6++OqZPahnQaqPgceBuPGnh6cFxqbWpISb9dlcPAcAk+OCD6cEt
CLfcSCsU56eq27U7FrFy552t2dnfLUuxcqXxG6YCtBoAByKGf5eXl6uM/Q6F
KtMiYih4TG9qoFbv2LGDPHrQoEG0PVyyYMEC8l9y7UiL/OpXv6IKq1atEiXP
PfcclUyaNEmUfPDBB+TaAwcOrK+v55KGhoZhw4aRfR84cCCmD2sN0GqjEMPV
3JWIpK0Vk5ht2PCg7frpyQgO/MbF1AAcBx98cKm1qZGUlOuiCcpknJ+qJjvW
odVCqGWzpseWAa02iieffHLChAldunQZMmTI6tWrKyoqMjIybrnlFru3C7gS
TlXX1tZSR4r1S02L0IKcsI7pTUMNuqmN0JfUV7VixQoy4scff1yUlJWVpaSk
jBw5MtIiI0aMSEpKEr7MDB06lNZTUlLCT5cvX05PN2/eLNeprq4+dOhQc3Nz
TB/WGqDVBsIJayefBkSi7VJrDAg3OMTAb9f93gKANeBSa5NCDPx26cHH4alq
4dQxabVYats2ZYllZg2tNoRbb72VzvZTU1MnTpzYp08fejx58mT6S35t6vuS
N1VVVR05cuRwG4eA+zkY5MCBA7t37y4tLY31S02L0IK0OK+HVii6B3UV6jCR
dNtArZ49ezb1/4KCArkwMzOzU6dOgUAg7CI9e/bs3r27Ytv4Aup///vf/PTi
iy9u3749qfdzzz13ww03/OIXv3jqqafKy8s1fl+sB1ptIK6eX0UMCMc8ZkaF
uDM1Bn4DoIIYEA65Nir4LlrjxrnsuiSBk1PVZMRyojkmreb6pNKKFSpc21Sg
1fGzdetWOvPPyMjgYajNzc083pV48803Iy1VV1e3ZMkSkoJ43poU6fDx2G2E
wADIhYuKigoLC/Py8hoaGmL9UtMitCAtTitRaDVTXV0dtjvJ1vxGEN1afeaZ
Z5L/KjLIM2bMoC8FbVjYRaZPn674ytD28/do48aNXDJ69OiBAweSXLeTOPnk
k/fv3x/D18ZCoNXG4t6ENSMGhMOs44m2Gb8x8BsATWBAuFEhz/jt3oMP/0Dt
wO2Xh3CLxxpRGTTOq7ImYQ2tjp/x48fTub28G/fu3UslpBW1tbWRliopKeHZ
meJ5azlPDa32DJyqLigo2Llz51dffRXrl5oWoQVpcU5YHwrRauo2YbuTgVrd
t2/fk046SVE4f/586vNvvfVW2EWefvppepWW+utf/0pb/vLLL59yyikszmvX
ruU6Xbp04W/Wfffdd/ToUfqM11xzDZUMHz48xq+ORUCrjcV1d9oKBWnrOEOe
ncyNYy8BsAukreMMOUnt3oOPk1PV8oDtWK+t5vqKVLX8ErTaFTQ3NyckJJx9
9tlyYSAQ6NixY0ZGhsqC0GoQCaHV77//vj6tpgV1a3VTNLRo9TnnnEPdWzHv
97Rp06hQZW6xVatWyWnofv368TxmJPhcoX///vT0tttuE4t89tlnWVlZVLhn
zx6tXxsLsVirt207NumliDgxZCWGQ+cz1OLOPCXQiDyPGcxae8hXUru6AwBg
F0hb6wv5Smq3H3wcm6puDaaVQy+L1kjYEeCMGAduAdDqOKGTeTqlv+KKK+TC
wsJCKpw7d67KgoZoNQaBexI5W61vELh6tlp9ELghWj1nzhzq3vv27ZMLx4wZ
07lzZ/WJ1Pbu3fvHP/5x4cKF69ato+287rrraD1FRUX86nnnnUdPX375ZXmR
e+65hwoffvjhqN8X67FSq+UpPkTovphI3yScFuDqK6xlkLaOSajbRn0jSQ1A
vIi0dUJCNuQ6qlDzdN9uT1IzTk5VK4BW+xPae3RKf/HFF8uFfMdeMXKVycvL
u/LKK/v06dOzZ8/LLrts165dCq0mCVq0aNHo0aNTUlLGjh27Zs2aqO+OKcs8
ibi2mr6excXFsX6paRFaMOy11VqmLDNEq1euXKlQXXrr5ORk6t6RFikoKKDN
lreN3uuUU07p0qWLKJk3bx6t9tlnn5UXJAcPdW2HYJlWy9Nd0n8QfbNohq7N
gVrd6s57WEcCcq1NqDHdNwAGgzHhWoSa70ntmYOPi+5TqU+rw6YSoNUuorm5
uVOnTr179y4tLeWSrVu3khfTef6OHTtENXKKfv368UWgkyZNogqDBw+Wtbqy
sjIjI4NKhg4dyhXo8VVXXWXDRwIOgOySpJJ6hT6tpgVpcRtvsJWXl5eYmDhg
wABx3+prr72WuvSKFStEHTr4PP/882Ji8Llz51KFRx99VFTgNPT8+fNFydtv
v00lP/zhD8V9uAoLC/v06ZOQkFBTUxPTh7UGa7Ra/PdR/E6re5oOfZNwWoZL
72EdCTq5bRsTPoXMGnItou0yaoz6BsAUhFmnpR0za8i1CNoVnhn1LXBRqroV
Wu1jSH7pVD89Pf3mm2+ePXt2UlISPSXXlqdBvuSSS6iQKvDTkpKSvn37ylrN
TrFo0SJ+So4wZMiQ9u3bK25RBHwC37eavnEHDx6srq7W/o2myrQILWjvfas/
b7vH9KhRo1atWjVt2jTqzKeffrr4UpBud+/enSq88MILXLJ3796OHTuSIF9/
/fV/+MMfsrOzaZHhw4fX1dXJq505cyYtlZmZuWbNGnqLk08+mZ469gbxVmp1
6Ngnff9KxOQejtXq1rbTA28krBlF2trnct0m1Bj1DYDpKNLWPpdrFuq0tBz+
F+OZg0/bvxjXXD8FrfYtZAqXXXZZ586d6fQ+LS1t3bp1ZNbnnnuuXGfgwIG9
evWS996jjz4qazVJdI8ePUiFRAWyjGeeeUZcVQp8BRlxIBAg9ywvL6c+QH1M
y9eZqlFlWoQWpMXt1WraGFZgJj09nY42cgX6jnTt2vWDDz4QJe+8886gQYPE
IhkZGbt27VKstqGhYeHChWTcXOekk06SM+BOwxqtVrmkKNYrrIWhW/lvSB9u
v9lWWHwu1/n5uyDUANiCz+VaDPn2zGXUCpw8U1lYoNU+h872eYrj9957j872
FyxYIF6qqKigkuzsbLk+7Xmh1WErAJ8jEtaHDx+mrkVuq/5dpgpUjSrrS1V/
brRWM4WFhVu2bCE7ln8yEh9QcWNrsQit/6OPPhLjw0Opqal5++23FddiOxAr
tTrsfxNOOoc17lDkfz3O12rPzF0WiiTXfrnmWrqGGkINgG0IufbPNddCqHnI
tycPPu4a/s3EqtUqZztWTsEKrTacBx98kBx548aNooRMh0ouvPBCudonn3wi
tJpnBb/gggus3lbgYEgY6etGSksKWVRU9Omnn5aXl0f6ItNLVIGqUWVahBY0
RKtVMOMjew8LtFrdf2O6vFr+r+R8rW711txloYTKNbmn7f5rmlAfs2mvntMC
4C5C5Zrc03b/NUmoOT3t4YOPS2cj0afVYc92cN9qV8NXSefn58uFPXv2HDhw
oFyyefNmeRB4//79+/XrJ1eor68vLi4Om84DPkGYdW1t7eHDh6lT7du378iR
I9Q3vgxCD+gpFdJLVIGq6Xbqz6HVJmC7Vmv/b6K4QNsVWi3OFtz1I3xMbAoi
RoaTgXojea1IT3MjuuusDwBvIw4+LNdkoN5IXivGe3v+4OPSC6Zi1Wo+aQl7
thPTsL04gVYbzsGDB3fv3q3wmokTJ5JEb9iwgZ82NjaeccYZslZPnz6dnj7w
wAP8NBAI8C16tbQO8DDCrOnbV1FRUVRURBL94Ycf7gpCD+gpFdJLVCEepwZm
4BatDv3/5QqtbpWmYfHwSRETmrx2o1+zTSM9DYCLCE1eu9Gv2ab9kJ6Wce/0
njpGboedZ8bKEeCt0GqryMvLS0lJSUpKIo9eunTp6NGjeRpkodUFBQVpaWmJ
iYmzZs3Kzc0dO3YsvZqVlWXvZgMnwGbd0tLS2NhI38Hq6mqS6LIg9ICeUiG9
RBXg1E7DLVod+s/ILVrd6ubTBh0cn7z+Pn/t8PHhx9v0d1dP++GcFgDPICev
KRISsl2Rv1bkpnk6Mm+npwWu/tlZXYf5JcW5TejNRsWZjDWp6lZotYW89NJL
Z511Fs9gPGbMmC1bttCD2bNniwrUEBMnTuQZxVNTUy+//HLa4TZuMHAUgUCA
5bq5ublRgp6yUKtM8AXswhVaHfb+XC7S6lbXDnKLh1C/dloKm6f1Pn6kN2wa
ANej8GsyVqelsEmlaWNCbdpXBx+3XySlQ6vlpeSw5qpqBlptMRUVFSUlJSoV
eD5n5BxBJNivBbBpJ2O7Vke9pEj+dVcOcd9qfqr9Fl224Pbzh3iQ/DqMYluZ
xab3krLSF4nENI8l8El6CAD/IA4+JK2him3lLGf0XmKMN6u0YqS3Dw8+bv+1
mc466DwkkhHzS5Hm/RYnMPTA4rMXaDUAAJiE82+wFfan3dCwbACVblw92s0Q
6IOHU+zJbNk8VpxFO37X5pWIfPTxHj1FqLSvckMA+BbFwYcVm8SWLZvHirNo
x+/avBKRj1Z4tFBpnx98fHVtlKOAVgMAgElYo9XszmG1OqoUix+EQ0P82Bvp
N2GngRMJgTjL5YRFkKmSaH/n2qzbHCzdYUPUadPni0Ik+nuPRlYaAD8TevAR
uWyWX3Zt1m0Olu6wIeqwPguDpqAVKjwaBx8GPzLbCLQaAABMwkqtVrnISAfu
urZa4O07WceDfK4ruXZOmxRPzcw8gyI7+/w2+5ZjqhTfIZ/H4uQNABCJSAcf
lmIh3Yro3z+7Y8eRKSkDBg/OFPqMg09UhFO7d/i3q4FWAwCASVij1WHnuow0
ASaV8+XSGtfpOmDWMcHnpbS7MjMzFy5cuCkcH0vYvb0AAC8gH1XCHnbWr18/
YMCAHj16ZGVl+XxEt3b8PM2IQ4BWAwCASVij1a0hM4/JQ7gj1VTHvVqN8wod
0Ikr9hgAwFEsXLiwd+/emZmZPrnHdJzgf58TgFYDAIBJWKbVreEmHws7habn
tboVZxcx4vYJYwEAnoSO5MOGDSOz5t/9cJhSAf/1HAK0GgAATMJKrWZ4jDf9
dfgtscwG5xgaERfi2b0hAACgZP369b2DiAurcUgPC34ddQjQagAAMAnrtRoI
MHNLVLCLAAAOZ+bMmaTVw4YNk6csw4BwGcwo4hyg1QAAYBLQanuBNqqDnQMA
cDh0gOKENV9kjbS1DE84Cad2DtBqAAAwCWi17cCsI8F7BrsFAOBkyByzsrLY
rMVF1jiqt0rXOsGpnQO0GgAATAJa7QRg1qHgkmoAgFvgOwAqhoL73Cjh1M4E
Wu1hPmsjEAj8J0izBJfQS6Ka3dsLgNeAVjsEmLUM5nMDALgIPmTxrOCKoeD+
PJThP5pjgVZ7FVmom5qa6urqampqqqqqKoLQA3pKhfSSLNd2bzUAngJa7Rzw
2z4DpwYAuA46bouh4D43azi1k4FWexLh1M3NzeTOJNHV1dXUfFT4TRB6QE+p
kF6iClQNZg2A4UCrHYVs1v6cSBZODQBwI3zsUjdrP/xkSoduvsAcx3BnAq32
HsKpm5qaOEPd2NgYqQPQS5y5psowa2A4+/fv37JlS15envZDh5ZFWlpadu/e
XV5ebtBmmgW02oHwvKn+PC3xz8knAMBj8OGLL7KOZNaEV38yFZN++/Ofl1uA
VnsPkadmp6bH6n2AKrBZi5y13Z8AeIGmpqaZM2e2ayM9PZ2ONvEvUlZWNnny
5OTkZK4zcODAZ5991rQPES/Qamfiz0F0uA8LAMC9CKkMa9Y8BsnDTu3zoVZu
AVrtMTjd3NLSQo2lxakZNmtahBZEwtq3vKaN14NEXduyZctIe0877bTVq1dP
mzatQ4cOo0aNInGOZ5GGhobBgwdTHXp1zZo1S5Ys6datGz3dvHmzAZ/fBKDV
jkWYtYezGzJwagCAqxFqKZt1VlaW5w/g4r8VDuDOB1rtMcTw7/LycpWx36FQ
ZVpEDAW3+3MAGzBQq3fs2EFSPGjQIOpXXLJgwQLyXxLneBZ56qmnqGTp0qWi
5M0336SSmTNn6v3Q5gKtdjg+GVMHpwYAeABxxGaz5my1h4/eGPjtOqDVhvDk
k09OmDChS5cuQ4YMWb16dUVFRUZGxi233GL9lnCqura2lrYh1s5Ai9CCnLC2
fsuB7YQadFMboS+pr2rFihVku48//rgoKSsrS0lJGTlyZDyLvPLKK8uXLy8u
LhYlpaWltNT48eP1fGDzgVY7H28PCMf85wAAzyAnrOmY5p+jt+cz8p4BWh0/
t956K53Yp6amTpw4sU+fPvR48uTJ9Jf8OtIidXV1S5Yseeqpp3RXYMh/q6qq
jhw5cjjIoUOHDh48eODAgd27d5NuxNoZaBFakBY/GOQQ8AqH26CuQh0m0s8m
Bmr17Nmz6StQUFAgF2ZmZv7/9u48Por68P844ZQgoAhyyFEVEcQgoiCoiCjg
jVqPIqBiPVrPemB9gIBasR5tbcEDUjwQrXhQFSogCBSVLyHkZxLOpOQm2Zy/
JCR8V0DRfN/f/TyY77ibbDabDEl2Xs8/8pj5zGdmP/OZg3kzs7Pt2rXzer0N
NYsoZWuup556Knh7GguxulmwPxAeSZdnPDoIIMJYd29N0ozIs5z9JnUkrZcb
EKvrae3atbqqHzRokNKoRisrK82Tq7JmzZqa5srJyVGFm2++OewKhiJSpo0C
VFpaWmpqakJCQnl5eV13Bs2iGTW7FkKsjiSZP1dUVFTt7mRPzat8wo7V55xz
TlRUlA4He+F1112nvVo7WD1n2bdv3/Tp0++///6RI0dqlilTpjTZ8xKxuhmJ
sHDNo4MAIo+5h2s/rdlvYUfA6c7+HwXcpG52iNX1dOGFF+qy396H27ZtU4mu
9ktKSmqaq6FitXWf2orVSvcpKSlbtmz5/vvv67ozaBbNqNnNDevGzoJoMH6x
WrtNtbtTA8bqnj17dunSxa/w7rvv1l69fv36es5SWFhovS28f//++jeoyZ6X
iNXNi/alCEij9jsdXJUBiDA6swUWRsAD4RH2/wPuRKyuj8rKylatWg0fPtxe
6PV627RpM2jQoCAzOh2r4+LiwovVmpFYHXnqFKsrahNKrB4xYoR2YL/3fk+c
OFGF5rmOes5SWlqal5f33nvvTZgwQRWuvfba4O1pLMTq5qhZ37ZeuHDhmDFj
uNMBIFLVdGZrvsna76lvTt3NF7G6PpKTk3VJP3XqVHthamqqCm+99VZ7YUJC
wu23396jR4+uXbvecsst8fHxfqm51grVCnwI3LpbHd5D4Nytjkh1egi8QWL1
lClTtAPv2rXLXnjWWWe1b9++pm92hzGLaF06dOigGbXHBm9SoyBWN1/mCs1E
1GZxkcY7YwG4XLP7T1ECdYQhVteHuk7X8zfeeKO90Pz27vz5862S7OzsXr16
qfC0006bMGFCdHS0+e1dKzXXWqEmga8sM9+t1mbNysqq686gWTQj362OPHV6
ZVmDxOqnnnpKO/CCBQvsR8ExxxwTExNTn1lmzZp13333+bX/8ssv14xxcXHB
m9QoiNXN2vs+Tf8ijQszALA0u/N2U24n6oRYXR+VlZXt2rXr3r17bm6uKVm7
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
fhXqWr/q57E6lIYRqwEAAGBHrA5OF9utWrXKzc01o3Pnzj377LPXrl174Eis
Vi7+5JNPzNRXX33V/lj4rl27WrZs2bVrV/Mrtwd896NV4YILLjCjL7/8skbN
7ErEim9t2rQ57rjjTCe/8847mvrmm2+G0s5aY/Wjjz7avXt3LVB/+/fvv3v3
bhVeccUVSkmPP/74iSeeeN5555maiYmJl1122fHHH3/sscdedNFFmzdvNuXb
t2/XjAsWLPjlL3/ZqVMnVZg2bVpRUZH1EfHx8YonHTp06NKly3XXXae1NuXq
Fs2oPtTwWWed1bFjRzVDJddcc42pMHHiRHtuTU5Onjx5co8ePbQcfdZXX31l
TTINfu65504++eS2bduOHDkyISGhprhqKs+ZM0eLUoMfeOCBwsLCu+666zif
SZMmlZSUmJrFxcUPPvhgv379tK3PPPPMefPmmfIvvvhC7VRro6OjNWDKTT9o
ePz48e3atXvxxRftq5CXlzdkyBBNsjaE9oeYmJicnJz6xOoZM2b07NlTLdHf
AQMG7N27V4XqQK3OrFmztILaqUzNPXv2XHXVVeo69fMll1yybds2U56ZmakZ
Fy9erPZ07txZFe655x6lQusjdu7cOW7cOG107bE33XRTQUGBKX/jjTc0o1ZH
w8OGDVNPap9XiTaNqXDDDTeon63lpKen33777b169TrhhBP0WTrDWJNMg//y
l7+ceuqp6roLL7xQ+2GQtV64cKF2Sx0Uw4cPj4uLU8c+++yz9kX5rftHH32k
FmrH6NOnz5133un1eu3rrgNKq6xNr1l+85vf6HixPsjE6kWLFg0cOLB9+/Zj
x47VwRukYcRqAAAA2BGrg9P1vLLMu+++G3j9bGK1EpNV4vF4lDjOOOMMM6pE
rArKzva5dPWuy36FKQ3v2LFDFRR4NWzuRWpYfxUkVXL33XdrWJ8SSjtrjdVL
ly5V/NEC9feJJ55QLlPhoEGDFBgVNBQJn3/+eZUoJisNKTIrdygcaUARTAvX
JAVYza5UpaTz0EMPKRlpVEnELF/rrkTWu3dvBR9FVGUTJWgz6Q9/+INqKtpo
ePbs2fpQ9ZLa8Ne//tVUOPvss5WwzHBWVtYpp5yiRU2dOlXJ6AQfZUMzVfMq
LSpaKiObhweuvPLKmuKqqawA/sgjj4wYMUJtULbSwtXJY8aMMb1tak6ZMkWj
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
N23aFBsba33N2WSx1atXVwbE6ilTpkRFRZnXoAVmUiWpVq1abdmyxYqcinhX
X311tQ1ukFj9z3/+Uwux3p+2c+dO0/lWzejoaEV7azSUWK1uVPZUwzp06ODX
w4FCjNXmlVwmIxuB0VKBWnWsd1ybl6eFEquTkpKWLFlifc3ZfKf+q6++qgqI
1dOmTdMhYF6DZthj9cMPP9y6dWsFWzPq8XiOP/7466+/vtoGB4nVoo3Vpk2b
lStX/vTTT1rOsGHDgsfqY4899pJLLjHDmsUcufZYPXjwYB0ppsKCBQvMfzGZ
UWI1AAAA6oNYHZyy87XXXtu2bdsWvt/SOuOMM7788kszKScnp0XA70r37dv3
1FNPtUa9Xq8CtbkZrbhx/vnnK8T5fcTs2bM1dfr06VaJea3Zn//859DbGUqs
VlhWYo2JiXnttdcKCwsDg6foQ1v43sO2dOnSGTNmtGvXLsRYrfqaOn78eIV3
pd2BAwcqUVb7yrJXXnlFo5MnTzbv0PbLpNohlaN/8YtfKBIq3Km16vw1a9aY
qU7EavP74KeffvqiRYvUMyeffLJfrFZYU7J+9tlnt27dWm0/+K2C+e+Lp59+
WsPPPfecefy4po1SGXKs1vbVLjR06NC33nrL/HRUYLQ0P/GmffKzzz5TA445
5pgQY7Xqa+oVV1yh8K7togSqlFrtK8vM1xNuv/32devWmRJ7rE5JSVGO1g6v
rRwbG6vWahf65ptvzNQ6xWrtMF27dlUFtUR/zc3oILF6zJgx6h/twDrEFOQD
HwLXzq/9U73xzDPPtG/fXlvf+s8BYjUAAADqg1gdCq11ampqaWlp2EtQPK/P
7LUKJVbLww8/bL43nZycrNEzzjhDQcNeoaSkRKFM8UR1evXq9dJLL7Xwfem7
0hd4Nfz6669blRWrrVeW6XMVnzt37mzijHLZhg0bzCS/WK10f/7555sb9KZk
2LBho0ePtha7du3aESNGKARFRUWpzvvvv29N8mvwhx9+qOVYoduPX2Utc9So
UdaoJqmCGV6wYIGyvBbVpk2bGTNmDBgwQAHTqqmYZp4fMEk5sB/sq1BQUNCz
Z8+BAwdqc1f6XjmurujUqVNGRka1jawMOVbLE088Yb43nZ6ertGYmBi1017h
4MGDt912m9ZCdXr37j1//vwWvp+Hq/IFXg2//fbbVmXFauuVZT/++KPis+kE
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
1SM=
     "], {{0, 451.}, {654.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{654.5, 451.},
   PlotRange->{{0, 654.5}, {0, 451.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`stratx = 2, $CellContext`stratx = 
     2, $CellContext`stratx = 2, $CellContext`p1 = 0, $CellContext`p2 = 
     0, $CellContext`p3 = 0, $CellContext`p4 = 0, $CellContext`straty = 
     14, $CellContext`straty = 14, $CellContext`straty = 14, $CellContext`q1 = 
     0.24, $CellContext`q2 = 0.37, $CellContext`q3 = 0.96, $CellContext`q4 = 
     0.03, $CellContext`graph = True, $CellContext`seed = 32}},
 CellTags->"Snapshot",
 CellID->631504707,ExpressionUUID->"7b4de994-cd07-47ea-abdc-0646ddac6d1d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"69535d45-f463-473a-bc04-2629e2673ff1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5811a7fa-4767-4caf-b849-058cc0e63716"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"c7b44c1c-d5d8-4f9d-9786-b2ca3da47bd0"],

Cell["HaeJin Lee", "Text",
 TaggingRules->{},
 CellID->821630786,ExpressionUUID->"24fcbf60-b7dd-4d5b-8a3b-95636c1e8caa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8fbeb7fa-0696-41d8-b251-0619502a2898"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"76de8881-92ae-43b8-bb3a-130183ac5242"],

Cell[TextData[{
 "Memory-one strategies in the IPD are determined by a strategy vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "cc"], ",", 
     SubscriptBox["p", "cd"], ",", 
     SubscriptBox["p", "dc"], ",", 
     SubscriptBox["p", "dd"]}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"0ef939d7-78c3-446d-a18d-168079646693"],
 " whose components represent the probabilities that the player cooperates \
given a particular pair of actions by the two players in the previous round. \
These strategies can be modeled by a Markov chain on the four states cc, cd, \
dc, dd (see[3]). In this demonstration, player X's strategy vector is defined \
as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "cc"], ",", 
     SubscriptBox["p", "cd"], ",", 
     SubscriptBox["p", "dc"], ",", 
     SubscriptBox["p", "dd"]}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"3e2af27a-8db3-4a60-8c5d-501b621c33f0"],
 ", and player Y's strategy vector is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["q", "cc"], ",", 
     SubscriptBox["q", "cd"], ",", 
     SubscriptBox["q", "dc"], ",", 
     SubscriptBox["q", "dd"]}], "}"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"0bb6e7fc-b662-42e3-9997-d84dd8e960d6"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.7980496612571087`*^9}, {3.7980504115787992`*^9, 
   3.798050437872877*^9}, {3.798050855526759*^9, 3.798050858220416*^9}, {
   3.798289127865287*^9, 3.798289148283093*^9}, 3.9263335172708473`*^9},
 CellID->494920088,ExpressionUUID->"31b22aed-42ca-4e69-ab41-95c56768c370"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "cc"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "01291b64-df48-47e0-adfe-bf5430d87025"],
 " represents the probability of cooperating by player X if both players \
cooperated in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049670691203*^9}, {3.798050346675414*^9, 
   3.7980503473586893`*^9}, {3.798124350420331*^9, 3.798124361956623*^9}, {
   3.798289195873782*^9, 3.798289196193796*^9}, {3.798291855036677*^9, 
   3.798291855258629*^9}, 3.926333517313232*^9},
 CellID->521810606,ExpressionUUID->"2b553070-e302-4890-bdfa-dca00bb0d637"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "cd"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "ba9a741d-e59e-4575-8fb1-6d22ec3cd362"],
 " represents the probability of cooperating by player X if player X \
cooperated and player Y defected in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049717372798*^9}, {3.798124370427989*^9, 
   3.798124381085423*^9}, {3.798289199481306*^9, 3.7982892036906223`*^9}, 
   3.926333517351376*^9},
 CellID->1689201208,ExpressionUUID->"8cbd485b-8764-462f-9381-c375d31f5c08"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "dc"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "43951252-dd20-47f0-a4c7-d56bc0b25609"],
 " represents the probability of cooperating by player X if player X defected \
and player Y cooperated in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049683127249*^9}, {3.798049726651363*^9, 
   3.7980497421454773`*^9}, {3.798124385261609*^9, 3.798124396438979*^9}, {
   3.798289211273262*^9, 3.7982892150982656`*^9}, 3.926333517394087*^9},
 CellID->707088061,ExpressionUUID->"30021349-f11c-48be-98fc-b2d528cacc44"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "dd"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "3e695e42-d2e4-475f-bb92-5a8d4df1fd36"],
 " represents the probability of cooperating by player X if both players \
defected in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049689374189*^9}, {3.7980497459091387`*^9, 
   3.79804977334898*^9}, {3.798049891336369*^9, 3.798049891336503*^9}, {
   3.7981244002777023`*^9, 3.798124408982709*^9}, {3.798289219841827*^9, 
   3.7982892203538103`*^9}, {3.79828925431479*^9, 3.798289254513977*^9}, 
   3.926333517428343*^9},
 CellID->1071308970,ExpressionUUID->"3537c479-2381-4b84-bae6-8a72c590b28c"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]], "InlineMath",ExpressionUUID->
  "770a5cf3-e069-432b-8031-1cdd51e7f68c"],
 " are like the ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]], "InlineMath",ExpressionUUID->
  "1093b14a-5ca9-4d7d-b4ae-0815c73c9e38"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049689374189*^9}, {3.7980497459091387`*^9, 
   3.79804977334898*^9}, {3.7980498924774237`*^9, 3.798049892477562*^9}, {
   3.798049957365761*^9, 3.798049986928556*^9}, 3.79805143620842*^9, {
   3.79805162070268*^9, 3.798051630537472*^9}, {3.7981244188304768`*^9, 
   3.798124423070478*^9}, {3.798124523785852*^9, 3.798124542226433*^9}},
 CellID->1976413245,ExpressionUUID->"4d8588ad-444d-4aa2-8d67-c13c1a75c115"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "cc"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "9ad657bf-d748-49d4-98a3-3776b4ffcb6a"],
 " represents the probability of cooperating by player Y if both players \
cooperated in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049689374189*^9}, {3.7980497459091387`*^9, 
   3.79804977334898*^9}, {3.798049892866909*^9, 3.7980499011578417`*^9}, {
   3.798050937703293*^9, 3.798050959653902*^9}, {3.798051004359869*^9, 
   3.79805101004344*^9}, {3.798051076647256*^9, 3.79805108713177*^9}, {
   3.798124443144978*^9, 3.798124453300015*^9}, {3.798289227185052*^9, 
   3.798289227746443*^9}, {3.79829186170835*^9, 3.7982918619467793`*^9}, 
   3.926333517478765*^9},
 CellID->888969730,ExpressionUUID->"4aa2a6eb-c80f-48e3-b6b9-84b4f75d18b0"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "cd"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "44794231-c22e-493e-bbb8-ed99fb4f6dad"],
 " represents the probability of cooperating by player Y if player Y \
cooperated and player X defected in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049689374189*^9}, {3.7980497459091387`*^9, 
   3.79804977334898*^9}, {3.798049892866909*^9, 3.798049920015604*^9}, {
   3.798050972740816*^9, 3.7980510124963293`*^9}, {3.7980510608193827`*^9, 
   3.798051066466123*^9}, {3.798051409970677*^9, 3.79805141299286*^9}, {
   3.7981244565758133`*^9, 3.798124465408724*^9}, {3.798289231577694*^9, 
   3.79828923441051*^9}, 3.926333517527317*^9},
 CellID->1074468897,ExpressionUUID->"165844e4-8bf3-40b4-9a19-3e17349e7533"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "dc"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "58c22d29-fdda-4b2b-bd79-7f96273490a1"],
 " represents the probability of cooperating by player Y if player Y defected \
and player X cooperated in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.7980489871781683`*^9, 
   3.798048987178463*^9}, {3.798049406145466*^9, 3.7980494351659193`*^9}, {
   3.798049486243657*^9, 3.798049689374189*^9}, {3.7980497459091387`*^9, 
   3.79804977334898*^9}, {3.798049892866909*^9, 3.7980499377523746`*^9}, {
   3.798051015985989*^9, 3.798051058216002*^9}, {3.798051414801713*^9, 
   3.798051417756*^9}, {3.798124469119965*^9, 3.7981244943456087`*^9}, {
   3.798289238513986*^9, 3.798289241754713*^9}, 3.926333517570191*^9},
 CellID->1027685465,ExpressionUUID->"407b36bd-0fd7-462c-9005-55f4e6e31abe"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "dd"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "3c6ff4b0-2ace-4bd3-9c07-4271e426bf72"],
 " represents the probability of cooperating by player Y if both players \
defected in the previous round."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.798049992098068*^9, 
   3.798049994857812*^9}, {3.798050923732959*^9, 3.798050926210079*^9}, {
   3.798051024523905*^9, 3.798051046705638*^9}, {3.798124498872898*^9, 
   3.798124512257709*^9}, {3.7982892456583967`*^9, 3.798289247858728*^9}, 
   3.9263335176174307`*^9},
 CellID->1749089212,ExpressionUUID->"5f8421cb-3e14-4944-b0d0-133ea7d0a5c3"],

Cell["", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.7909722781888123`*^9, 3.790972278188983*^9}, {
   3.7919032763942623`*^9, 3.791903276394733*^9}, {3.791903643328326*^9, 
   3.791903791393961*^9}, {3.794324524963653*^9, 3.79432452503559*^9}, {
   3.794324725992031*^9, 3.794324727761321*^9}, {3.794324760258717*^9, 
   3.794325063807252*^9}, {3.7943251104868727`*^9, 3.794325639399035*^9}, {
   3.794325894262989*^9, 3.794325931535357*^9}, 3.794520400069727*^9, {
   3.797865762880074*^9, 3.7978657650396957`*^9}, {3.797865817164535*^9, 
   3.797865851484612*^9}, 3.797865957125705*^9, {3.798049992098068*^9, 
   3.7980499939973183`*^9}},
 CellID->659877920,ExpressionUUID->"7d83740e-a8a8-4da6-949d-0f4e05b283b7"],

Cell[TextData[StyleBox["Controls",
 FontWeight->"Bold"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7978659597370787`*^9, 3.79786596091346*^9}},
 CellID->744384336,ExpressionUUID->"11de200d-3a3b-43b3-adb3-bb1f287341f1"],

Cell[TextData[{
 "All-c: the player always cooperates. Strategy vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], ")"}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"c76e1337-c293-4af8-a4d3-ba19dbb8b20b"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083337389717`*^9}, 
   3.7907084727567663`*^9, {3.797865974098551*^9, 3.797865995945498*^9}, 
   3.7978660741003027`*^9},
 CellID->266951856,ExpressionUUID->"3fca8f23-3594-4fa6-9996-1fad016cebc7"],

Cell[TextData[{
 "All-d: the player always defects. Strategy vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], ")"}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"64440575-235a-40b9-861b-742edddfe067"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.79070833620292*^9}, 
   3.790708475122951*^9, {3.797865981489861*^9, 3.7978660114697638`*^9}, 
   3.797866075180263*^9},
 CellID->1634411865,ExpressionUUID->"23a812cd-ffb4-4fe9-8b2f-07ee465d527b"],

Cell[TextData[{
 "TFT (tit for tat[2]): the player cooperates if the opponent cooperated in \
the previous round and defects if the opponent defected in the previous \
round. Strategy vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], ")"}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"4885234d-b95e-4d2c-b684-92d69196a185"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.790708338469008*^9}, 
   3.790708485333709*^9, {3.790709065595976*^9, 3.790709072977168*^9}, {
   3.7943246701046886`*^9, 3.794324675781543*^9}, {3.794325720015252*^9, 
   3.794325747615163*^9}, {3.797866013879188*^9, 3.7978660464685793`*^9}, 
   3.797866076800418*^9, 3.798289270266914*^9, 3.9263335176661367`*^9},
 CellID->235624632,ExpressionUUID->"28d3a926-6955-4bf3-9319-88fa064d87c6"],

Cell[TextData[{
 "GTFT (generous tit for tat[2]): the player cooperates after every instance \
of an opponent\[CloseCurlyQuote]s cooperation and after 25% of the opponent\
\[CloseCurlyQuote]s defections. Strategy vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "0.25", ",", "1", ",", "0.25"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "d6fc17c1-ce4e-44ab-9bda-ee119f3d3600"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.790708348152165*^9}, 
   3.790708488111403*^9, {3.790709053251608*^9, 3.790709054944125*^9}, {
   3.794324679191251*^9, 3.794324687803554*^9}, {3.7943257627509947`*^9, 
   3.7943257685188417`*^9}, {3.797866049372951*^9, 3.79786609832101*^9}, 
   3.798291915732605*^9, 3.926333517699751*^9},
 CellID->551686412,ExpressionUUID->"bd079992-a75c-4cb1-9192-24b04627ea78"],

Cell[TextData[{
 "GEN-2 (generous zero-determinant strategy[2]): strategy vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "0.5625", ",", "0.5", ",", "0.125"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "ec8a854f-a918-48b0-9963-ace1e5e8022f"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083824812603`*^9}, 
   3.7907084899784822`*^9, {3.7907090024049397`*^9, 3.79070904297989*^9}, {
   3.794325779373602*^9, 3.7943257832463093`*^9}, {3.797866107872695*^9, 
   3.79786612992284*^9}, {3.7978661700629177`*^9, 3.797866194271882*^9}, 
   3.9263335177411137`*^9},
 CellID->1372396245,ExpressionUUID->"8b791bc5-4df2-4e50-99a3-c3a952fde651"],

Cell[TextData[{
 "SET (equalizer strategies[1, 3]): a family of strategies that set payoffs \
for the opponent. For example, SET-2 forces the opponent\[CloseCurlyQuote]s \
payoff to be 2 regardless of what strategy the opponent uses. Strategy \
vectors: SET-2: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.75", ",", "0.25", ",", "0.5", ",", "0.25"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "bffc0860-424d-4d2c-9dce-38f5df3645cc"],
 "; SET-2.5: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.9", ",", "0.5", ",", "0.5", ",", "0.3"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "46ada2a0-a614-47bf-9b05-b7601aa4834a"],
 "; SET-3: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"1", ",", "0.9", ",", "0.15", ",", "0.1"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "66e96423-946d-492d-9b1c-5b604f45271a"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.7907083571843348`*^9}, {
   3.790709060174404*^9, 3.790709093431677*^9}, {3.7943257862004757`*^9, 
   3.794325791008285*^9}, {3.797866205264997*^9, 3.797866255910776*^9}, 
   3.797866855202324*^9, 3.926333517775868*^9},
 CellID->1670466295,ExpressionUUID->"d36dfb0f-abe5-4a15-8e0e-8fba0acfcfd9"],

Cell[TextData[{
 "EXT (extortionate strategies[1, 3]): a family of strategies that guarantees \
the player a higher or equal payoff no matter what the opponent does. \
Strategy vectors: EXTORT-2: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.875", ",", "0.4375", ",", "0.375", ",", "0"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "ee531de9-c5e0-490c-803d-88bcc4b6d225"],
 "; EXTORT-3: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.8", ",", 
     RowBox[{"0.55", " ", "0.3"}], ",", "0"}], ")"}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"ad202dc3-8f4c-4b15-9629-868ee8329428"],
 "; EXTORT-4: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.7", ",", "0.15", ",", "0.4", ",", "0"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "fff7854c-7d11-439a-aeb3-2bbe694faa13"],
 "; EXTORT-5: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"0.68", ",", "0.16", ",", "0.36", ",", "0"}], ")"}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "73c5c918-e1fd-4086-b087-2787b16a2b78"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790705602473497*^9, 3.7907056240279284`*^9}, {
   3.7907073243092213`*^9, 3.790707328882415*^9}, {3.790708261571653*^9, 
   3.79070826359929*^9}, {3.79070831118895*^9, 3.79070836718095*^9}, {
   3.790709101506291*^9, 3.790709101846788*^9}, {3.7943257946933804`*^9, 
   3.794325798786335*^9}, {3.7978662592007637`*^9, 3.797866327586615*^9}, {
   3.7982893080520267`*^9, 3.798289308435194*^9}, 3.926333517812097*^9},
 CellID->1895108703,ExpressionUUID->"6d0c025f-4e92-4728-983f-d74fc7e68c2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ea9c8896-1712-4fe4-94cd-9fb9a06e964b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"0bd8c04f-2360-4e1b-9cbb-f58fcfae4b16"],

Cell[TextData[{
 "[1] C. Hilbe, M. A. Nowak and K. Sigmund, \"Evolution of Extortion in \
Iterated Prisoner\[CloseCurlyQuote]s Dilemma Games,\" ",
 StyleBox["Proceedings of the National Academy of Sciences",
  FontSlant->"Italic"],
 ", ",
 StyleBox["110",
  FontWeight->"Bold"],
 "(17), 2013 pp. 6913\[Dash]6918. ",
 ButtonBox["doi:10.1073/pnas.1214834110",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1073/pnas.1214834110"], None},
  ButtonNote->"https://doi.org/10.1073/pnas.1214834110"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790707221645268*^9, 3.7907072885606318`*^9}, {
  3.7978665236346073`*^9, 3.797866539375976*^9}, {3.797866712993819*^9, 
  3.7978667275974073`*^9}},
 CellID->668586293,ExpressionUUID->"0df906af-e925-4c81-915a-a8dda6b7730c"],

Cell[TextData[{
 "[2] S. Kuhn. \"Prisoner's Dilemma.\" The Stanford Encyclopedia of \
Philosophy. (May 7, 2020) ",
 ButtonBox["plato.stanford.edu/entries/prisoner-dilemma",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://plato.stanford.edu/entries/prisoner-dilemma/"], None},
  ButtonNote->"https://plato.stanford.edu/entries/prisoner-dilemma/"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.797866618460273*^9, 3.797866632327655*^9}},
 CellID->1410536713,ExpressionUUID->"ba4e66fd-a65c-4ad6-a286-61cbfd28fda8"],

Cell[TextData[{
 "[3] W. H. Press and F. J. Dyson, \"Iterated Prisoner\[CloseCurlyQuote]s \
Dilemma Contains Strategies That Dominate Any Evolutionary Opponent,\" ",
 StyleBox["Proceedings of the National Academy of Sciences",
  FontSlant->"Italic"],
 ", ",
 StyleBox["109",
  FontWeight->"Bold"],
 "(26), 2012 pp. 10409\[Dash]10413. ",
 ButtonBox["doi:10.1073/pnas.1206569109",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1073/pnas.1206569109"], None},
  ButtonNote->"https://doi.org/10.1073/pnas.1206569109"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7907069269355288`*^9, 3.790706963796033*^9}, {
   3.790707108271555*^9, 3.7907071570383797`*^9}, {3.797866553723733*^9, 
   3.797866572586528*^9}, 3.797866654291252*^9},
 CellID->1032376502,ExpressionUUID->"bdb3e01e-741c-4785-95b0-1b20aa6289cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4cc4ba56-d503-4f94-8b22-c4aa43b6f4d2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"23551794-e781-4283-ae3f-010af8864b99"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"d358361d-784d-4294-9158-505072c1b71a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "517a83c0-473b-4019-aae1-05685175f009"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"fc6ad9fd-c01e-4b42-bcca-f7497c0ddbcd"],

Cell["prisoners dilemma", "Item",
 TaggingRules->{},
 CellID->87639950,ExpressionUUID->"e256377b-5fae-42c5-b6e8-97d9cf1efcfc"],

Cell["Markov chain", "Item",
 TaggingRules->{},
 CellID->450624928,ExpressionUUID->"042d29cf-b57a-4e47-bd5d-a6c8b0ed64f0"],

Cell["game theory", "Item",
 TaggingRules->{},
 CellID->21681708,ExpressionUUID->"40cdead5-9bad-4f76-98e5-1a6651a0c809"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7b019c6c-b726-47db-806f-4cd5e9cacefc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"a60191ca-9a5d-4a18-a940-7336375e99d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"Elementary School 3-5 Mathematics\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox[
                    "\"Ecology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox["\"Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox["\"For Kids\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox["\"High School Computer Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox["\"Business\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Microeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox["\"Classic Science Experiments\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Quantum Mechanics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Thermodynamics"}], "\" \"", 
                    StyleBox[
                    "\"Thermodynamics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Game Theory", {False, "Game Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetv3LgR711ie/3Y9dtJ7q4HBUXvgMMZLXooCvSbsn5kET+2lpsD+\
o2W6F1eKFGlpE02f31nKGk1FLXr9EP7KTGHGg7n8ZvfcP3t02AtyOeSB+u3RZ4W+WmwMZzy8AOPHr/\
Knl+JLA+2L1nMvfspV3oO20c5jzMfPty+ZvmUxywXYebvnAYHQThVSnp0+\
eVp8Ppc8pgnOdNzr9rx7vQvdNfj78qTOvf+cvrX7r2vrkUUSe65pzZ7XrwVk2nHDr93GhxTmS8n/\
EEzb9R8e0Tll1zFPNfzRvxj5+cjjyWRd6/\
FRCXtLyxjxpqHTIaFLIi5P9Edw0psNPoJk3OwvMOQP1uGRDOWhDyyv74SCWe6trL59Hv66YVIRM67/\
XhCNwY5SDN7w3Nfc6J48/\
zfBWxSCdlyfP4pVQkEVzA4rEjClvxlLa9sVhOmRT6NMxqSecr1g5LgiA4NW6MI1eeCk8WdUcLBGNla\
7o2SnE+4JksHI62N0WDfTRE/\
WMKdcsV7wzKq5mjMNMOAgEUdd94ccy1AzHWz9vVYNH9sj5WcQ6aATzK6qvmpE63+\
GHW5pu3dLbf6jnctvyAJ2u3K9fdKFjFvFjYqc/zNpyvnf1Eau0MVp5J/ci8zWJbd3b7d/\
UfBIowz3Ftpml0HCz92OGTwnoe56jjl0E9TKaDiKLxsgJNgXatPIjZKvWueT1X0JWYfwA0ha8AFZdV\
ngnx1eAsFUGaZd8czUBBOSbhv01zE4rPZ0CzvBykPl1Rd71c245Ln9IwFdvywsMDf/f+jU2/\
oZMFenQWuZ7bPwGkzuPmM1ufJmXh85LpCnY4K3X/\
LdKwSsN1VuWkwQlvpc3JdSDgDoIk9QPNxTeybknOVwbpkOdwdsoxb1Ssga5LECwr9yEIqWg/\
gSnRhVSD7VYJeCC5pnh2diSzU3EZ27H9fDP79oYpEMqkYgLUeP4iEwanW/p1LzdKps713w/OPSn+\
gDg4AmnliX/peSDitWVi715xuwD5hUBVowpK236vz0D9+so/vVXkHGTAstJU8B43I/\
Y4I3cjtr6iIwdCkW8AdzG2ff2wlr6updy6lSK1+\
9KraBQfcawbaAeLaKf8tOoTr0zP0YVYinqv8kPRaV7p7wzNM5jHLoblZQDmWLOFd1iIcT1rtEZamPL\
LwdKzVb+ibWZeS7Tv+KB3PDQIwM+o60w3NJnQglkykhRJv4R9VYi6tkucQyfMiBN0/\
Zl5FTcln31yoIokqNFaP3bm4fwnp+2GJ7J9JpuQM/\
agVwAntRv2KcJRl5D9bSkGW0YJv7niqoUUkeWOhyx3GhbaRYfOJvF8BwU/l68uzecJi4+\
VgnuEY4YAEYIcqUmd5+12icmf1oLEbVAJhFCHJULObx+jamQUovXuVKqkm1LI7DhhZt3/\
qDvT7pZJALD1DDwiwkm0d8VsV262GQmOOPcmu+\
2csZ109D1WzBwDMnEboDrqqMheHzLdyZRuDV5QJgSdvQaRVybIx8Id+\
kStzIyAXLAOcon5b1gdOiNLOuO+VG3hHj99fiEzTsPvIUM/TXE1QQLUZZ+\
B3kN2ZRXT2RjGb8PrilvErWVVjYBAK7EdI4L6z6E5rw39x+\
1VX3DV3CXJdhDkUIq2lqiNjOmCBhlNgSRTGIGMLbV//uIwMFjoxqvOaZfmRT2/eBd6fvF+\
VfIR5ZuGGNTSfS1lIJGhlclCGdqFZmNv0emlj+C4QCBye7S/HkqOgeID0zwtDmx3x/ngKsTMQUtqY+\
evgDT/LNY4Vc//r9nxSS0hiQbtgtROIS4dQzvA/\
QNv1lpKFhIYV19CQdxCZNubzBGh653eHo0TpCUMK0KX1drnsYHH1DmH/\
nOl8uggceOFneoFSimz7PJkJcEhFn2onEoiASQWyqAWQB2WHNLlFzvh2KBkUWliveQ03o6TE2pWLR/\
ivqVTqMkBT+BJyaaH/\
K5z6NASJSemgwEbpjMzvI1Wh02O5TsLqh6poAeqOyYq0vRWGTCk5IkhbsneOrEND/\
k8w2FmM1g2qxSxv9fXdC1kAH7nm4RSDSSklYMBMlNnvAOlmxwfrONJZlowhlCKUHUbiaJvkRVxL0Mb\
9eq1D9/Gi12DTq+\
UY11XJPQCzYWSKyl5OBGs4StKudSUeeVOm0G423giTVwivVtCqdUolOIylKq3S1JHvAU/\
4CBnd0eP2rxWExSCW81n/hgHO4gBlj/59JK25u3/jX6q1Amg+\
AWBGdlrnKVCErTHXIU9tuN0aZ3O4XsuCctFJvY3zsLWzd80jEYL7SSG9KTJsAziZB8pMghVAokf3fW\
giOJhKt0v16i9JtsGJ+DpSkpzXFlrUEoMY0ImYpWwA7UgrXm+\
iAtEt2HB0PLtiHymqK3ygI7COufsC52+d1K3CDNA28d+tvVAnGaJ/\
TaQqUV5E1hC9fQXEoGhTrFeVI3/2rlXEJXq4erLBp+1VTXBnOGXKZbK7zdxtFJIOZw+w7YehjqZKX+\
AplpguY6AEYBlTmrJTfKc4BZCFvDYW2BzYHcZX0MYnerI7oScTSDa4I7DFH7x7QJakrHtw5Yu6L1fP\
Zm4HOlqAD9FDK1DMxBIZztYAyNLlqCVUt7VivgyGQoeFyL0znomJ9WwGfzLZSSeXI/\
wKDtpzadxJrWHZbQc3DEafhQeJsjv1oFq0wzEY77fmQwGQuaXjxW/zttDA/bSMMEK/7/\
7BxsGUjn34Y42z79j+\
ocaR989nXM8jNvewYRCrgEs75L9532iX1UZFUbDRfBkvWTXbrxrbn8YlijEYg6Pq7lcMljE9fE0P27\
vnnwC6u0aTjpxZ1sS2boBaTFqcfwnX7Q/NuDsrLfG3GtiEvw3qt6th973I0ESX2O/\
4GkyEHMURBnF7RZCegXoCHMC3FPlpZCWiDarxybHs5QgbTpkpCDfz1EmbtWtof6EZ5usfA3GBbGgVy\
Y6Ru2+Y7u233okIu8VFkeDY8H1NQ4vPnyUvG2jzuGBa7R+WyP7uNQXV6P/j0t0mC2MgCcCcm/2vl+\
6vX9+frrweeN7De9HBJC378wgaYWZn+\
0Z1JHFKczBpsYBLEJg4xrZQv2DjD3PmdWv7l7OOAfngPTdDrvc374Kz1ow8CKYKsrVSS4sGlqDe83m\
wfq9SUAg23hp2lmWbizcO/Kkbf+VqLQ6MX1No3cZ+mB+SOfY/\
jnU9hElCxaMEJths7QKaNG8WsSlmz29Uws0Pb5kqgBNCNvKgf8ZjODsvU7v6MQsG8ag6f/\
jsP2BIu6Q="},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->232771109,ExpressionUUID->"ed1dfe8f-2d81-4886-b656-0adb3674d7fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8df27bb0-1771-4e40-b589-0cb6c5bc77d1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"33a96f93-582e-48c6-9e69-50423c204e19"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->612364796,ExpressionUUID->"874fe737-41d0-4225-b308-dafed9b0086c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f0bc394c-4240-49d9-9739-c0305dbaefc9"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"97191f2c-bede-4ece-b094-60522f94c5e4"],

Cell[TextData[ButtonBox["Prisoner's Dilemma and Some Analogs in Game Theory",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://demonstrations.wolfram.com/\
PrisonersDilemmaAndSomeAnalogsInGameTheory/"], None},
 ButtonNote->
  "https://demonstrations.wolfram.com/\
PrisonersDilemmaAndSomeAnalogsInGameTheory/"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790647204743092*^9, 3.790647265938181*^9}},
 CellID->1230812122,ExpressionUUID->"731ff388-995d-44d6-80d6-2da78f0a2084"],

Cell[TextData[ButtonBox["Iterated Games",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://demonstrations.wolfram.com/IteratedGames/"], None},
 ButtonNote->"https://demonstrations.wolfram.com/IteratedGames/"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7906472688505363`*^9, 3.790647290810276*^9}, {
  3.790647393532806*^9, 3.790647416796083*^9}, {3.790647511978544*^9, 
  3.7906475133856077`*^9}},
 CellID->1464303193,ExpressionUUID->"c833d35f-bfbf-4dc9-bfd8-3629dfd579cf"],

Cell[TextData[ButtonBox["Transition Matrices of Markov Chains",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://demonstrations.wolfram.com/TransitionMatricesOfMarkovChains/"]\
, None},
 ButtonNote->
  "https://demonstrations.wolfram.com/TransitionMatricesOfMarkovChains/"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.79064744799325*^9, 3.79064751058637*^9}},
 CellID->1428595429,ExpressionUUID->"a7abfa52-a8d5-4678-8142-42d27cd12b4b"],

Cell[TextData[ButtonBox["Finite-State, Discrete-Time Markov Chains",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://demonstrations.wolfram.com/\
FiniteStateDiscreteTimeMarkovChains/"], None},
 ButtonNote->
  "https://demonstrations.wolfram.com/FiniteStateDiscreteTimeMarkovChains/"]],\
 "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790647532536584*^9, 3.790647571054521*^9}},
 CellID->1406585113,ExpressionUUID->"128f8d7e-8701-4c5b-bc97-3ea7e6a27e7f"],

Cell[TextData[ButtonBox["Prisoner's Dilemma",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/PrisonersDilemma.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/PrisonersDilemma.html"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790647572931286*^9, 3.790647604042028*^9}},
 CellID->951426258,ExpressionUUID->"cb5f55c2-1eb7-4aae-bf72-65813303f9d1"],

Cell[TextData[ButtonBox["Markov Chain",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/MarkovChain.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/MarkovChain.html"]], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.790647761994132*^9, 3.7906477831584797`*^9}},
 CellID->1334357086,ExpressionUUID->"d1f50977-5e08-46b0-8a58-8d335a710161"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b5d37ebf-f805-4788-9510-57afb7e6cb93"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"d6c31c8e-abd6-43ed-b3b3-06ebfd21e273"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->203048737,ExpressionUUID->"0ca5270f-7238-4cb7-bb6c-d0d2df951ae3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "26661458-6e46-4335-94a1-e8974599b6a2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"cc2db882-441d-428e-9aea-294a10790113"],

Cell["2020-06-01", "Text",
 TaggingRules->{},
 CellID->107018979,ExpressionUUID->"e4293f5d-10fc-45da-9ce3-2271c6d58d0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "52e7498b-a2fb-4df7-a756-f17c6ab76f40"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"6dc7f6b3-701b-4953-840c-bbabca75ea3d"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dade9bd6-9a33-4243-aacc-580466e743d1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->180966586,ExpressionUUID->"fca7e4f4-c37b-447b-869e-957a751bba19"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->52145858,ExpressionUUID->"b23d1c70-c825-4e0a-bfbf-2edca264199c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "86815fb7-e246-46e1-8fed-a20467da3afb"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->159321921,ExpressionUUID->"f7155896-4133-4293-ad3b-9d98c727a696"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->375137771,ExpressionUUID->"9a26d207-1142-4c0a-82f6-6cfdf2e94cb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0b1db6e9-9d4f-41eb-a070-8876673c778e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->15904391,ExpressionUUID->"dac32309-77ce-4fa0-b610-99aec4db30ae"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->904163252,ExpressionUUID->"aa2929e6-c544-432a-943f-8741438677ce"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{606, 683.25},
WindowMargins->{{Automatic, 409.5}, {-84.75, Automatic}},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.926333512020804`16.346562175987486*^9, "UpdatedTimestamp" -> 
  3.926333512020854`16.346562175987494*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}, "StatusMessage" -> ""},
CreateCellID->True,
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Linux x86 (64-bit) (July 16, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"78c25faf-c87e-47ab-80e2-0c8787a20ffe"
]
